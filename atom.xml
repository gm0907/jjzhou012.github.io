<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy_z &#39;s Blog</title>
  
  <subtitle>Coding - Thinking - Sharing - Deep learning</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoururl.com/"/>
  <updated>2019-01-28T12:43:32.455Z</updated>
  <id>http://yoururl.com/</id>
  
  <author>
    <name>Andy_z</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>复杂网络：网络测度（二）</title>
    <link href="http://yoururl.com/2019/01/23/%E7%BD%91%E7%BB%9C%E6%B5%8B%E5%BA%A6%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoururl.com/2019/01/23/网络测度（二）/</id>
    <published>2019-01-22T16:01:00.000Z</published>
    <updated>2019-01-28T12:43:32.455Z</updated>
    
    <content type="html"><![CDATA[<h2 id="结点群组"><a href="#结点群组" class="headerlink" title="结点群组"></a>结点群组</h2><h3 id="团-clique"><a href="#团-clique" class="headerlink" title="团(clique)"></a>团(clique)</h3><ul><li><p>定义：指无向网络中的一个最大结点子集，在该子集中任何两个结点之间都有一条边直接相连。</p><blockquote><p>“最大”指在保证子集内每两个结点都直接相连的条件下，网络中其他结点无法再加入该子集中。</p><p>团的存在表明网络中存在一个联系紧密的子群。</p></blockquote></li></ul><h3 id="k-团-k-clique"><a href="#k-团-k-clique" class="headerlink" title="k-团(k-clique)"></a>k-团(k-clique)</h3><ul><li><p>定义：结点的一个最大子集，该子集中各个结点之间通过网络边的距离不超过$k$。</p><blockquote><p>当$k=1$时，该定义与团的原始定义一样；</p><p>但$k-团$的定义并不严谨，定义并不要求结点之间的路径全在子集中。若要求路径只能在子集中，得到的结果就是$k-党派$或$k-俱乐部$。两者的区别在于是否强制要求结点之间的路径只能在群组内部，或者是否先找到$k-团$，然后在此基础上删除那些有外部路径的团，这两种情况的最终结果可能不同。</p></blockquote></li></ul><h3 id="k-丛-k-plex"><a href="#k-丛-k-plex" class="headerlink" title="k-丛 (k-plex)"></a><strong>k-丛</strong> (k-plex)</h3><ul><li><p>定义：大小为$n$的$k-丛$是网络中结点数为$n$的最大子集，该子集的每个结点都至少和子集中另外$n-k$个结点相连。</p><blockquote><p>$k-丛$ 确定了网络的结点数$n$;</p></blockquote><blockquote><p>当$k=1$时，与最初定义的团相符，即$1-丛$就是通常意义上的团。</p><p>团思想的一般性表达：可以指定每一个结点与一定比例的其他成员有联系。</p></blockquote></li></ul><h3 id="k-核-k-core"><a href="#k-核-k-core" class="headerlink" title="k-核(k-core)"></a>k-核(k-core)</h3><ul><li><p>定义：$k-核$是网络结点的一个最大子集，该子集中每个结点至少与子集中$k$个其他结点相连。</p><blockquote><p>$k-核$不确定网络的结点数；</p></blockquote><blockquote><p>当子集结点数为$n$时，$k-核$与$(n-k)-丛$是相同的。</p><p>但给定$k$值的所有$k-核$的集合与$k-丛$的集合并不相等，因为不同的$k-核$的子集结点数$n$不同。</p><p>与$k-丛$不同，$k-核$彼此之间不能重合，根据定义，若两个$k-核$彼此共享同一个或多个结点，就可以合并生成一个更大的$k-核$。</p></blockquote><blockquote><p>寻找网络中的$k-核$的简单算法：从整个网络开始，将度数小于$k$的结点不断删除，此时会使网络中一些其他结点（即那些刚刚与删除结点相连的结点）度数减小。然后继续检查网络，删除度数小于$k$的结点，依次重复不断删除网络中度数小于$k$的结点，直到不存在这样的结点。此时剩下的网络就是一个$k-核$或$k-核$的集合。</p></blockquote></li></ul><h3 id="k-分支-k-component"><a href="#k-分支-k-component" class="headerlink" title="k-分支(k-component)"></a>k-分支(k-component)</h3><p>无向网络的分支是网络结点的一个最大子集，该子集中的结点彼此间通过特定路径相连。</p><ul><li><p>定义1：$k-分支$有时也称$k-连通分支$，是网络结点的一个最大子集，该子集中的结点彼此之间能够通过至少$k$条结点独立路径相连。</p><blockquote><p>若两条路径之间除了起点与终点之外，没有共享的结点，那么这两条路径是结点独立路径。</p><p>对于$k=2$或$k=3$的情况，分别称为<strong>二分支</strong>和<strong>三分支</strong>。</p></blockquote></li><li><p>定义2：$k-分支$是网络结点的一个最大子集，若将该子集中的任意两个结点之间的连接断开，至少需要删除$k$个结点。</p><blockquote><p>两个结点之间的节点独立路径数等于结点之间的结点割集大小，也就是将两个结点连接断开需要删除的结点数。</p></blockquote></li></ul><p>$k-分支$的思想与网络鲁棒性相关联。例如在一个Internet的数据网络中，两个结点之间的结点独立路径数同时也是这两个结点之间数据传输的独立路由数，它们之间割集的规模就是切断这两个终端之间数据传输时需要舍弃或去除的网络结点（路由器）数量。</p><blockquote><p>这样，由两条边独立路径相连的两个结点之间的连接不会因为单一的路由器故障而断开；由三条边独立路径相连的两个结点之间的连接不会因为任意两个路由器故障而断开。</p></blockquote><h2 id="传递性"><a href="#传递性" class="headerlink" title="传递性"></a>传递性</h2><p>网络传递性的数学表示为：若$a\circ b$和$b\circ c$，那么$a \circ c$。 在社会网络中的表述为：若$u$认识$v$，$v$认识$w$，那么在网络中存在一条由两条边构成的路径$uvw$。若$u$也认识$w$，则称该路径是闭合的，即该路径在网络中形成一个长度为3的循环，或称三角。三个结点形成一个<strong>闭合三元组</strong>。</p><h3 id="聚类系数"><a href="#聚类系数" class="headerlink" title="聚类系数"></a>聚类系数</h3><ul><li><p>定义1：网络中所有长度为2的路径中闭合路径所占的比例；<br>$$<br>C= \frac{(长度为2的路径中的闭合路径数)}{(长度为2的路径数)}<br>$$<br>其取值范围在0到1之间。若$C=1$，则表明该网络具有完全传递性，网络中的所有分支都是团。</p><p>若$C=0$，则表明网络中没有闭合三元组，如树、正方形点阵。</p></li><li><p>定义2：考虑网络路径的方向性，经过相同结点但方向不同的两条路径需要分别统计。<br>$$<br>C= \frac{(三角形数)\times 6}{(长度为2的路径数)}<br>$$</p></li><li><p>定义3：有公共邻居结点的两个结点，本身也互为邻居结点的平均概率。<br>$$<br>C=\frac{(三角形数)\times 3}{(连通三元组数)}<br>$$<br>其中”连通三元组“是指在结点$uvw$三者之间存在边$(u,v)$和$(v,w)$，边$(u,w)$可以存在也可不存在。分子中的系数3指每个三角形中都包含3个连通三元组。</p></li></ul><h3 id="局部聚类"><a href="#局部聚类" class="headerlink" title="局部聚类"></a>局部聚类</h3><p>针对单个结点$i$的聚类系数：</p><ul><li><p>定义：<br>$$<br>C_i=\frac{（结点i的邻居结点中直接相连的结点对数）}{（结点i的邻居结点对总数）}<br>$$</p><blockquote><p>结点$i$的邻居结点对总数为$\frac{1}{2} k_i(k_i-1)$, 其中$k_i$是结点$i$的度。</p><p>许多研究中发现，度较大的结点其局部聚类系数均较低。</p></blockquote><blockquote><p>局部聚类系数可以用于指示网络中是否存在所谓的<strong>结构洞</strong>。</p><p><a href="https://imgchr.com/i/kulc0P" target="_blank" rel="noopener"><img src="images/kulc0P.png" alt="kulc0P.png"></a></p><p>如果关注网络中的信息或其他流量的有效传播，结构洞是有害的，因为他们会减少信息在网络中的路由数；</p><p>如果关注朋友之间的联系，结构洞对于结点$i$来说是有益的，因为结构洞使$i$在其邻居结点之间的信息流动中起到主导作用。因为如果$i$的两个朋友没有直接相连，那么他们彼此之间的信息流动就必须通过与双方都有联系的$i$，因此$i$就可以控制信息流动。</p><p>因此局部聚类系数也可以作为一种中心性测度，影响力越大的个体的局部聚类系数取值越小。</p></blockquote></li></ul><h3 id="冗余"><a href="#冗余" class="headerlink" title="冗余"></a>冗余</h3><ul><li><p>简化定义：结点$i$的冗余$R_i$是结点$i$的邻居结点之间直接连接数的平均值。</p><blockquote><p>结点冗余的最小值是0，最大值是 $k_i-1$ ；</p></blockquote><p>结点$i$ 的邻居结点之间的平均连接数为$R_i$，直接连接总数为$\frac{1}{2}k_i R_i$，邻居结点对的总数为$\frac{1}{2}k_i(k_i-1)$。 </p><p>局部聚类系数与冗余的关系：<br>$$<br>C_i= \frac{\frac{1}{2}k_iR_i}{\frac{1}{2}k_i(k_i-1)} = \frac{R_i}{k_i-1}<br>$$<br>全局聚类系数：利用所有结点的局部聚类系数均值计算整个网络的聚类系数：<br>$$<br>C_{WS}= \frac{1}{n} \sum_{i=1}^n C_i<br>$$</p></li></ul><h2 id="相互性"><a href="#相互性" class="headerlink" title="相互性"></a>相互性</h2><p>相互性度量了有向图中长度为2的闭合循环的频率，该频率描述了两个结点之间相互指向的概率。</p><blockquote><p>如果结点$v$和结点$u$相连接，$u$通过连接到$v$来表现出相互性。</p></blockquote><ul><li><p>定义：相互性$r$被定义为所有边中相互边所占的比例。</p><p>当且仅当结点$i$到$j$有双向边时，邻接矩阵中元素的乘积$A_{ij}A_{ji}$为1，否则为0。通过对所有结点对求和，得到相互性的计算表达：<br>$$<br>r = \frac{1}{m} \sum_{ij} A_{ij}A_{ji} = \frac{1}{m} {\bf Tr A^2}<br>$$<br>其中，$m$为网络中有向边的总数。</p></li></ul><h2 id="有符号边和结构平衡"><a href="#有符号边和结构平衡" class="headerlink" title="有符号边和结构平衡"></a>有符号边和结构平衡</h2><p>可利用有向图来表示社交网络中各结点之间的关系，如朋友或敌对关系。每条边只有两种情况，+边代表朋友关系，-边代表敌对关系。这样的网络称为<strong>有符号网络</strong>，其边为<strong>有符号边</strong>。</p><p><a href="https://imgchr.com/i/kKeYfs" target="_blank" rel="noopener"><img src="images/kKeYfs.png" alt="kKeYfs.png"></a></p><p>上图两种稳定组合（a、b）与两种不稳定组合（c、d）的差别是，稳定组合的循环中有偶数个负号。</p><ul><li><p>推广：</p><ul><li><p>定义：网络若只包含带有偶数个负号的循环，则称其<strong>结构平衡</strong>。</p></li><li><p>推论：一个平衡网络能够被划分为若干个连通结点群组，且群组内结点之间的连接都是正的，而不同群组之间的连接都是负的。</p><blockquote><p>群组可由单个结点组成，也可由多个结点组成；群组可以是一个，也可以是多个；</p><p><a href="https://imgchr.com/i/kKnLef" target="_blank" rel="noopener"><img src="images/kKnLef.png" alt="kKnLef.png"></a></p><p>能像上述划分成群组的网络被认为是<strong>可聚类的</strong>。 </p><p>网络中每个循环都包含偶数个负号。虚线表示将网络划分为不同的群组。</p><p>为网络中的结点涂色，结点的颜色只有两种情况，从任意一个结点开始，根据一下算法为结点涂色：</p><ol><li>如果结点$v$与$u$有一条正连接，且$u$已经涂上了颜色，那么$v$的颜色与$u$相同；</li><li>如果结点$v$与$u$有一条负连接，且$u$已经涂上了颜色，那么$v$的颜色与$u$相反；</li></ol><p>如果在为网络涂色时遇到一个已经涂上颜色的结点，说明在网络中一定还存在另一条从起点到达该结点的路径，因此在网络中至少存在一个或多个包含该结点的循环。如果网络是平衡的，该结点所属的每个循环就一定有偶数条负边。如果该结点的颜色与将要涂的颜色有冲突，那么网络必然是不平衡的。</p></blockquote></li></ul></li></ul><ul><li><p>注意：</p><blockquote><p>可聚类定理的逆定理并不成立，例如下面的网络：</p><p><a href="https://imgchr.com/i/kKuytg" target="_blank" rel="noopener"><img src="images/kKuytg.png" alt="kKuytg.png"></a></p><p>上述网络有三个结点，三个结点之间彼此敌对，因此网络循环中有奇数条负边，但可以将该网络分为三个不同的群组，每个结点构成一个群组。该网络可聚类，但不平衡。</p></blockquote></li></ul><h2 id="相似性"><a href="#相似性" class="headerlink" title="相似性"></a>相似性</h2><p>考虑如何利用网络结构中包含的信息来确定网络中的结点之间的相似性。</p><p>构造网络相似性测度的两种基本方法：</p><ul><li>结构等价：<strong>两个结点间共有邻居结点的数量</strong>定义了两结点之间的相似程度；</li><li>规则等价：通过比较<strong>两个结点的邻居结点的相似程度</strong>来确定结点间的相似度，而不是通过共有的邻居结点来确定的；</li></ul><p><a href="https://imgchr.com/i/kKNn9P" target="_blank" rel="noopener"><img src="images/kKNn9P.png" alt="kKNn9P.png"></a></p><h3 id="结构等价"><a href="#结构等价" class="headerlink" title="结构等价"></a>结构等价</h3><h4 id="余弦相似性"><a href="#余弦相似性" class="headerlink" title="余弦相似性"></a>余弦相似性</h4><p>在<strong>无向网络</strong>中，结点$i$和$j$的共享邻居结点数表示为$n_{ij}$，则有<br>$$<br>n_{ij}=\sum_k A_{ik} A_{kj}<br>$$</p><blockquote><p>考虑一种归一化的方法，来合理定义相似性：不仅需要考虑网络的结点总数，也要考虑目标结点的度。</p><p><strong>余弦相似性（Salton 余弦）</strong>: 将邻接矩阵的第$i$行和第$j$行看成两个向量，将两个向量之间的夹角余弦值用于相似性度量。</p><p>无向网络中对应邻接矩阵中两行的点积就是 $\sum_k A_{ik} A_{kj}$ ；</p></blockquote><p>因此相似性测度是：<br>$$<br>\sigma_{ij} = \cos\theta = \frac{\sum_k A_{ik}A_{kj}}{\sqrt{\sum_k A_{ik}^2} \sqrt{\sum_k A_{jk}^2}}<br>$$<br>假设网络是无权无向网络， 因此 $\forall i,j$ ,   有 $A_{ij}^2 = A_{ij}$ , 即 $\sum_k A_{ik}^2 = \sum_k A_{ik} =k_i$ ，其中 $k_i$ 是结点 $i$ 的度。</p><p>于是：<br>$$<br>\sigma_{ij} = \frac{\sum_k A_{ik} A_{kj}}{\sqrt{k_i k_j}} = \frac{n_{ij}}{\sqrt{k_i k_j}}<br>$$<br>因此， 结点$i$和结点$j$的余弦相似性就是<strong>两个结点的共同邻居结点数与它们各自度的几何平均数的商</strong> 。</p><blockquote><p>严格来讲，若两个结点或其中一个结点的度为0，那么它们的余弦相似性就无定义， $\sigma_{ij} = 0$。</p></blockquote><h4 id="Jaccard-相似性"><a href="#Jaccard-相似性" class="headerlink" title="Jaccard 相似性"></a>Jaccard 相似性</h4><ul><li>定义：结点$i$和结点$j$ 的<strong>共同邻居结点数与它们所有邻居节点数的商</strong>。<br>$$<br>\sigma_{Jaccard}(i,j) = \frac{|N(i) \cap N(j)|}{|N(i) \cup N(j)|} = \frac{\sum_k A_{ik} A_{kj}}{k_i + k_j - \sum_k A_{ik} A_{kj}}<br>$$</li></ul><h4 id="皮尔逊相关系数"><a href="#皮尔逊相关系数" class="headerlink" title="皮尔逊相关系数"></a>皮尔逊相关系数</h4><p>对共享邻居结点数进行归一化的另一种方法是：</p><p><strong>将其与一个期望值进行比较，该期望值是指网络中的结点随机选择邻居结点的条件下，共享邻居结点数的期望值。</strong></p><p>假设结点$i$和结点$j$各自的度是$k_i$和$k_j$，两个结点完全随机选取邻居结点。结点$i$从网络$n$个结点中（在不包含自环的网络中，是从$n-1$个结点中选取，但对于大规模网络而言，误差忽略不计）随机均匀选取$k_i$个结点作为邻居结点，每个结点成为结点$i$邻居结点的概率为 $k_i /n$ ，结点$j$有$k_j$个邻居结点，则结点$i$和结点$j$的共享邻居结点的期望值为 $k_i k_j /n$ 。</p><p>合理的归一化是用<strong>两个结点的实际共享邻居结点数减去随机选择邻居结点条件下两者共享邻居结点的期望值</strong>，即<br>$$<br>\sum_k A_{ik} A_{jk} - \frac{k_i k_j}{n} = \sum_k A_{ik} A_{jk} - n \frac{1}{n} \sum_k A_{ik} \frac{1}{n} \sum_l A_{jl} \ = \sum_k A_{ik} A_{jk} - n\langle A_i \rangle \langle A_j \rangle \ = \sum_k [A_{ik}A_{jk} - \langle A_i \rangle \langle A_j \rangle ] \ = \sum_k [A_{ik} A_{jk} - \langle A_i \rangle \langle A_j \rangle - \langle A_i \rangle \langle A_j \rangle + \langle A_i \rangle \langle A_j \rangle]\ =  \sum_k [A_{ik} A_{jk} - \langle A_{ik} \rangle \langle A_j \rangle - \langle A_i \rangle \langle A_{jk} \rangle + \langle A_i \rangle \langle A_j \rangle]\ =\sum_k(A_{ik} - \langle A_i \rangle)(A_{jk} - \langle A_j \rangle)<br>$$</p><p>其中， $\langle A_i \rangle = \frac{1}{n} \sum_k A_{ik}$  。 $\sum_k(A_{ik} - \langle A_i \rangle)(A_{jk} - \langle A_j \rangle)$ 项为$A_i$和$A_j$之间的协方差，对协方差进行归一化<br>$$<br>\sigma_{pearson}(i,j) = \frac{cov(A_{i},A_{j})}{\sigma_i \sigma_j} = \frac{\sum_k(A_{ik} - \langle A_i \rangle)(A_{jk} - \langle A_j \rangle)}{\sqrt{\sum_k(A_{ik} - \langle A_i \rangle)^2} \sqrt{\sum_k(A_{jk} - \langle A_j \rangle)^2} }<br>$$<br>取值范围介于 $[-1,1]$ 之间，正值表示当结点$i$将结点$j$作为朋友时，结点$j$也可能将结点$i$当作朋友。负值相反，零值表示无线性关系。</p><h4 id="除以期望值"><a href="#除以期望值" class="headerlink" title="除以期望值"></a>除以期望值</h4><p>通过除以期望值来对两个结点的共享邻居结点数$n_{ij}$进行归一化，<br>$$<br>\frac{n_{ij}}{k_i k_j /n} = n \frac{\sum_k A_{ik} A_{jk}}{\sum_k A_{ik} \sum_k A_{jk}}<br>$$</p><h4 id="欧几里得距离"><a href="#欧几里得距离" class="headerlink" title="欧几里得距离"></a>欧几里得距离</h4><ul><li>定义：两个结点之间邻居结点数的差值。<br>$$<br>d_{ij} = \sum_k (A_{ik} -A_{jk})^2<br>$$<br>归一化：<br>$$<br>\frac{\sum_k (A_{ik} -A_{jk})^2}{k_i +k_j} = \frac{\sum_k (A_{ik} +A_{jk} -2A_{ik}A_{jk})}{k_i +k_j} = 1-2 \frac{n_{ij}}{k_i +k_j}<br>$$</li></ul><h3 id="规则等价"><a href="#规则等价" class="headerlink" title="规则等价"></a>规则等价</h3><p>基本思想是：若结点$i$和结点$j$各自的邻居结点$k$和$l$本身具有较高的相似性，则$i$和$j$的相似性也较高。</p><p><a href="https://imgchr.com/i/kKXsZ6" target="_blank" rel="noopener"><img src="images/kKXsZ6.png" alt="kKXsZ6.png"></a></p><ul><li><p>原始式： 结点$i$和结点$j$各自的邻居结点$k$和$l$本身具有较高的相似性，则$i$和$j$的相似性也较高。<br>$$<br>\sigma_{ij} = \alpha \sum_{kl} A_{ik} A_{jl} \sigma_{kl}   \ \Longleftrightarrow \<br>{\bf σ = \alpha A σ  A}<br>$$<br>赋予结点“自相似性”，引入对角元项：<br>$$<br>\sigma_{ij} = \alpha \sum_{kl} A_{ik} A_{jl} \sigma_{kl} + \delta_{ij}  \ \Longleftrightarrow \<br>{\bf σ = \alpha A σ  A + I}<br>$$</p><blockquote><p>存在问题：</p><p>假设可通过重复迭代求解，首先确定初始值 ${\bf σ^{(0)}=0}$，迭代结果为：<br>$$<br>{\bf σ^{(1)} = I}  \<br>{\bf σ^{(2)} = \alpha A^2 + I}  \<br>{\bf σ^{(3)} = \alpha^2 A^4 + \alpha A^2 +I}  \<br>$$<br>多次迭代取极限后，得到的邻接矩阵的偶数次幂的总和。因此该相似性测度本质上式结点之间偶数长度的路径数的加权和。</p></blockquote></li></ul><ul><li><p>放宽式： 如果结点$i$的邻居结点$k$与结点$j$相似，那么$i$与$j$相似。</p><p>同时再次考虑“自相似性”：<br>$$<br>\sigma_{ij} = \alpha \sum_k A_{ik} \sigma_{kj} + \delta_{ij}  \  \Longleftrightarrow<br>{\bf σ=\alpha A σ + I}<br>$$</p></li></ul><blockquote><p>利用反复迭代的方法进行求解得：<br>$$<br>{\bf σ^{(1)} = I}  \<br>{\bf σ^{(2)} = \alpha A + I}  \<br>{\bf σ^{(3)} = \alpha^2 A^2 + \alpha A +I}  \<br>$$<br>当迭代次数无穷大时，得到<br>$$<br>{\bf σ = \sum_{m=0}^{\infty} (\alpha A)^m = (I-\alpha A)^{-1}}<br>$$<br>至此，相似性测度包括了所有长度的路径数，实际上，该相似性公式计算结点$i$和$j$之间的所有路径加权数值，长度为$r$的路径权重为$\alpha^r$。 由于$\alpha &lt;1$，因此路径越长权重越小。</p></blockquote><p>  上述相似性测度倾向于赋予那些度较大的结点以较高的相似性，但这存在以下问题：</p><blockquote><ol><li>相比于朋友较少的人，朋友更多的人被认为与其他人更相似；（度较大）</li><li>两个没有朋友的隐士在某种程度上也有一定相似性；（度较少）</li></ol></blockquote><p>  因此，将相似性除以结点的度，来避免因偏向高度数结点而导致的偏差：<br>  $$<br>  \sigma_{ij} = \frac{\alpha}{k_i} \sum_k A_{ik} \sigma_{kj} + \delta_{ij}   \ \Longleftrightarrow \<br>  {\bf σ=\alpha D^{-1} A σ + I}<br>  $$<br>  其中， ${\bf D}$ 是元素为 $D_{ii} = k_i$ 的对角矩阵。<br>  $$<br>  {\bf σ=(I-\alpha D^{-1} A)^{-1} = (D-\alpha A)^{-1} D}<br>  $$</p><h2 id="同质性和同配混合"><a href="#同质性和同配混合" class="headerlink" title="同质性和同配混合"></a>同质性和同配混合</h2><p>人们倾向于选择那些他们认为与其自身在某些方面相似的人作为朋友，这种倾向性称为<strong>同质性</strong>或者<strong>同配混合</strong></p><p>。</p><h3 id="依据离散特征的同配混合"><a href="#依据离散特征的同配混合" class="headerlink" title="依据离散特征的同配混合"></a>依据离散特征的同配混合</h3><p>网络结点根据某个特征分类，且该特征的取值是一个有限集合，且特征无序。</p><p>首先找出连接同类结点的边所占的比例，然后减去在不考虑结点类型时，随机连接的边中，连接两个同类结点的边所占比例的期望值。</p><p>令$c_i$表示结点$i$的类型，类型用整数值$1,…,n$表示，其中$n_c$是结点类型总数，那么同类结点之间的边数总和表示为<br>$$<br>\sum_{边(i,j)} \delta(c_i,c_j) = \frac{1}{2} \sum_{ij} A_{ij} \delta(c_i,c_j)<br>$$<br>其中$\delta(m,n)$是克罗内克$\delta$函数，将系数设定为$\frac{1}{2}$，是因为结点$i,j$之间的边被计算了两次。</p><p>计算随机条件下同类结点之间边的期望值，考虑连接到结点$i$的一条特定边，该结点的度为$k_i$。根据定义，整个网络中有$2m$个边的端点，其中$m$是边总数，若所有连接都是随机的，特定边两端分别连接到度为$k_i$的结点$i$和度为 $k_j$ 的结点$j$的概率为$k_i k_j /{2m}$ 。进而同类结点之间的边期望值为：<br>$$<br>\frac{1}{2} \sum_{ij} \frac{k_i k_j}{2m} \delta (c_i, c_j)<br>$$<br>网络中同类结点之间边的实际值与期望值之差为：<br>$$<br>\frac{1}{2} \sum_{ij} A_{ij} \delta(c_i,c_j) - \frac{1}{2}\sum_{ij} \frac{k_i k_j}{2m} \delta(c_i,c_j) = \frac{1}{2} \sum_{ij} (A_{ij} - \frac{k_i k_j}{2m}) \delta(c_i,c_j)<br>$$<br> 计算比例：<br>$$<br>Q = \frac{1}{2m} \sum_{ij} (A_{ij} - \frac{k_i k_j}{2m}) \delta(c_i,c_j)<br>$$<br>$Q$ <strong>为模块度，用来度量网络中同类结点之间的连接程度</strong> 。$Q$值为正说明网络是同配混合的，$Q$值为负说明网络是异配混合的。</p><p>式中变量 $B_{ij} = A_{ij} - \frac{k_i k_j}{2m}$ 可构造模块度矩阵$\bf B$。</p><blockquote><p>模块度$Q$值总小于1，根据网络中群组的规模和结点度数，$Q$的最大值可能会远小于1。需要对$Q$值进行归一化。</p></blockquote><p>在全同配混合网络中，边所连接的结点都是同类结点，因此若$A_{ij}=1$，则$\delta (c_i,c_j)=1$。 意味着式(28)第一项和为$2m$，全同配混合网络模块度值为<br>$$<br>Q_{max} = \frac{1}{2m} (2m - \sum_{ij} \frac{k_i k_j}{2m} \delta(c_i,c_j))<br>$$<br>模块度归一化值为：<br>$$<br>\frac{Q}{Q_{max}} = \frac{\sum_{ij} (A_{ij} - k_i k_j /2m) \delta(c_i,c_j)}{2m - \sum_{ij}(k_i k_j /2m)\delta(c_i,c_j)}<br>$$<br>该变量有时称为同配系数，对于全同配混合网络，该变量取最大值为1。</p><ul><li><p>模块度的另一种形式：</p><ul><li>连接类型$r$和类型$s$的结点的边所占的比例：<br>$$<br>e_{rs} = \frac{1}{2m} \sum_{ij} A_{ij} \delta(c_i,r) \delta(c_j,s)<br>$$</li></ul></li></ul><ul><li><p>连接到类型$r$的结点的边所占的比例：<br>$$<br>\delta(c_i,c_j) = \sum_r \delta(c_i,r) \delta(c_j, r)<br>$$</p></li><li><p>$$<br>\delta (c_i,c_j) = \sum_r \delta(c_i,r) \delta(c_j, r)<br>$$</p><p>推导得<br>$$<br>Q = \frac{1}{2m} \sum_{ij} (A_{ij}-\frac{k_i k_j}{2m}) \sum_r \delta(c_i,r) \delta(c_j,r) \ = \sum_r [\frac{1}{2m} \sum_{ij} A_{ij} \delta(c_i,r) \delta(c_j,r) - \frac{1}{2m} \sum_i k_i \delta(c_i,r) \frac{1}{2m} \sum_j k_j \delta(c_j, r)] \<br>= \sum_r (e_{rr} - a_r^2)<br>$$</p><blockquote><p>这种模块度形式适用于 当网络数据包括边列表和边端点所对应的结点类型，但不包含结点度的确切信息的情况。</p></blockquote></li></ul><h3 id="依据标量特征的同配混合"><a href="#依据标量特征的同配混合" class="headerlink" title="依据标量特征的同配混合"></a>依据标量特征的同配混合</h3><p>标量特征具有确定的顺序，根据标量的数值，可以指出两个结点在什么情况下是完全相同的，也可指出在什么情况下是近似相同的。若网络中的结点在有某种标量特征的值相似时连接在一起，而当值不同时则较少连接在一起，那么认为该网络是依据该标量特征同配混合的。也可以称该网络是依据该标量特征<strong>分层</strong>的。</p><p>利用协方差：</p><ul><li>$x_i$ : 结点$i$的标量值；</li><li><p>$(x_i,x_j)$：网络中每条边$(i,j)​$的两个端点值；</p></li><li><p>$\mu$：某条边的端点值$x_i​$的均值；</p></li></ul><p>$$<br>\mu = \frac{\sum_{ij} A_{ij}x_i}{\sum_{ij}A_{ij}} = \frac{\sum_i k_i x_i}{\sum_i k_i} = \frac{1}{2m} \sum_i k_ix_i<br>$$</p><p>该均值对所有边取平均。$x_i$与$x_j$对所有边的协方差为;<br>$$<br>cov(x_i,x_j) = \frac{\sum_{ij} A_{ij}(x_i -\mu)(x_j -\mu)}{\sum_{ij} A_{ij}} \<br>= \frac{1}{2m} \sum_{ij} A_{ij} (x_ix_j - \mu x_i - \mu x_j + \mu^2) \<br>= \frac{1}{2m} \sum_{ij} A_{ij}x_ix_j - \mu^2 \<br>= \frac{1}{2m} \sum_{ij} A_{ij}x_ix_j - \frac{1}{(2m)^2} \sum_{ij} k_i k_j x_i x_j \<br>= \frac{1}{2m} \sum_{ij} (A_{ij} - \frac{k_ik_j}{2m}) x_ix_j<br>$$<br>当一条边的两个端点$x_i,x_j$同时为大或同时为小时，协方差为正；一大一小时协方差为负。即，当同配混合时协方差为正，异配混合时协方差为负。</p><p>归一化可以使网络全同配混合时网络测度为1，所谓全同配混合是指网络中所有边都位于值为$x_i$的结点之间。令$x_j=x_i$，给出全同配混合网络的协方差值为：<br>$$<br>\frac{1}{2m} \sum_{ij} (A_{ij}x_i^2 - \frac{k_ik_j}{2m}x_ix_j) = \frac{1}{2m} \sum_{ij} (k_i \delta_{ij} - \frac{k_ik_j}{2m})x_ix_j<br>$$<br>归一化：<br>$$<br>r= \frac{\sum_{ij} (A_{ij}-k_ik_j/2m)x_ix_j}{\sum_{ij} (k_i \delta_{ij} - k_ik_j/2m)x_ix_j}<br>$$</p><h3 id="依据度的同配混合"><a href="#依据度的同配混合" class="headerlink" title="依据度的同配混合"></a>依据度的同配混合</h3><p>依据度的同配混合是依据标量特征的同配混合的一个特例，且受到特别关注。</p><p>依据度的同配混合网络中，高度数的结点倾向于与其他高度数结点相连；低度数的结点倾向于与其他低度数结点相连。</p><p>同配网络中，度数大的结点倾向于聚集在一起的网络中，我们希望得到网络中这些度数大的结点构成的结点块或核，他们周围是一些度小的结点构成的低密度<strong>边缘</strong>。这种<strong>核心/边缘结构</strong>是社会网络的普遍特征。</p><p>异配网络中，度数大的结点倾心于与度数小的结点连接，由此在网络中形成明显的星形结构特征。异配网络通常不具有核心/边缘特征，但结点分布更均匀。</p><p>依据度的同配混合同样可以通过标量特征方法进行度量。<br>$$<br>cov(k_i,k_j) = \frac{1}{2m} \sum_{ij} (A_{ij} - \frac{k_ik_j}{2m}) k_ik_j<br>$$<br>利用协方差最大值进行归一化，<br>$$<br>r= \frac{\sum_{ij} (A_{ij}-k_ik_j/2m)k_i k_j}{\sum_{ij} (k_i \delta_{ij} - k_ik_j/2m)k_i k_j}<br>$$</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;结点群组&quot;&gt;&lt;a href=&quot;#结点群组&quot; class=&quot;headerlink&quot; title=&quot;结点群组&quot;&gt;&lt;/a&gt;结点群组&lt;/h2&gt;&lt;h3 id=&quot;团-clique&quot;&gt;&lt;a href=&quot;#团-clique&quot; class=&quot;headerlink&quot; title=&quot;团
      
    
    </summary>
    
      <category term="复杂网络" scheme="http://yoururl.com/categories/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Networks" scheme="http://yoururl.com/tags/Networks/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之Transparse模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BTransparse/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之Transparse/</id>
    <published>2019-01-19T16:09:00.000Z</published>
    <updated>2019-01-26T09:15:30.360Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Transparse"><a href="#Transparse" class="headerlink" title="Transparse"></a>Transparse</h1><p>论文地址：<a href="http://www.aaai.org/ocs/index.php/AAAI/AAAI16/paper/download/11982/11693" target="_blank" rel="noopener">http://www.aaai.org/ocs/index.php/AAAI/AAAI16/paper/download/11982/11693</a></p><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><p>KG中面临的两个主要问题，分别是 <strong>Heterogeneity（异构性）</strong>和 <strong>Imbalance（不平衡性）</strong>：</p><ul><li>Heterogeneity： 知识图谱中不同关系连接的实体（节点）数量不同；</li><li>Imbalance：同一关系连接的头尾实体（节点）数量不同；</li></ul><p><img src="1543452994620.png" alt="1543452994620"></p><blockquote><p>上图展示了子图FB15k的数据结构，可以看出：</p><ul><li>不同关系的复杂性差异很大；</li><li>不平衡关系在知识图谱中占了很大比例；</li></ul><p>早期模型未关注这两个问题，用同样的方法构建关系。</p><p><strong>异构性可能导致简单或复杂关系的过拟合；关系的不平衡性表明平等的对待头尾实体是不合理的；</strong></p></blockquote><p>因此提出了两种模型来解决这两个问题：</p><p>为克服异质性，我们提出了一种<strong>TranSparse(share)</strong>模型，其中转移矩阵的稀疏程度由关系所链接的实体对的数量决定，关系的两边共享相同的转移矩阵。其中，复杂关系的转移矩阵要比简单关系的转移矩阵稀疏。</p><p>为克服不平衡性，对TranSparse(share)模型修改，提出了<strong>TranSparse(separate)</strong>模型，该模型中每个关系有两个分离稀疏转移矩阵，一个对头部实体一个对尾部实体，稀疏程度由关系连接的实体数量决定。</p><blockquote><p><strong>Sparse Matrix</strong>：稀疏矩阵中大多数元素为0，0元素占总元素的比例称为稀疏程度（$\theta$）,用$M(\theta)$表示稀疏程度为 $\theta​$ 的矩阵，稀疏矩阵更容易压缩，需要更少的存储空间，且只有非零元参与计算，减少计算复杂度。下图展示了结构化和非结构化数据：</p><p><img src="1543457888325.png" alt="1543457888325"></p><p>结构化模式有助于向量矩阵运算，而非结构化模式则不是。因此，结构化模式可以使我们的模型更容易地扩展到大型知识图，而非结构化模式更多的用在其他文献中，有更好的实验结果。</p></blockquote><blockquote><p><strong>稀疏矩阵 VS 低秩矩阵</strong></p><p>我们需要分别使用自由度高和自由度低的矩阵来学习复杂关系和简单关系。权重矩阵的自由度是指独立变量的个数。对于权矩阵M，低秩和稀疏都可以降低自由度，因为它们都是对M的约束。具体来说，低秩强制一些变量满足特定的约束，使得M中的变量不能被自由分配。这样，自由度就降低了。对于稀疏矩阵，我们让一些元素为零，在训练过程中不改变它们的值，另一些元素为自由变量，可以通过训练来学习。因此，自由度就是通过训练学会的变量的数量。但是稀疏矩阵更适合我们的任务有两个原因：</p><ul><li>稀疏矩阵比低秩矩阵更灵活，假设 $M \in {\Bbb R^{m<em>n} }$,  $rank(M) \leq \min (m,n)$ 。 因为秩能控制自由度（$m</em>n$矩阵秩为$k$，有自由度 $k(m+n)-k^2$ ），如果用低秩去控制自由度，只能获得 $\min (m,n)$个低秩矩阵；若用稀疏矩阵去控制自由度，能获得 $m*n$ 个稀疏矩阵；</li><li>稀疏矩阵比低秩矩阵更高效。稀疏矩阵中仅非零元参与计算，减少了计算复杂度。而且稀疏矩阵更容易迁移到大型知识图谱上； </li></ul></blockquote><h3 id="TranSparse"><a href="#TranSparse" class="headerlink" title="TranSparse"></a>TranSparse</h3><h4 id="TranSparse-share"><a href="#TranSparse-share" class="headerlink" title="TranSparse(share)"></a>TranSparse(share)</h4><ul><li><p>$M_r(\theta_r)$：转移矩阵；</p></li><li><p>$\bf r$：每个关系$r$的转移向量；</p></li><li><p>$N_r$：关系$r$连接的实体对数量；</p></li><li><p>$N_{r^*}$：$N_r$中最大的数量；</p></li><li><p>$\theta_{min}$：$M_{r^*}$的最小稀疏度，为一个超平面，$0 \leq \theta_{min} \leq 1$;</p><p>转移矩阵的稀疏度被定义为：</p><p>$$<br>\theta_r = 1-(1-\theta_{min})N_r/N_{r^*}<br>$$</p><p>投影向量：</p><p>$$<br>{\bf h}_p = {\bf M}_r(\theta_r){\bf h} \<br>{\bf t}_p = {\bf M}_r(\theta_r){\bf t}<br>$$</p><p>其中：$M_r(\theta_r) \in {\Bbb R^{m*n} }$, ${\bf h,t} \in {\Bbb R^n}$, ${\Bbb h}_p, {\Bbb t}_p \in {\Bbb R^m}$.</p></li></ul><h4 id="TranSparse-separate"><a href="#TranSparse-separate" class="headerlink" title="TranSparse(separate)"></a>TranSparse(separate)</h4><ul><li><p>$M_r^h(\theta_r^h), M_r^t(\theta_r^t)$：头尾实体转移矩阵；</p></li><li><p>$N_r^l (l=h,t)$：关系$r$下$l$对应实体的数量；</p></li><li><p>$N_{r^<em>}^{l^</em>}$ : $N_r^l$ 中最大数量；</p></li><li><p>$\theta_{min}$ : $M_{r^<em>}^{l^</em>}$ 的最小稀疏度，$0 \leq \theta_{min} \leq 1$;</p><p>转移矩阵的稀疏度被定义为：</p></li></ul><p>$$<br>\theta_r^l = 1-(1-\theta_{min})N_r^l/N_{r^<em>}^{l^</em>}   ; (l=h,t)<br>$$</p><p>​    投影向量：<br>$$<br>{\bf h}_p = {\bf M}_r^h(\theta_r^h){\bf h} \<br>{\bf t}_p = {\bf M}_r^t(\theta_r^t){\bf t}<br>$$<br>​    其中：$M_r^h(\theta_r^h), M_r^t(\theta_r^t)\in \Bbb R^{m*n}$  .</p><p>以上两种模型的得分函数是：<br>$$<br>f_r({\bf h,t})= ||{\bf h_p+ r -t_p}||_{l_{1/2} }^2<br>$$<br>​    其中 ${\bf r} \in {\Bbb R^m}$。</p><h2 id="训练对象"><a href="#训练对象" class="headerlink" title="训练对象"></a>训练对象</h2><p>用 $(h_i,r_i,t_i) (i=1,2,…)$ 表示第 $i$ 个三元组，标签 $y_i$ 代表了三元组的正负情况， 正样本和负样本分别表示为 $\Delta ={(h_i, r_i,t_i) | y_i=1}$ 和  $\Delta’ ={(h_i, r_i,t_i) | y_i=0}$, 知识图谱仅编码正样本。因此将负样本集合构建为<br>$$<br>\Delta’ = {(h_i’,r_i,t_i)|h_i’ \neq h_i \wedge y_i = 1} \cup {(h_i,r_i,t_i’)|t_i’ \neq t_i \wedge y_i = 1 }<br>$$</p><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p>$$<br>L =\sum_{(h,r,t)\in\Delta} \sum_{(h’,r,t’)\in\Delta’} [\gamma+f_r({\bf h,t})-f_r(\bf h’,t’)]_+<br>$$</p><p>​    约束限制： $||{\bf h}||_2 \leq 1, ||{\bf r}||_2 \leq 1, ||{\bf t}||_2 \leq 1, ||{\bf h}_p||_2 \leq 1, ||{\bf t}_p||_2 \leq 1$</p><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>对于转移矩阵 ${\bf M(\theta)} \in {\Bbb R}^{n \times n}$ , 有 $nz=[\theta \times n \times n]$ 个非零元素 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Transparse&quot;&gt;&lt;a href=&quot;#Transparse&quot; class=&quot;headerlink&quot; title=&quot;Transparse&quot;&gt;&lt;/a&gt;Transparse&lt;/h1&gt;&lt;p&gt;论文地址：&lt;a href=&quot;http://www.aaai.org/ocs/
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之HyTE模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BHyTE/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之HyTE/</id>
    <published>2019-01-19T16:08:00.000Z</published>
    <updated>2019-01-26T09:07:20.719Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HyTE"><a href="#HyTE" class="headerlink" title="HyTE"></a>HyTE</h1><p>Hyperplane-based Temporally aware KG Embedding</p><p>论文地址：<a href="http://talukdar.net/papers/emnlp2018_HyTE.pdf" target="_blank" rel="noopener">http://talukdar.net/papers/emnlp2018_HyTE.pdf</a></p><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><p>现有的 KG embedding方法很少考虑到<strong>时间</strong>维度，因为它们假设所有的三元组总是永远正确的，可是现实中很多情况下不是这样。</p><blockquote><p> For example, (Bill Clinton, presidentOf, USA) was true only from 1993 to 2001;</p></blockquote><p>考虑到三元组<strong>时效性</strong>问题，提出了 HyTE 模型，定义了三元组有效成立时间段为 <strong>temporal scopes</strong> ，这些temporal scopes随着时间的推移对许多数据集会产生影响（比如YAGO，Wikidata），可以用于：</p><ul><li>利用<strong>时间导向</strong>进行知识图谱图推理；</li><li>为缺失时间注释的事实预测 temporal scopes； </li></ul><p>考虑一个四元组 $(h,r,t,[τ_s, τ_e])$，这里的 $τ_s$ 和 $τ_e$ 分别定义了三元组成立时间段的<strong>起始</strong>与<strong>截止</strong>。TransE模型将实体和关系考虑到相同的语义空间，但是在不同的时间段，实体与关系组成的 $(h，r)$ 可能会对应到不同的尾实体  $t$ ，所以在本文的模型中，希望<strong>实体能够随不同的时间点有着不同的表示</strong>。为了达到这一目的，文中将时间表示成超平面,模型示意图如下：</p><p><img src="images\1543242194541.png" alt="1543242194541"></p><blockquote><p>$e_h，e_t，e_r$，分别表示三元组中头实体，尾实体以及关系所对应的向量表示;</p><p>$τ_1$ 和 $τ_2$ 分别表示此三元组有效成立时间段的<strong>起始时间</strong>与<strong>截止时间</strong>;</p><p>$e_h(τ_1)$, $e_r(τ_1)$ 以及表示各向量在时间超平面 $τ_1$上的投影;</p><p>最终，模型通过最小化 translational distance 来完成结合时间的实体与关系的embedding学习过程。</p></blockquote><p>给定时间戳，可以将图分解为几个静态图，其中包含在各个时间步骤中有效的三元组，如：</p><p>知识图 $G$ 能被表示为 ${\Bbb {G=G_{τ<em>1} \cup G</em>{τ<em>2} \cup … \cup  G</em>{τ_T} } }$ , 其中 $τ_i, i \in 1,2,…,T$ 是离散时间点。</p><p>构建时间组成图 ${\Bbb G_τ}$ 时，对于一个四元组 $(h,r,t,[τ_s,τ_e])$ ，考虑每个在 $τ_s , τ<em>e$ 之间的时间点，该四元组为正样本。$τ$ 时刻正样本集合定义为 ${\scr D</em>τ^+}$ 。</p><p>对于 $T$ 个时间点的 KG，将会有 $T$ 个用不同法向量（$w_{t_1}, w_{t_2}, …, w_{t_T}$）表示的超平面，在超平面的帮助下将空间隔离成不同时间域。在时间 $τ$ 下有效的三元组被投影到特殊超平面 $w_τ$，在超平面上平移距离被最小化。</p><p>计算在 $w_τ$ 上的投影表示，其中 $||w_τ||_2=1$ ：</p><p>$$<br>P_τ(e_h)=e_h - (w_τ^Te_h)w_τ  \<br>P_τ(e_t)=e_t - (w_τ^Te_t)w_τ  \<br>P_τ(e_r)=e_r - (w_τ^Te_r)w_τ  \<br>$$</p><blockquote><p>向量投影</p></blockquote><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><h3 id="得分函数"><a href="#得分函数" class="headerlink" title="得分函数"></a>得分函数</h3><p>对于在时间 $τ$ 有效的正样本，希望映射满足这样的关系 ：$P_τ(e_h)=P_τ(e_r) \approx P_τ(e_t)$, 因而使用以下的得分函数：</p><p>$$<br>f_τ(h,r,t)=||P_τ(e_h)+P_τ(e_r)-P_τ(e_t)||_{l1/l2}<br>$$</p><p>在实体和关系嵌入过程中，对每个时间戳 $τ$ , 学习对应法向量 ${w_τ}_{τ=1}^T$  。</p><p>通过将三元组投影到时间超平面，我们可以将时间信息融入关系实体嵌入，利用相同的分布式表示在不同的时间点呈现不同的表达。</p><h3 id="loss函数"><a href="#loss函数" class="headerlink" title="loss函数"></a>loss函数</h3><p>$$<br>{\cal L} = \sum_{\tau \in [T]} \sum_{\tau \in \scr D_τ^+} \sum_{τ \in \scr D_τ^-} \max(0,f_τ(x)-f_τ(y)+\gamma)<br>$$</p><ul><li>$\scr D_τ^+$: 有效三元组集合，即正样本集合；</li><li>$\scr D_τ^-$: 负样本集合；</li><li>实体约束： $||e_p||_2 \leq 1, \forall p \in {\varepsilon}$              实体向量的$L_2$正则化</li><li>法向量约束：$||w_{\tau}||_2=1,\forall \tau \in [T]$      法向量归一化                </li></ul><h3 id="负样本构造"><a href="#负样本构造" class="headerlink" title="负样本构造"></a>负样本构造</h3><p>考虑了两种负样本：</p><ul><li><p><strong>Time agnostic negative sampling(TANS)</strong> </p><p><strong>与时间无关的负采样</strong>：忽略时间戳，考虑不属于KG的负样本，在时间 $τ$ 采样该负样本:<br>$$<br>\scr D_τ^- = {(h’,r,t,\tau)|h’ \in \scr {\varepsilon}, (h’,r,t) \notin \scr D^+ } \cup {(h,r,t’,\tau)|t’ \in \scr {\varepsilon} , (h,r,t’) \notin \scr D^+ }<br>$$</p></li><li><p><strong>Time dependent negative sampling(TDNS)</strong></p><p><strong>与时间相关的负采样</strong>： 考虑时间戳，考虑属于KG，但不属于特定时间戳 $\tau$ 的负样本：<br>$$<br>\scr D_τ^- = {(h’,r,t,\tau)|h’ \in \scr {\varepsilon}, (h’,r,t) \in \scr D^+，(h’,r,t,\tau) \notin \scr D_{\tau}^+ } \cup \<br>{(h,r,t’,\tau)|t’ \in \scr {\varepsilon} , (h,r,t’) \in \scr D^+, (h,r,t’,\tau) \notin \scr D_{\tau}^+ }<br>$$</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HyTE&quot;&gt;&lt;a href=&quot;#HyTE&quot; class=&quot;headerlink&quot; title=&quot;HyTE&quot;&gt;&lt;/a&gt;HyTE&lt;/h1&gt;&lt;p&gt;Hyperplane-based Temporally aware KG Embedding&lt;/p&gt;
&lt;p&gt;论文地址：&lt;a 
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之TransG模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BTransG/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之TransG/</id>
    <published>2019-01-19T16:07:00.000Z</published>
    <updated>2019-01-26T08:55:08.572Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TransG"><a href="#TransG" class="headerlink" title="TransG"></a>TransG</h1><p>论文地址： <a href="https://arxiv.org/pdf/1509.05488.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1509.05488.pdf</a></p><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><p>针对一种关系存在的多语义问题：</p><p><img src="21008449.jpg" alt=""></p><p>由上图，嵌入向量的可视化结果所示表明，一个特定的关系存在不同的簇，不同的簇表示不同的潜语义。</p><blockquote><p>例如，关系HasPart至少有两个潜在的语义:与合成相关的as(Table、HasPart、Leg)和与位置相关的as (Atlantics、HasPart、NewYorkBay)。</p><p>再例如，Freebase中，(Jon Snow, birth place, Winter Fall)和(George R. R. Martin, birth place, U.S.)分别映射到模式 ：/fictional_universe/fictional_character/place of birth  和 /people/person/place of birth，表明出生地有不同的含义。</p></blockquote><p>多关系语义的可视化</p><p><img src="40417850.jpg" alt=""></p><blockquote><p>点是正确的三元组，属于HasPart关系，而圆是不正确的。</p><p>点坐标是头部和尾部实体之间的差向量，应该靠近中心。</p><p>(a)正确的三元组很难与错误的三元组区分开来；</p><p>(b)通过应用多个语义分量，TransG 可以区分正确的三元组和错误的三元组</p></blockquote><h3 id="创新点"><a href="#创新点" class="headerlink" title="创新点"></a>创新点</h3><ul><li><p>提出了一种关系会因为实体对的差异存在多重语义的问题，相当于对关系进行了细化；</p></li><li><p>提出了一种新的<strong>贝叶斯非参数无限混合嵌入模型TransG</strong>。该模型可以自动发现关系的语义集群，并利用多个关系分量的混合来转换实体对;</p></li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>模型生成过程：</p><ul><li><p>对一个实体 $e \in E$ :</p><p>(a)  从标准正态分布中提取每个嵌入的平均向量作为先验： ${\bf u_e} \sim  {\cal N}(0,1)$.</p></li><li><p>对于一个三元组 $(h,r,t) {\in \Delta}$ ： </p><p>(a)    通过$CRP$过程对一种关系构造语义成分， $\pi _{r,m} \sim CRP(\beta)$；</p><p>(b)    用正态分布构造头实体嵌入向量，${\bf h} \sim  {\cal N}({\bf u_h}, \sigma_h^2 {\bf E})$.</p><p>(c)    用正态分布构造尾实体嵌入向量，${\bf t} \sim  {\cal N}({\bf u_t}, \sigma_t^2 {\bf E})$.</p><p>(d)    对该语义构造一个关系嵌入向量，${\bf u_{r,m} }= {\bf {t-h} } \sim \cal N ({\bf {u_t-u_h, (\sigma_h^2+\sigma_t^2)E} })$ .</p></li></ul><p>其中：</p><ul><li>${\bf u_h}$ 和 ${\bf u_t}$ 代表头尾实体的平均嵌入向量，</li><li>$\sigma _h$ 和 $\sigma _t$  代表对应实体分布的方差；</li><li><p>${\bf u_{r,m} }$ 代表关系 $r$ 的第 $m$ 个 成分转移向量</p></li><li><p><a href="https://segmentfault.com/a/1190000010694630" target="_blank" rel="noopener">$CRP$</a> 过程是一个 Dirichlet 过程，它能自动检测语义成分。</p></li></ul><p>得分函数：<br>$$<br>{\Bbb P {(h,r,t)} }  \propto  \sum_{m=1}^{M_r} \pi_{r,m} \Bbb P({\bf u_{r,m} } | h,t)=\sum_{m=1}^{M_r} \pi_{r,m} e^{-\frac{||{\bf u_h+u_r}, \bf m-u_t||_2^2}{\sigma_h^2+\sigma_t^2} }<br>$$</p><ul><li>$\pi_{r,m}$ : 混合系数，代表第$i$个语义成分的权重；</li><li>$M_r$ : 关系$r$的语义成分数量， 通过$CRP$自动的从数据中学习得到；</li></ul><p>TransG利用了特定关系的关系分量向量的组合。每个成分代表一个特定的潜在含义。通过这种方法，TransG可以区分多个关系语义。值得注意的是，CRP可以生成多个语义分量，并从数据中自适应地学习关系语义分量数$M_r$。</p><h3 id="几何解释"><a href="#几何解释" class="headerlink" title="几何解释"></a>几何解释</h3><p>TransG 推广：<br>$$<br>m_{h,r,t}^* = {\arg\min}_{m=1,…,M_r} \left(  \pi_{r,m} e^{-\frac{||{\bf u_h+u_r,m-u_t}||_2^2}{\sigma_h^2+\sigma_t^2} }     \right)<br>$$ </p><p>$$<br>{\bf h} + \bf u_{ {r,m}_{(\bf h,r,t)}^*} \approx \bf t<br>$$</p><ul><li>$m_{h,r,t}^*$ : 主分量，虽然所有分量都对模型有贡献，但是由于指数效应，主分量贡献最大；</li><li>给定一个三元组，TransG计算出主分量，然后用主转换向量将头实体转化为尾实体；</li><li>对于大多数三元组而言，应该只有一个分量有明显的非零值 $ \left(  \pi_{r,m} e^{-\frac{||{\bf u_h+u_r, m-u_t}||_2^2}{\sigma_h^2+\sigma_t^2} }     \right)$， 而其他分量由于指数衰减应该足够小，所有TransG中所有分量都有贡献，但主分量贡献最少；</li><li>该性质有效的减少了来自其他语义分量的噪声，更好的描述了多种语义关系；</li><li>在TransG中， ${\bf t-h}​$ 近乎只有一个转换向量 ${\bf u_{r,m}<em>{(h,r,t)}^*}​$ ，当 $m \neq m</em>{(h,r,t)}^*​$ 时，$\frac{||{\bf u_h+u_r, m-u_t}||_2^2}{ {\sigma}_h^2+{\sigma}_t^2}​$ 很大，经过指数操作后值很小，故其他分量可以忽略；</li></ul><h2 id="训练算法"><a href="#训练算法" class="headerlink" title="训练算法"></a>训练算法</h2><p>训练中运用了最大数据似然原理。对于无参数部分，$\pi _{r,m}$ 通过 Gibbs 采样 从 CRP 生成。从三元组采样新的分量可利用以下概率：</p><p>$$<br>\Bbb P (m_{r.new}) = \frac{\beta e^{-\frac{||{\bf h-t}||_2^2}{\sigma_h^2 + \sigma_t^2 +2} } }{\beta e^{-\frac{||{\bf h-t}||_2^2}{\sigma_h^2 + \sigma_t^2 +2} }+ \Bbb P{(h,r,t)} }<br>$$</p><ul><li>$\Bbb P{(h,r,t)}$ : 当前后验概率</li></ul><h3 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h3><p>其他部分，为了更好地区分正样本和负样本，将正样本和负样本的可能性比最大化。值得注意的是，嵌入向量是由(Glorot and Bengio, 2010)初始化的。将所有其他约束组合在一起，得到最终目标函数，如下所示:</p><p>$$<br>\min_{\bf u_h,u_r,m,u_t}  {\cal L}    \<br>{\cal L} = -\sum_{(h,r,t)\in \Delta} ln \left(\sum_{m=1}^{M_r} \pi_{r,m} e^{-\frac{||{\bf u_h+u_r, m-u_t}||_2^2}{\sigma_h^2+\sigma_t^2} } \right)  \ +  \sum_{(h’,r’,t’)\in \Delta’} ln \left(\sum_{m=1}^{M_r} \pi_{r’,m} e^{-\frac{||{\bf u_{h’}+u_{r’} ,m-u_{t’}}||<em>2^2}{\sigma</em>{h’}^2+\sigma_{t’}^2} } \right) + C\left(\sum_{r\in R} \sum_{m=1}^{M_r} ||{\bf u_{r,m} }||<em>2^2 + \sum</em>{e\in E}||{\bf u_e}||_2^2 \right)<br>$$</p><blockquote><p>此外还应用了一个技巧来控制训练过程中的参数更新过程。对于那些非常不可能的三元组，将跳过更新过程。因此，引入了与TransE 相似的条件: 训练算法只在满足以下条件时更新嵌入向量:</p><p>$$<br>\frac{\Bbb P{(h,r,t)} }{\Bbb P{(h’,r’,t’)} }= \frac{\sum_{m=1}^{M_r} \pi_{r,m} e^{-\frac{||{\bf u_h+u_r, m-u_t}||_2^2}{\sigma_h^2+\sigma_t^2} } }{\sum_{m=1}^{M_{r’} } \pi_{r’,m} e^{-\frac{||{\bf u_{h’}+u_{r’} , m-u_{t’}}||<em>2^2}{\sigma</em>{h’}^2+\sigma_{t’}^2} } }  \leq M_r e^{\gamma}<br>$$</p><ul><li>$\gamma$ : 控制更新条件</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TransG&quot;&gt;&lt;a href=&quot;#TransG&quot; class=&quot;headerlink&quot; title=&quot;TransG&quot;&gt;&lt;/a&gt;TransG&lt;/h1&gt;&lt;p&gt;论文地址： &lt;a href=&quot;https://arxiv.org/pdf/1509.05488.pdf&quot; t
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之TransA模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BTransA/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之TransA/</id>
    <published>2019-01-19T16:05:00.000Z</published>
    <updated>2019-01-26T08:17:35.790Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TransA"><a href="#TransA" class="headerlink" title="TransA"></a>TransA</h1><p>论文地址: <a href="https://arxiv.org/pdf/1509.05490.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1509.05490.pdf</a></p><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><h3 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h3><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-2/51221830.jpg" alt=""></p><p>TransE模型本质上是一种欧式距离的计算，对应一个等势超球面。</p><blockquote><p> 上图中蓝色部分为正例，红色部分为负例，TransE模型错误划分7个点；利用本文提出的基于马氏距离的TransA模型，其PCA降维图对应一个椭圆，该模型只错误划分三个点。</p></blockquote><ul><li><p>目前基于转移的方法构造了等式超球面，不容易划分匹配与不匹配的尾部实体；而且等式超球面形状固定、不够灵活；</p><blockquote><p>疑问：“等式超球面在等式面上权重处处相等，且等势面广，容易将不匹配的实体包含进来？？？</p></blockquote></li><li><p>权重的问题：损失函数过于简单，向量的每一维度等价考虑，无法突出维度的重要性差异；</p></li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-2/75658273.jpg" alt=""></p><blockquote><p>上图所示，对于关系 has-part 而言，TransE模型根据欧式距离计算生成了像 ”Room-has-Goniff“这样的三元组。而正确的结果是”Room-has-Wall“。</p><p>对x,y轴进行分解，发现Room在x轴上距离Wall更近，因此可以认为该图在x轴维度上更重要。TransA模型通过引入加权矩阵，对每一个维度赋予不同权重。</p><p>轴分量损失： $loss_x = (h_x+r_x-t_x)$ ,  $loss_y=(h_y+r_y-t_y)$</p></blockquote><h2 id="Adaptive-Metric-Approach"><a href="#Adaptive-Metric-Approach" class="headerlink" title="Adaptive Metric Approach"></a>Adaptive Metric Approach</h2><ul><li>TransA利用椭圆表面，而不是球面，这样可以更好的表示由复杂关系引起的复杂的嵌入拓扑；</li><li>根据自适应度量方法，TransA可以自动从数据中学习权重，加权变换特征维度；</li></ul><p>得分函数：</p><p>$$<br>f_r(h,t)=(|{\bf h+r-t}|)^T {\bf W}_r(|{\bf h+r-t}|)<br>$$</p><ul><li>$|{\bf h+r-t} |  \doteq (|h_1+r_1-t_1|,|h_1+r_1-t_1|,…,|h_n+r_n-t_n|)$</li><li>${\bf w}_r$ 是与自适应度相关的对称非负权重矩阵；</li><li>采用绝对值运算能很好的定义得分函数，保证${\bf w}_r$是非负的；</li></ul><p>将得分函数扩展为一个诱导范数:<br>$$<br>N_r({\bf e})=\sqrt{f_r(h,t)}<br>$$</p><ul><li><p>${\bf e} \doteq {\bf h+r-t}$  </p></li><li><p>$N_r$ 是非负的，单位的，绝对齐次的。<br>$$<br>N_r({\bf e}_1+{\bf e}_2)=\sqrt{|{\bf e_1}+{\bf e_2}|^T{\bf W_r} |{\bf e_1}+{\bf e_2} |} \leq  \sqrt{|{\bf e_1}|^T {\bf W_r} |{\bf e_1}|} + \sqrt{|{\bf e_2}|^T {\bf W_r} |{\bf e_2}|} = N_r({\bf e}_1) + N_r({\bf e}_2)<br>$$</p></li></ul><p>$$<br>{\bf W_r}={\bf L_r}^T{\bf D_r L_r}<br>$$</p><p>$$<br>f_r=({\bf L_r}|{\bf h+r-t}|)^T {\bf D_r} ({\bf L_r}|{\bf h+r-t}|)<br>$$</p><ul><li>${\bf D_r}$ : 对角矩阵$diag (w_1, w_2,…, w_n)$，对角元素代表向量每一维度$i$以权重$w_i$嵌入 ;</li></ul><h4 id="等势面"><a href="#等势面" class="headerlink" title="等势面"></a>等势面</h4><p>其他基于平移的方法：</p><ul><li>欧式距离定义等势面<br>$$<br>||({\bf t-h-r})||_2^2={\cal C}<br>$$</li></ul><p>TransA方法：</p><ul><li><p><a href="https://www.cnblogs.com/likai198981/p/3167928.html" target="_blank" rel="noopener">马氏距离</a>定义等势面</p><p>$$<br>|{\bf t-h-r}|^T {\bf W_r} |{\bf t-h-r}|= {\cal C}<br>$$</p></li></ul><blockquote><p>马氏距离利用协方差，有效计算样本各特性之间的联系，与尺度无关。</p><p>从而可以看出，TransA利用马氏距离，可以更好的应对1-N关系，由于矩阵对称，反过来对于N-1关系也有效；N-N关系可以看成多个1-N关系；因此TransA对于复杂关系的处理很有效。</p></blockquote><h2 id="训练过程"><a href="#训练过程" class="headerlink" title="训练过程"></a>训练过程</h2><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p>$$<br>\left( \sum_{e \in E}||{\bf e}||<em>2^2 + \sum</em>{r \in R}||{\bf r}||_2^2 \right)<br>$$</p><p>$$<br>{\cal L}=\sum_{(h,r,t) \in \Delta} \sum_{(h’,r’,t’) \in \Delta’} [\gamma + f_r(h, t)-f_{r’}(h’, t’)]<em>+ + C \left (\sum</em>{e \in E}||{\bf e}||<em>2^2 + \sum</em>{r \in R}||{\bf r}||<em>2^2 \right) + \lambda \left (\sum</em>{r \in R}||{\bf W_r}||_F^2 \right)<br>$$</p><ul><li>$\lambda$ : 正则化自适应权重矩阵</li><li><p>$C$ : 控制缩放比例</p></li><li><p>${\bf [W_r]}_{ij} \geq 0$ :  在每轮的训练中，${\bf W_r}$ 可以通过将推导值设为零直接计算出来。为保证${\bf W_r}$的非负，将${\bf W_r}$的所有负项都设为零。<br>$$<br>\bf W_r = -\sum_{(h,r,t)\in \Delta} \left(|{\bf h+r-t}||{\bf h+r-t}|^T \right) + \sum_{(h’,r’,t’)\in \Delta’} \left(|{\bf h’+r’-t’}||{\bf h’+r’-t’}|^T \right)<br>$$</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TransA&quot;&gt;&lt;a href=&quot;#TransA&quot; class=&quot;headerlink&quot; title=&quot;TransA&quot;&gt;&lt;/a&gt;TransA&lt;/h1&gt;&lt;p&gt;论文地址: &lt;a href=&quot;https://arxiv.org/pdf/1509.05490.pdf&quot; t
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之TransR模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BTransR/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之TransR/</id>
    <published>2019-01-19T16:03:00.000Z</published>
    <updated>2019-01-26T07:36:05.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TransR"><a href="#TransR" class="headerlink" title="TransR"></a>TransR</h1><p>论文地址: <a href="http://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/download/9571/9523/" target="_blank" rel="noopener">http://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/download/9571/9523/</a></p><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><p>TransE 和 TransH 都假设实体和关系嵌入在相同的空间中。然而，一个实体是多种属性的综合体，不同关系对应实体的不同属性，即头尾节点和关系可能不在一个向量空间中，在公共语义空间中不能表示它们。</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/47958073.jpg" alt=""></p><ul><li>对每个三元组，实体空间中的实体首先通过运算 $M_r$ 映射到与它相关的 $r$ 关系空间, 保证 ${\bf h}_r + r \approx {\bf t}_r$ , 关系特定投影可以使实际持有该关系(表示为彩色圆圈)的头/尾实体彼此靠近，也可以使不持有该关系(表示为彩色三角形)的头/尾实体远离。</li><li>TransR对每个关系$r$都分配了一个空间${\bf M}_r \in R^{k \times d}$。</li><li>特定关系下，头尾实体会表现不同的模式；</li></ul><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>提出了一种新的方法，<strong>在不同的空间中建模实体和关系</strong>，即，<strong>实体空间</strong>和<strong>关系空间</strong>，并在关系空间中进行转换，因此命名为TransR。</p><h3 id="TransR-1"><a href="#TransR-1" class="headerlink" title="TransR"></a>TransR</h3><p>TransR 模型中，对每一个三元组，实体嵌入 ${\bf h,t} \in {\Bbb R}^k$ , 关系嵌入 ${ {\bf r} \in {\Bbb R}^d}$, 两个空间的维度不一定相同（属于不同空间）。  </p><ul><li>对每一个关系$r$，定义一个投影矩阵 ${\bf M}_r \in {\Bbb R}^{k \times d}$, 将实体从实体空间投影到关系空间：</li></ul><p>$$<br>{ {\bf h_r} = {\bf hM}_r}<br>$$</p><p>$$<br>{ {\bf t_r} = {\bf tM}_r}<br>$$</p><ul><li><p>得分函数：<br>$$<br>f_r(h,t)=||{ {\bf h}_r} + {\bf r} - {\bf t}_r||_2^2<br>$$</p></li><li><p>实体和关系嵌入的范数约束<br>$$<br>||{\bf h}||_2 \leq 1, ||{\bf t}||_2 \leq 1,||{\bf r}||_2 \leq 1, ||{\bf hM}_r||_2 \leq 1, ||{\bf tM}_r||_2 \leq 1<br>$$</p></li></ul><h3 id="Cluster-based-TransR-CTransR"><a href="#Cluster-based-TransR-CTransR" class="headerlink" title="Cluster-based TransR (CTransR)"></a>Cluster-based TransR (CTransR)</h3><p>上述模型包括TransE, TransH和TransR，仅仅通过单个的关系向量还不足以建立从头实体到尾实体的所有转移，<strong>即对于同一条关系$r$  来讲，$r$ 具有多种语义上的表示</strong>。为了更好地建模这些关系，引入了<strong>分段线性回归</strong>的思想来扩展TransR。</p><ul><li><p>对于一个特定的关系$r$，把训练数据中的所有实体对 $(h, t)$ 聚类到多个组中，每个组中的实体对都期望表现出相似的$r$关系。其中所有实体对$(h,t)$通过的向量偏移$(h−t)$来聚类；</p><blockquote><p>为什么根据$(h-t)$(也就是$r$)就能聚类:</p><p> CTransR考虑的问题是对一个关系只用一个表示无法体现这一种关系的多义性，比如关系（location location contains）其实包含country-city、country-university、continent-country等多种含义。</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/90156033.jpg" alt=""></p><p>原文提到，这里的$h,t$是经过TRansE模型预训练得到的: </p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/26332401.jpg" alt=""></p><hr><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/12579440.jpg" alt=""></p><p> 而TransE模型的映射是唯一（one to one）的，大关系下的不同子关系通过映射后其实是不同的向量表示，那么$(h-t)$的结果也不相同，根据不同的结果可以用来进行聚类。</p></blockquote></li><li><p>对每一个簇, 学习一个<strong>分离关系向量</strong> ${\bf r}_c$ ，对每种关系，学习投影矩阵 ${\bf M}_r$</p></li><li><p>定义实体和关系的投影向量为：</p></li></ul><p>$$<br>{ {\bf h}_{r,c} = {\bf hM}<em>r}<br>$$<br>$$<br>{ {\bf t}</em>{r,c} = {\bf tM}_r}<br>$$</p><ul><li>得分函数：</li></ul><p>$$<br>f_r(h,t)=||{ {\bf h}_{r,c}} + {\bf r}<em>c - {\bf t}</em>{r,c}||_2^2 + \alpha ||{\bf r}_c - {\bf r}||_2^2<br>$$</p><p>$||{\bf r}_c - {\bf r}||_2^2$ 这一项确保群特异性关系向量 ${\bf r}_c$ 距离原始关系向量 ${\bf r}$ 不太远， $\alpha$ 控制约束效果</p><ul><li>实体和关系嵌入的范数约束  </li></ul><p>$$<br>||{\bf h}||_2 \leq 1, ||{\bf t}||_2 \leq 1,||{\bf r}||_2 \leq 1, ||{\bf hM}_r||_2 \leq 1, ||{\bf tM}_r||_2 \leq 1<br>$$</p><h2 id="训练过程"><a href="#训练过程" class="headerlink" title="训练过程"></a>训练过程</h2><p>损失函数：<br>$$<br>{\cal L}=\sum_{(h,r,t)\in \Delta} \sum_{(h’,r,t’)\in \Delta’} max (0, \gamma + f_r(h, t)-f_{r}(h, t) )<br>$$</p><h3 id="负样本生成"><a href="#负样本生成" class="headerlink" title="负样本生成"></a>负样本生成</h3><p>为首尾实体替换分配不同的概率。对于那些1- n、n -1和n -n关系，给“one”设置更高的概率，产生假阴性样本的机会将会减少</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TransR&quot;&gt;&lt;a href=&quot;#TransR&quot; class=&quot;headerlink&quot; title=&quot;TransR&quot;&gt;&lt;/a&gt;TransR&lt;/h1&gt;&lt;p&gt;论文地址: &lt;a href=&quot;http://www.aaai.org/ocs/index.php/AAAI/
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之TransH模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BTransH/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之TransH/</id>
    <published>2019-01-19T16:02:00.000Z</published>
    <updated>2019-01-26T07:28:17.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TransH"><a href="#TransH" class="headerlink" title="TransH"></a>TransH</h1><p>论文地址：<a href="https://www.aaai.org/ocs/index.php/AAAI/AAAI14/paper/viewFile/8531/8546" target="_blank" rel="noopener">https://www.aaai.org/ocs/index.php/AAAI/AAAI14/paper/viewFile/8531/8546</a></p><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/58905342.jpg" alt=""></p><p>将特定关系的转移向量 $d_r$ 放置于特定关系的超平面 $w_r$ ,而不是映射到相同的实体嵌入空间；  </p><p>对于三元组 $(h,r,t)$，嵌入向量 ${\bf h}$ 和 ${\bf t}$ 投影到超平面 ${\bf {w_r}}$ , 投影被表示为 ${\bf h_{\bot}}$ 和 ${\bf t_{\bot}}$ 。投影 ${h_{\bot}}$ 和 ${t_{\bot}}$ 能被转移向量 ${\bf d_r}$ 连接， 当三元组为正样本时有更低的错误率，为负样本时错误率上升；   </p><blockquote><p>TransH将一个关系$r$表示成两个向量：超平面法向量${\bf W}_r$和超平面内的关系向量${\bf d_r}$表示；</p><p>该关系连接的不同实体对在超平面上的投影只对应一个向量表示： ${\bf h_{\bot}}$ 和 ${\bf t_{\bot}}$，</p><p>也就是，唯一的${\bf W}_r$和${\bf d_r}$ 确定了该关系在空间中的唯一超平面；</p></blockquote><ul><li><p>定义一个得分函数,衡量三元组的合理性：<br>$$<br>||{\bf h_{\bot} } + {\bf d_r} - {\bf t_{\bot} }||_2^2<br>$$</p></li><li><p>超平面法向量限制为 $||{\bf w}_r ||_2 = 1$, 超平面投影的表示为</p></li></ul><p>$$<br>{\bf h_{\bot} } = {\bf h} - {\bf w}_r^T {\bf h}{\bf w}_r<br>$$</p><p>$$<br>{\bf t_{\bot} } = {\bf t} - {\bf w}_r^T {\bf h}{\bf w}_r<br>$$</p><blockquote><p>推导： 嵌入向量在超平面法向量上的投影长度，再乘上法向量方向向量：<br>$d=\frac{ | {\bf w}_r^T h| }{| |{\bf w}| |} \cdot \frac{ {\bf w}_r}{| |{\bf w}| |}=\frac{ {\bf w}_r^T {\bf h}{\bf w}_r}{| |{\bf w}^2| |}={\bf w}_r^T {\bf h}{\bf w}_r$</p></blockquote><p>最终得分函数：</p><p>$$<br>f_r({\bf h},{\bf t}) = | |({\bf h} - {\bf w}_r^T {\bf h} {\bf w}_r) + {\bf d}_r -({\bf t} - {\bf w}_r^T {\bf h} {\bf w}_r)| |_2^2<br>$$</p><p>模型参数：</p><ul><li>所有实体的嵌入向量  ${ {\bf e_i}}_{r=1}^{ |E| }$ ; </li><li>所有关系超平面和转移向量  ${ ( {\bf w_r, d_r})}_{r=1}^{ |R| }$  ;</li></ul><p>在TransH中，通过引入投射到特定关系超平面上的机制，使实体在不同的关系/三元组中扮演不同的角色。</p><h2 id="训练过程"><a href="#训练过程" class="headerlink" title="训练过程"></a>训练过程</h2><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p>$$<br>{\cal L}=\sum_{(h,r,t)\in \Delta} \sum_{(h’,r’,t’)\in \Delta’_{(h,r, t)} } [\gamma + f_r({\bf h}, {\bf t})-f_{r’}({\bf h’}, {\bf t’}) ]_+<br>$$</p><ul><li>$\Delta$: 正确三元组集合</li><li>$\Delta’$: 错误三元组集合</li><li>$\gamma$: margin 距离超参数，表示正负样本之间的距离</li><li>$[x]_+$: $max(0,x)$</li></ul><p>训练的限制条件：</p><ul><li>$\forall e\in E, ||{\bf e}||_2 \leq 1$ ,   # 控制实体嵌入大小</li><li>$\forall r \in R, \frac{|{\bf w}_t^T {\bf d}_r|}{||{\bf d}_r||_2} \leq \epsilon$ , # 正交，控制转移向量落在超平面</li><li>$\forall r \in R. ||{\bf w}_r||_2=1$ , # 单位法向量</li></ul><p>软约束：</p><p>$$<br>{\cal L}=\sum_{(h,r,t)\in \Delta} \sum_{(h’,r’,t’)\in \Delta’_{(h,r, t)} } [\gamma + f_r({\bf h}, {\bf t})-f_{r’}({\bf h’}, {\bf t’}) ]<em>+ + C\left{\sum</em>{e\in E}[||{\bf e}||<em>2^2 -1]</em>+ + \sum_{r \in R}\left[\frac{({\bf w}_t^T {\bf d}_r)^2}{||{\bf d}_r||<em>2^2} - \epsilon ^2\right]</em>+ \right}<br>$$</p><ul><li>C是软约束的超参数权重</li><li>注意到约束3不在loss公式里，在访问每一个mini-batch时将每一个${\bf w}_r$投影到单位  <a href="https://blog.csdn.net/zouxy09/article/details/24971995" target="_blank" rel="noopener">$L_2- \bf {ball}$</a> </li><li>随机梯度下降，正样本的集合被随机遍历多次，当访问一个正样本时，一个负样本被随机构造。</li></ul><h3 id="负样本构造"><a href="#负样本构造" class="headerlink" title="负样本构造"></a>负样本构造</h3><p>相对于TransE模型的随机采样生成负样本，TransH模型的创新点：<br><strong>赋予头尾实体采样概率</strong>   </p><ul><li>处理1-N关系时，赋予头部实体更高的采样概率；</li><li>处理N-1关系时，赋予尾部实体更高的采样概率；  </li></ul><p>在所有关系r的三元组中，首先获取两个数据：</p><ul><li>$tph$: 每一个头部实体对应的平均尾部实体;</li><li>$hpt$: 每一个尾部实体对应的平均头部实体;</li></ul><p>针对这两个数据进行映射的分类：</p><p>$$<br>\left { \begin{array}{rcl}<br>1-1    &amp; \mbox{for} &amp; tph_r&lt;1.5,hpt_r &lt;1.5 \<br>N-N    &amp; \mbox{for} &amp; tph_r \geq 1.5,hpt_r \geq 1.5 \<br>1-N    &amp; \mbox{for} &amp; tph_r \geq 1.5,hpt_r &lt; 1.5 \<br>N-1    &amp; \mbox{for} &amp; tph_r &lt; 1.5,hpt_r \geq 1.5 \<br>\end{array}\right.<br>$$</p><p>定义一个伯努利分布进行采样：</p><ul><li>$\frac{tph}{tph+hpt}$: 采样头部实体的概率;</li><li>$\frac{hpt}{tph+hpt}$: 采样尾部实体的概率;</li></ul><h2 id="实验部分-未完待补充"><a href="#实验部分-未完待补充" class="headerlink" title="实验部分(未完待补充)"></a>实验部分(未完待补充)</h2><p>在三个任务上研究评估模型：从不同视角和应用层面，评估对陌生三元组的预测精度</p><ul><li>link prediction</li><li>triplets classification</li><li>relational fact extraction</li></ul><p>实验数据使用：<br><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/13704280.jpg" alt=""></p><h4 id="link-prediction"><a href="#link-prediction" class="headerlink" title="link prediction"></a>link prediction</h4><p><strong>任务</strong>：三元组的头部或者尾部实体缺失，给定 $(h,r)$ 预测 $t$ 或者给定 $(r,t)$ 预测 $h$ , 返回预测的候选排名；<br><strong>评估协议</strong>： 对于给定的三元组，用每个实体 $e$ 取代尾部实体 $t$ ，并计算损坏样本的差异性分数，升序排列获取原始三元组的排名；<br><strong>过滤</strong>： 生成的损坏三元组可能原本就存在于知识图谱中，需要删去；<br><strong>报告指标</strong>：  </p><ul><li>Mean:平均排名:</li><li>$Hits@10$: 排名不超过10的比例</li></ul><h4 id="triplets-classification"><a href="#triplets-classification" class="headerlink" title="triplets classification"></a>triplets classification</h4><p><strong>任务</strong>: 对给定三元组进行二分类判断正负样本；</p><h4 id="relational-fact-extraction"><a href="#relational-fact-extraction" class="headerlink" title="relational fact extraction"></a>relational fact extraction</h4><p>(待补充)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TransH&quot;&gt;&lt;a href=&quot;#TransH&quot; class=&quot;headerlink&quot; title=&quot;TransH&quot;&gt;&lt;/a&gt;TransH&lt;/h1&gt;&lt;p&gt;论文地址：&lt;a href=&quot;https://www.aaai.org/ocs/index.php/AAAI/
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之TransE模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BTransE/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之TransE/</id>
    <published>2019-01-19T16:01:00.000Z</published>
    <updated>2019-01-26T05:40:20.233Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TransE"><a href="#TransE" class="headerlink" title="TransE"></a>TransE</h1><p>论文地址：<a href="https://www.aaai.org/ocs/index.php/AAAI/AAAI14/paper/viewFile/8531/8546" target="_blank" rel="noopener">https://www.aaai.org/ocs/index.php/AAAI/AAAI14/paper/viewFile/8531/8546</a>  </p><h2 id="模型概述"><a href="#模型概述" class="headerlink" title="模型概述"></a>模型概述</h2><ul><li>三元组：   $(h,{\scr l},t)$  </li><li>embedding之后， 头部实体嵌入向量加上关系嵌入向量，更接近与尾部实体嵌入向量</li><li>依赖于简化的参数集，只学习每个实体和每个关系的一个<strong>低维向量</strong>表示</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/57933532.jpg" alt=""></p><p>细节：</p><ul><li>训练集 $S$: 包含三元组 $(h,{\scr l},t)$， 实体 $h,t\in E(实体集)$, 关系 ${\scr l} \in L(关系集)$；</li><li>embeddings 在 $\Bbb R^k$ 中取值</li><li>${\bf h}+{\scr l}\approx {\bf t}$ , ${\bf t}$ 应该为 ${\bf h}+{\scr l}$ 的最邻近， 然后 ${\bf h}+{\scr l}$ 与其他的 $t$ 尽可能远；  这里的“接近”程度可以用 $L_1$或$L_2$范数衡量；<br>理想状态下一个正确的三元组的embedding 之间存在 ${\bf h}+{\scr l}={\bf t}$ 的关系，错误的三元组没有；</li><li>利用基于能量的框架，三元组的势能表示为 $d(h, {\scr l}, t)=||h+{\scr l}-t||_2$ ， 正确的三元组势能越低越好，错误的三元组势能越高越好；</li></ul><h2 id="损失函数："><a href="#损失函数：" class="headerlink" title="损失函数："></a>损失函数：</h2><h3 id="带negative-sample的max-margin损失函数"><a href="#带negative-sample的max-margin损失函数" class="headerlink" title="带negative sample的max margin损失函数"></a>带negative sample的max margin损失函数</h3><p>训练方法：margin-based ranking criterion<br>$$<br>{\cal L}=\sum_{(h,{\scr l},t)\in S} \sum_{(h’,{\scr l},t’)\in S’<em>{(h,{\scr l}, t)} } [\gamma + d(h+{\scr l}, t)-d(h’+{\scr l}, t’) ]</em>+<br>$$</p><p>$$<br>d(h, {\scr l}, t)=||h+{\scr l}-t||_2<br>$$</p><ul><li>$S$: 正确三元组集合</li><li>$S’$: 错误三元组集合</li><li>$\gamma$: margin 距离超参数，表示正负样本之间的距离，常数;</li><li>$[x]_+$: $max(0,x)$</li></ul><blockquote><p>最小化loss可以使正样本势能越低，负样本势能越高，但两者的能量差距达到一定程度 $\gamma$ 就足够了， 再大loss也只是0；</p></blockquote><h3 id="负样本生成"><a href="#负样本生成" class="headerlink" title="负样本生成"></a>负样本生成</h3><p>$$<br>S’_{(h,{\scr l},t)} = {(h’,{\scr l},t)|h’\in E}\bigcup {(h,{\scr l},t’)|t’ \in E}<br>$$</p><ul><li>对于三元组 $(h,{\scr l},t)$， 随机使用知识库中的某个实体 $h’$ 替换 $h$，或用某个实体 $t’$ 替换 $t$, 得到两个负样本 $(h’,{\scr l},t)$ 和 $(h,{\scr l},t’)$;  </li><li>对生成的负样本进行筛选过滤，若该负样本原本存在于知识库，则重新生成；  </li><li>然后，有人认为，生成负样本时不应该完全随机，而是应该选择与被替换实体类型相似的实体来进行替换；</li></ul><h2 id="训练过程"><a href="#训练过程" class="headerlink" title="训练过程"></a>训练过程</h2><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/93529922.jpg" alt=""></p><h2 id="TransE局限性"><a href="#TransE局限性" class="headerlink" title="TransE局限性"></a>TransE局限性</h2><p>考虑在没有错误embedding的情况下，$h+{\scr l}=t$  当 $(h,{\scr l},t) \in \Delta$ 时，我们可以从TransE模型中看出：</p><ul><li>若 $(h,{\scr l},t) \in \Delta$ 且 $(t,{\scr l},h) \in \Delta$, $r$是一个自反映射， 因此 $r=0$ 且 $h=t$;</li><li>若 $\forall i \in {0,…,m},(h_i,r,t)\in \Delta$ , $r$是一个N-1映射，且 $h_0=…=h_m$;<br>类似的，$\forall i \in {0,…,m},(h,r,t_i)\in \Delta$ , $r$是一个1-N映射，且 $t_0=…=t_m$;  </li></ul><p>当涉及相同关系时，忽略了实体的分布式表示，导致实体呈现相同的嵌入表示。</p><blockquote><p>例如，假如知识库中有两个三元组，分别是(美国, 总统, 奥巴马)和(美国, 总统, 布什)。这里的关系“总统”是典型的 1-N 的复杂关系。如果用 TransE 从这两个三元组学习知识表示，将会使奥巴马和布什的向量变得相同。<br>因而，TransE 模型在处理 1-N、N-1、N-N 复杂关系时存在局限性。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TransE&quot;&gt;&lt;a href=&quot;#TransE&quot; class=&quot;headerlink&quot; title=&quot;TransE&quot;&gt;&lt;/a&gt;TransE&lt;/h1&gt;&lt;p&gt;论文地址：&lt;a href=&quot;https://www.aaai.org/ocs/index.php/AAAI/
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱：知识表示之TransD模型</title>
    <link href="http://yoururl.com/2019/01/20/%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA%E4%B9%8BTransD/"/>
    <id>http://yoururl.com/2019/01/20/知识表示之TransD/</id>
    <published>2019-01-19T16:01:00.000Z</published>
    <updated>2019-01-26T07:57:55.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TransD"><a href="#TransD" class="headerlink" title="TransD"></a>TransD</h1><p>论文地址: <a href="http://www.aclweb.org/anthology/P15-1067" target="_blank" rel="noopener">http://www.aclweb.org/anthology/P15-1067</a></p><p>TransR /CTransR模型存在的问题：</p><ul><li>对于一种关系，所有实体共享一样的映射矩阵${\bf M}_r$。然而被同一个关系链接的实体拥有不同的类型和属性，这些差异需要用不同的映射来体现；</li><li>实体与关系间的映射是可逆的，没有理由只通过关系来构建映射矩阵；</li><li>矩阵向量乘法运算，参数多，模型运算量大；</li></ul><p>创新点：</p><ul><li>TransD可以说是TransR/CTransR的简化版本，它同时考虑了实体和关系之间的多样性，用两个向量来动态重构mapping矩阵；</li><li>相比TransR/CTransR有更小的计算量，且没有矩阵运算，可以在大规模KG上应用；</li></ul><p><strong>实体关系的多语义表示</strong>：</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/29360105.jpg" alt=""></p><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><p>TransD 模型同 CTransR 模型一样，都是为了解决关系的多种语义表示。相比较 CTransR 采用聚类的方式，TransD 提出一种<strong>动态变化矩阵</strong>的方法。</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-11-1/66484391.jpg" alt=""></p><p>每一个命名对象（实体关系）用两个向量表示：</p><ul><li>$(h,r,t)$ :  自身的关系（语义）表示；</li><li>$(h_p, r_p, t_p)$ :  实体空间中的投影，用于构建映射矩阵的表示；</li></ul><p>具体公式如下图所示：</p><p>$$<br>{\bf M}_{rh} = {\bf r}_p{\bf h}_p^T + {\bf I}^{m \times n}<br>$$</p><p>$$<br>{\bf M}_{rt} = {\bf r}_p{\bf t}_p^T + {\bf I}^{m \times n}<br>$$</p><ul><li>下标$p$表示投影向量， ${\bf h} , {\bf h}_p, {\bf t} , {\bf t}_p \in {\Bbb R}^n$ ,  ${\bf r}, {\bf r}_p \in {\Bbb R}^m$</li><li>映射矩阵的每一个元素都包含了实体和关系信息；</li><li>通过向量相乘生成的矩阵对单位矩阵（代表不做变换）进行调整；</li></ul><p>定义向量在关系空间的投影：<br>$$<br>{\bf h_{\perp} }={\bf M}_{rh} {\bf h}<br>$$</p><p>$$<br>{\bf t_{\perp} }={\bf M}_{rt} {\bf t}<br>$$</p><p>得分函数：</p><p>$$<br>f_r({\bf h,t})= -|| {\bf h_\perp} + {\bf {r-t}_\perp}||_2^2<br>$$</p><ul><li>限制条件：  </li></ul><p>$$<br>||{\bf h}||_2 \leq 1, ||{\bf t}||_2 \leq 1,     ||{\bf r}||<em>2 \leq 1, ||{\bf h</em>\perp}||<em>2 \leq 1, ||{\bf t</em>\perp}||_2 \leq 1<br>$$</p><h2 id="训练过程"><a href="#训练过程" class="headerlink" title="训练过程"></a>训练过程</h2><p>假设训练集中有$n_t$个三元组，用$(h_i,r_i,t_i)(i=1,2,…,n_t)$表示第$i$个三元组。</p><p>每个三元组有标签$y_i$表示三元组的正负性质：<br>$$<br>\Delta = {(h_j,r_j,t_j)|y_j=1}<br>$$</p><p>$$<br>\Delta’ = {(h_j,r_j,t_j)|y_j=0}<br>$$</p><h3 id="负样本生成"><a href="#负样本生成" class="headerlink" title="负样本生成"></a>负样本生成</h3><p>$$<br>\Delta’ = {(h_l,r_k,t_k)|h_l\neq h_k \wedge y_k=1} \cup {(h_k,r_k,t_l)|t_l\neq t_k \wedge y_k=1}<br>$$</p><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p>$$<br>{\cal L}=\sum_{\xi \in \Delta} \sum_{\xi’ \in \Delta’ } [\gamma + f_r(\xi’)-f_{r}(\xi) ]_+<br>$$</p><ul><li>$\xi$ : 正样本， $\xi’$ : 负样本</li></ul><p>为加快收敛和避免过拟合：</p><ul><li><p>利用TransE模型初始化实体和关系嵌入向量；</p></li><li><p>用单位矩阵初始化转移矩阵；   </p></li></ul><h2 id="和其他模型的联系"><a href="#和其他模型的联系" class="headerlink" title="和其他模型的联系"></a>和其他模型的联系</h2><h3 id="TransE"><a href="#TransE" class="headerlink" title="TransE"></a>TransE</h3><p>当向量维度满足$m=n$，且所有用于构建映射矩阵的投影向量都为0时，TransE是TransD的一种特殊情况。</p><h3 id="TransH"><a href="#TransH" class="headerlink" title="TransH"></a>TransH</h3><p>当向量维度满足$m=n$时，实体的投影向量能被表示为：<br>$$<br>{\bf h_{\perp} }={\bf M}_{rh} {\bf h} = {\bf h}+{\bf h}_p^T {\bf h} {\bf r}_p<br>$$</p><p>$$<br>{\bf t_{\perp} }={\bf M}_{rt} {\bf t} = {\bf t}+{\bf t}_p^T {\bf t} {\bf r}_p<br>$$</p><p>此时，投影向量仅由关系表示。</p><h3 id="TransR-CTransR"><a href="#TransR-CTransR" class="headerlink" title="TransR/CTransR"></a>TransR/CTransR</h3><p>相比TransR对每个关系直接定义一个映射矩阵，TransD通过为每个实体关系对设置一个投影向量，来为三元组动态的构造映射矩阵。</p><p>另外，TransD没有矩阵向量乘法操作，可以用向量运算代替：</p><p>假设$m \geq n$，投影向量能按以下方式计算：<br>$$<br>{\bf h_{\perp} }={\bf M}_{rh} {\bf h} = {\bf h}_p^T {\bf h} {\bf r}_p + [{\bf h}^T, {\bf 0}^T]^T<br>$$</p><p>$$<br>{\bf t_{\perp} }={\bf M}_{rt} {\bf t} = {\bf t}_p^T {\bf t} {\bf r}_p + [{\bf t}^T, {\bf 0}^T]^T<br>$$</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TransD&quot;&gt;&lt;a href=&quot;#TransD&quot; class=&quot;headerlink&quot; title=&quot;TransD&quot;&gt;&lt;/a&gt;TransD&lt;/h1&gt;&lt;p&gt;论文地址: &lt;a href=&quot;http://www.aclweb.org/anthology/P15-106
      
    
    </summary>
    
      <category term="知识图谱" scheme="http://yoururl.com/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="Knowledge graph" scheme="http://yoururl.com/tags/Knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>复杂网络：网络测度之中心性</title>
    <link href="http://yoururl.com/2019/01/20/%E7%BD%91%E7%BB%9C%E6%B5%8B%E5%BA%A6%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%BA%A6%E4%B8%8E%E4%B8%AD%E5%BF%83%E6%80%A7/"/>
    <id>http://yoururl.com/2019/01/20/网络测度（一）：度与中心性/</id>
    <published>2019-01-19T16:01:00.000Z</published>
    <updated>2019-01-26T15:28:24.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="度"><a href="#度" class="headerlink" title="度"></a>度</h2><ul><li><p>定义：<strong>与结点直接相连的边数目</strong></p></li><li><p>对于无向图：</p><ul><li><p>结点 $i$ 的度 可用邻接矩阵表示为  $k_i=\sum_{j=1}^n A_{ij}$  ;</p></li><li><p>无向图中，若边数量为 $m$ , 则边端点为 $2m$ , <strong>边的端点数与所有顶点度总和相等</strong> ， $2m=\sum_{i=1}^n k_i$  或<br>$$<br>m = \frac{1}{2} \sum_{i=1}^n k_i = \frac{1}{2} \sum_{ij} A_{ij}<br>$$</p></li><li><p>顶点度均值 $c = \frac{1}{n} \sum_{i=1}^n k_i$ ;<br>$$<br>c=\frac{2m}{n}<br>$$</p><blockquote><p>$cn=2m$ : 顶点度总和 == 无向边端点数</p></blockquote></li></ul></li><li><blockquote><p>简单图（无重边和自边）中，可能最大边数为 $\frac{1}{2}n(n-1)$ 个。</p><p><strong>连通度</strong>或<strong>密度</strong> $\rho$ : 图中实际出现的边数与边最大值的比值<br>$$<br>\rho = \frac{实际边数}{边最大值} = \frac{m}{\frac{n(n-1)}{2} } = \frac{c}{n-1}<br>$$<br><em>网络规模足够大， 连通度可近似表示   $\rho=c\n$ </em> </p></blockquote></li></ul><ul><li><blockquote><p>根据 $\rho$  定义的网络疏密：</p><p>当 $n \rightarrow \infty $ 时：</p><ul><li><p>$\rho$ 趋于常数， 即度均值 $c\rightarrow \infty$ ，网络为密集的；</p><p>此类网络当网络规模扩大时，邻接矩阵中非零元的比例会保持常数；</p></li><li><p>$\rho \rightarrow 0$， 网络为稀疏的；</p><p>此类网络当网络规模扩大时，邻接矩阵中非零元的比例趋于零； </p></li></ul></blockquote></li><li><blockquote><p><strong>正则图</strong>： 所有结点的度相同；</p><p>$k-正则图$： 所有结点的度为$k$;</p></blockquote></li><li><p>对于有向图：</p><ul><li><p>每个结点有两个度:       考虑从结点$j$到$i$有一条边：</p><ul><li>入度：连接到该结点的入边数；   $k_i^{in}=\sum_{j=1}^n A_{ij}$ </li><li>出度：连接到该结点的出边数；   $k_j^{out}=\sum_{i=1}^n A_{ij}$ </li></ul></li><li><p>有向图中，边数目 $m$ 等于<strong>入边端点数总和</strong>，也等于<strong>出边端点数总和</strong>，有<br>$$<br>m = \sum_{i=1}^n k_i^{in} = \sum_{j=1}^n k_{j}^{out} = \sum_{ij} A_{ij}<br>$$</p></li><li><p>有向图的入度均值 $c_{in}$ 等于出度均值 $c_{out}$ ,即<br>$$<br>c_{in} = \frac{1}{n}\sum_{i=1}^n k_i^{in} = \frac{1}{n}\sum_{j=1}^n k_j^{out} = c_{out}<br>$$</p><p>$$<br>c=c_{in}=c_{out}=\frac{m}{n}<br>$$</p></li></ul></li></ul><h2 id="中心性"><a href="#中心性" class="headerlink" title="中心性"></a>中心性</h2><p>中心性(Centrality)是社交网络分析中用以表达社交网络中结点在整个网络中所在中心的程度。</p><h3 id="度中心性"><a href="#度中心性" class="headerlink" title="度中心性"></a>度中心性</h3><ul><li>定义： 刻画结点中心性的连接中心度， 一个结点与其他点直接链接的总和（度$d$）；</li><li>无向图的结点$v_i$中心性 $C_d$ ： $C_d(v_i) = d_i$ ;                            </li><li>有向图的结点度中心性：<ul><li>入度： 刻画结点受欢迎程度，表示结点的突出性(prominence)或声望(prestige),   $C_d(v_i) = d_i^{in} （声望）$</li><li>出度：表示结点的合群性(gregariousness), $C_d(v_i) = d_i^{out} （合群性）$</li><li>结合入度出度： $C_d(v_i)=d_i^{in} + d_i^{out}$ ;</li></ul></li></ul><blockquote><p>度中心性度量方法不能用于比较不同网络中的中心性值，需要归一化；</p></blockquote><h3 id="度中心性的归一化"><a href="#度中心性的归一化" class="headerlink" title="度中心性的归一化"></a>度中心性的归一化</h3><ul><li>使用最大可能度数：<br>$$<br>C_d^{norm}(v_i)=\frac{度中心度}{最大可能度数}=\frac{d_i}{n-1}<br>$$</li></ul><ul><li>使用最大度数：<br>$$<br>C_d^{max}(v_i) = \frac{度中心度}{最大度数} = \frac{d_i}{\max_jd_j}<br>$$</li></ul><ul><li>使用度数和：<br>$$<br>C_d^{sum}(v_i)=\frac{度中心度}{度数和}=\frac{d_i}{\sum_jd_j} = \frac{d_i}{2m}<br>$$</li></ul><h3 id="特征向量中心性"><a href="#特征向量中心性" class="headerlink" title="特征向量中心性"></a>特征向量中心性</h3><p>在度中心性度量中，认为具有较多连接的结点更为重要。但在社交网络中，拥有更多的邻居结点并不能确保该结点就是重要的，拥有更多重要的邻居结点才能提供更有力的信息。因为很多情况下，一个结点会由于连接到一些很重要的结点从而使得自身的重要性得到提升。</p><p>特征向量中心性通过结合<strong>无向图的邻居节点</strong>（或<strong>有向图的输入邻居结点</strong>）的重要性来概括度中心性。</p><p>对于每个结点$i$,令其的中心性为$x_i$。 计算$i$的所有邻居结点的中心性之和：<br>$$<br>x_i’ = \sum_i A_{ij} x_j   \     \Longrightarrow   \  \bf x’ = Ax    (矩阵形式)<br>$$<br>重复估算过程，得到中心性计算公式：<br>$$<br>\bf x(t) = A^tx(0)<br>$$</p><blockquote><p>$\bf x(0)$  为邻接矩阵特征向量$\bf v_i$的线性组合， 即  $\bf x(0) = \sum_i c_i v_i$ ;</p><p>根据特征值的定义： $Av_i = \lambda v_i$ </p></blockquote><p>最终得：<br>$$<br>\bf x{(t)} = A^t\sum_i c_i v_i = \sum_i c_i\lambda_i^tv_i = \lambda_1^t \sum_i c_i[\frac{\lambda_i}{\lambda_1}]^t v_i<br>$$<br>其中， $\lambda_i$ 为 $\bf A$ 的 特征值， $\lambda_1$ 为其中最大的特征值。</p><blockquote><p>当 $i\neq 1$ 时，对于所有 $i$ ，$\frac{\lambda_i}{\lambda_1}&lt;1$ 。当 $t$ 增大时， 除第一项外其他项都呈指数级下降，当$t \rightarrow \infty$ 时， $\bf x(t) \rightarrow c_1\lambda_1^t v_t$  。<strong>中心性向量的极限与邻接矩阵中的主特征向量成正比</strong>， 因此可等价认为中心性$\bf x$满足: $\bf Ax=\lambda_1 x$</p></blockquote><p>由此可得出，<strong>结点$i$的中心性与该结点邻居节点的中心性之和成正比</strong> ：<br>$$<br>x_i = \frac{1}{\lambda_i} \sum_j A_{ij} x_j<br>$$</p><blockquote><p>该公式赋予特征向量中心性的性质：使得它的值会随两方面因素变大：</p><ul><li>该结点具有多个邻居结点；</li><li>该结点的邻居节点中有重要的结点；</li></ul></blockquote><h4 id="Perron-Frobenius-Theorem"><a href="#Perron-Frobenius-Theorem" class="headerlink" title="Perron-Frobenius Theorem:"></a>Perron-Frobenius Theorem:</h4><p>假设$A\in \Bbb R^{n \times n}$ 时[强]连通图的邻接矩阵，或者 $A:A_{i,j} &gt;0$ （即一个正的$n\times n$的矩阵）。 存在一个正实数（Perron-Frobenius特征值）$\lambda_{max}$，满足$\lambda_{max}$ 是矩阵$\bf A$的特征值，并且$\bf A $的其余特征值均严格小于$\lambda_{max}$。 $\lambda_{max}$ 所对应的特征向量为$v=(v_1,v_2,v_3,…,v_n)$，满足$\forall v_i&gt;0$ 。</p><p>根据该定理，我们可以<strong>通过求解矩阵$A$ 的特征值得到正的中心性值，选取其中最大的特征值 $\lambda_{max}$ ,其对应特征向量为 $x_i$，该特征向量的所有部分均为正值，并且其分量对应于各结点的特征向量中心性，其中特征向量中最大分量对应的结点考虑为最中心的结点</strong></p><blockquote><p>寻找最中心结点：</p><ul><li>计算邻接矩阵的特征值；</li><li>选择最大的特征值，计算对应的特征向量；</li><li>特征向量最大分量对应的结点有最大的特征向量中心性，考虑为最中心的结点。</li></ul></blockquote><p>理论上讲，特征向量中心性对于有向和无向网络都适用，但在有向网络中存在一些问题。</p><ul><li><p>有向网络对应的邻接矩阵通常非对称，意味着有两类特征向量，即左特征向量和右特征向量。左特征向量对应该结点指向的结点（出），右特征向量对应指向该结点的结点（入）。中心性主要由指向该结点的结点赋予，因此选择<strong>右特征向量</strong>。</p><p>在有向网络中结点$i$的特征中心性的正确定义为：<strong>结点的特征向量中心性与指向该结点的所有结点的中心性之和成正比。</strong></p></li><li><p>如果有向网络中结点$B$的所有入边都来源于特征向量中心性为0的邻居结点，则结点$B$的特征向量中心性也为0。</p></li></ul><h3 id="Katz中心性"><a href="#Katz中心性" class="headerlink" title="Katz中心性"></a>Katz中心性</h3><p>Katz中心性是特征向量中心性的变体，解决上述有向网络中零特征向量中心性传递带来的问题。</p><ul><li><p>定义：为网络中的每个结点赋予少量的中心性，不考虑该结点在网络中的具体位置或者其邻居节点的中心性。<br>$$<br>x_i = \alpha \sum_i A_{ij} x_j + \beta<br>$$<br>偏差项$\beta$ 用来解决中心性值为0 的问题；</p><p>矩阵表示上述公式，$\beta$ 作为整体因子其取值并不重要，通常设定为1：<br>$$<br>\bf x=\alpha Ax+\beta 1  \ \Longrightarrow  \beta=1 \Longrightarrow \<br>x=(I-\alpha A)^{-1} 1<br>$$</p></li><li><p>自由参数$\alpha$ 负责调节特征向量与常数项之间的平衡。</p><ul><li><p>当$\alpha=0$ 时， 式（14）只剩下常数项，所有结点赋予相同的中心性$\beta$;</p></li><li><p>当$\alpha$ 变大时，中心性不断提高，$\beta$ 的影响将减小，最终达到一个点，在该点中心性发散。该情况出现在$\bf det(A-\alpha^{-1}I)=0$ 的那一点；</p><blockquote><p>该公式为特征方程，当$\alpha =\lambda_{max}^{-1}$时，行列式第一次经过零点；因此应选择一个小于该值的$\alpha$ 值，保证中心性收敛。</p><p>很多研究中，将$\alpha$ 设为稍小于最大值$\lambda_{max}^{-1}$的值，这样可以使公式中特征向量项权值最大，而使常数项权值最小。</p></blockquote></li></ul></li></ul><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><p>对于增加的常数项，根据结点的不同赋予不同的值，可以定义一种更加通用的中心性：<br>$$<br>x_i = \alpha \sum_j A_{ij} x_j + \beta_i<br>$$<br>其中$\beta_i$是每一个结点与网络无关的固有中心性。因此中心性向量$\bf x$可描述为<br>$$<br>\bf x=(I-\alpha A)^{-1} \beta<br>$$</p><h3 id="PageRank"><a href="#PageRank" class="headerlink" title="PageRank"></a>PageRank</h3><p>Katz中心性的不足之处在于，Katz中心性较高的结点会向它指向的结点传递其高中心性，这是不可取的，因为该高中心性结点指向的结点数量可能很大，但并不是每一个被指向的结点都具有很高的中心性。因此，<strong>被有重要影响的结点指向的结点，其从重要节点获得的中心性会因为与其他结点共享而被稀释。</strong></p><ul><li>定义：从网络邻居结点获得的中心性与邻居结点的中心性除以它们的出度成正比。</li></ul><p>$$<br>x_i = \alpha \sum_i A_{ij} \frac{x_j}{k_j^{out} } + \beta<br>$$</p><blockquote><p>对于网络中出度$k_j^{out}=0$的结点 ，会产生0/0的结果（因为对于所有$i$，$A_{ij}=0$）。</p><p>解决此问题： 没有出度的结点对其他结点的中心性贡献为0，因此将这些结点的出度设定为1；实际可将$k_j^{out}$ 设定为任何一个非零值。</p></blockquote><p>​    表示为矩阵形式，同样将$\beta$设定为1<br>$$<br>\bf x=\alpha AD^{-1}x+\beta1    \  \Longrightarrow \beta=1 \Longrightarrow \  x=(I-\alpha AD^{-1})^{-1} 1=D(D-\alpha A)^{-1} 1<br>$$<br>​    其中， $\bf D$ 为对角矩阵，其元素为 $D_{ii}=\max(k_i^{out},1)$</p><blockquote><p>与katz中心性类似，$\alpha$ 的值应小于$AD^{-1}$的最大特征值的倒数，即$\frac{1}{\lambda_{max} }$ ;</p><p>对于无向网络，其最大特征值为1，因此 $\alpha$ 应选择小于1的值；</p><p>对于有向网络，通常主特征值实际取值近似1；</p></blockquote><h4 id="拓展-1"><a href="#拓展-1" class="headerlink" title="拓展"></a>拓展</h4><p>PageRank推广，使得常数项$\beta$ 对不同顶点取不同的值：<br>$$<br>x_i = \alpha \sum_i A_{ij} \frac{x_j}{k_j^{out} } + \beta_i<br>$$<br>矩阵形式为：<br>$$<br>\bf x=D(D-\alpha A)^{-1} \beta<br>$$</p><blockquote><p>利用该公式对网页进行排序时，其中$\beta_i$的值可以基于网页与查询条件的文本相似性给出。</p></blockquote><blockquote><h4 id="四种中心性测度"><a href="#四种中心性测度" class="headerlink" title="四种中心性测度"></a>四种中心性测度</h4><table><thead><tr><th></th><th>带常数项</th><th>不带常数项</th></tr></thead><tbody><tr><td>除以出度</td><td>$\bf x=D(D-\alpha A)^{-1}1$       RageRank</td><td>$\bf x = AD^{-1}x$     度中心性</td></tr><tr><td>不做任何除法</td><td>$\bf x=(I-\alpha A)^{-1} 1$             Katz中心性</td><td>$\bf x=\lambda_1^{-1}Ax$      特征向量中心性</td></tr></tbody></table></blockquote><h3 id="针对引文网络的中心性"><a href="#针对引文网络的中心性" class="headerlink" title="针对引文网络的中心性"></a>针对引文网络的中心性</h3><h4 id="核心结点与权威结点"><a href="#核心结点与权威结点" class="headerlink" title="核心结点与权威结点"></a>核心结点与权威结点</h4><ul><li>权威结点（authority）: 包含所关注主题有用的信息的结点；</li><li>核心结点（hub)：指向权威结点的结点，说明到哪能找到最合适的权威结点；</li></ul><p>核心结点与权威结点只存在于有向网络中，在有向网络中可以定义两种中心性，</p><ul><li><p>权威中心性</p><p>与指向该结点的核心中心性之和成正比；<br>$$<br>x_i=\alpha \sum_j A_{ij}y_j<br>$$</p></li><li><p>核心中心性</p><p>与该结点指向的结点的权威中心性之和成正比；<br>$$<br>y_i =\beta \sum_j A_{ji}x_j<br>$$<br>矩阵表示：<br>$$<br>\bf x=\alpha Ay  ,    y=\beta A^Tx    \ \Longrightarrow<br>AA^Tx=\lambda x,   A^TAy=\lambda y<br>$$<br>其中，$\lambda=(\alpha \beta)^{-1}$</p><blockquote><p>权威中心性与核心中心性分别由具有相同特征值的矩阵$AA^T$和$A^TA$对应的特征向量决定。</p><p>因此矩阵$AA^T$和$A^TA$ 有相同的主特征值$\lambda$ ：</p><p>若 $\bf AA^Tx=\lambda x$ , 公式两边都乘以 $A^T$ , 可以得到 $\bf A^TA(A^Tx)=\lambda(A^Tx)$。因此$A^Tx$ 也是矩阵$A^TA$ 的特征值为$\lambda$ 的特征向量， 即$\bf y=A^Tx$ 。 </p></blockquote><blockquote><ul><li>$AA^T$ 是共引矩阵，权威中心性可以粗略的认为是共引网络的特征向量中心性；</li><li>$A^TA$ 是文献耦合矩阵，核心中心性就是文献耦合网络的特征向量中心性；</li></ul></blockquote></li></ul><h3 id="接近度中心性"><a href="#接近度中心性" class="headerlink" title="接近度中心性"></a>接近度中心性</h3><p>接近中心性不同于其他中心性测度，度量了一个结点到其他结点的平均距离。接近中心性的思想是结点越趋于中心，越能快速到达其他结点。形象化的描述为，这些结点满足与其他结点之间有最小平均最短路径。</p><ul><li>定义：平均测地距离的倒数<br>$$<br>C_i=\frac{1}{\ell_i}    \<br>\ell_i = \frac{1}{n}\sum_j d_{ij}    \  or \<br>\ell_i = \frac{1}{n-1} \sum_{j(\neq i)} d_{ij}<br>$$</li></ul><blockquote><ul><li><p>问题1：接近中心性最大最小值之间的动态变化范围很小。大部分网络中，顶点之间的测地距离$d_{ij}$ 一般很小，随网络规模增长呈对数级速度增长。而且最短测地距离与最长测地距离确定了平均距离$\ell_i$的上下限，因此$\ell_i$和$C_i$的取值范围都较小。结点接近中心性的密集意味着网络结构的微小变化就会引起接近度中心性值排序的显著变化。</p></li><li><p>问题2：若将不同分支中的结点间的测地距离定义为无穷大，那么假设任何一个多于一个分支的网络中所有结点$i$的$\ell_i$ 都为无穷大，则$C_i$ 为零。</p></li><li>解决方法之一是<strong>只计算在同一分支内部的结点的平均测地距离</strong>，但仍然存在固有缺陷：小规模分支内部结点间的距离普遍偏小，与大规模分支中的结点相比，其$\ell_i$较小，$C_i$更大。产生不理想的结果：<strong>大多数情况下，小规模分支中结点之间的连通程度比大规模分支中要低，因此应赋予较低的中心性</strong>。</li></ul></blockquote><p>重定义接近中心性，使用结点之间的<strong>调和平均测地距离</strong>：<br>$$<br>C_i’= \frac{1}{n-1}\sum_{j(\neq i)} \frac{1}{d_{ij} }<br>$$</p><ul><li><p>网络平均测地距离：</p><ul><li>对于只有一个分支的网络，所有结点对之间的平均距离为</li></ul><p>$$<br>\ell = \frac{1}{n^2}\sum_{ij}d_{ij} = \frac{1}{n}\sum_i \ell_i<br>$$</p><p>​    即所有结点的平均测地距离$\ell_i$的平均值。</p><ul><li><p>对于多分支网络，<em>只计算同一分支内部结点之间路径的平均长度</em>。令${ {\scr C}_m }$表示网络中分支的集合，定义：<br>$$<br>\ell = \frac{\sum_m \sum_{ij\in {\scr C}<em>m} d</em>{ij} }{\sum_m n_m^2}<br>$$<br>其中，$n_m$为分支$\scr C_m$中的结点数。</p><p>另一中定义方式为定义一个调和平均距离$\ell ’$ ：<br>$$<br>\frac{1}{\ell ‘} = \frac{1}{n(n-1)} \sum_{i \neq j} \frac{1}{d_{ij} }=\frac{1}{n}\sum_i C_i’    \  \Longleftrightarrow \<br>\ell ‘ = \frac{n}{\sum_i C_i’}<br>$$</p></li></ul></li></ul><h3 id="介数中心性"><a href="#介数中心性" class="headerlink" title="介数中心性"></a>介数中心性</h3><p>考虑结点在连接其他结点时表现的”中介“次数，即其他结点间通过结点$v_i$的最短路径的数目。</p><p><strong>介数中心性衡量某个结点对其他结点对之间信息流动的影响力。</strong> </p><ul><li><p>定义：<br>$$<br>C_b(v_i) = \sum_{s \neq t \neq v_i} \frac{s到t经过v_i的最短路径数目}{s到t的最短路径数目} =\sum_{s \neq t \neq v_i} \frac{\sigma_{st}(v_i)}{\sigma_{st} }<br>$$</p></li><li><p>归一化：</p><ul><li><p>最大值：当结点$v_i$出现在连接任意结点对$(s,t)$的所有最短路径中时，该结点的中间中心性对应最大值1，即$\forall (s,t), s \neq t \neq v_i , \frac{\sigma_{st} (v_i)}{\sigma_{st} } = 1$。 因此，最大值为：<br>$$<br>C_b(v_i)=\sum_{s \neq t \neq v_i} \frac{\sigma_{st}(v_i)}{\sigma_{st} }=\sum_{s \neq t \neq v_i} 1 = 2<br>\begin{pmatrix}<br>n-1 \<br>2\<br>\end{pmatrix} = (n-1)(n-2)<br>$$</p></li><li></li></ul><p>$$<br>C_b^{norm}(v_i) = \frac{C_b(v_i)}{2\begin{pmatrix}<br>n-1 \<br>2\<br>\end{pmatrix} }<br>$$</p></li></ul><h4 id="另一种表述"><a href="#另一种表述" class="headerlink" title="另一种表述"></a>另一种表述</h4><p>表示一般性网络的介数，定义$n_{st}^i$为从$s$到$t$经过$i$的测地路径数量，定义$g_{st}$为从$s$到$t$的测地路径总数。那么结点$i$的介数中心性可以表示为<br>$$<br>x_i = \sum_{st} \frac{n_{st}^i}{g_{st} }<br>$$<br>介数中心性主要是度量一个结点“介于”其他结点的程度。</p><blockquote><p>一个结点的度可以很低，与其相连的结点的度也很低，与其他结点之间的平均距离很长，但仍有较高的介数。</p><p><a href="https://imgchr.com/i/kulBSH" target="_blank" rel="noopener"><img src="images/kulBSH.png" alt="kulBSH.png"></a></p><p>如图，结点A是网络中两个结点群组之间的桥梁，由于两个群组结点之间的任何最短路径都必须经过结点A，因此A获得了很高的介数。结点A对于其他结点间信息流动起到控制作用，此类结点在社会学文献中称为”<strong>中间人</strong>“。</p></blockquote><ul><li><p>归一化：（考虑自环）</p><ul><li>基于结点对：<br>$$<br>x_i= \frac{1}{n^2}\sum_{st} \frac{n_{st}^i}{g_{st} }<br>$$</li></ul></li></ul><ul><li>基于介数最大可能值：<br>$$<br>x_i = \frac{1}{n^2-n+1} \sum_{st}\frac{n_{st}^i}{g_{st} }<br>$$</li></ul><h3 id="群体中心性"><a href="#群体中心性" class="headerlink" title="群体中心性"></a>群体中心性</h3><p>考虑如何将度中心性、接近中心性以及中间中心性应用到一组结点上。</p><p>假设$S$表示需要求解群体中心性的结点集，$V-S$表示上述集合之外的结点集。</p><h4 id="群体度中心性"><a href="#群体度中心性" class="headerlink" title="群体度中心性"></a>群体度中心性</h4><p>群体度中心性是群体外部结点连接到群体内部结点的数目。形式化的定义为：<br>$$<br>C_d^{group}(S)=|{v_i \in V-S| v_i连接到v_j \in S}|<br>$$<br>与度中心性相似，可以利用有向图中的入度或出度。同时该值可以进行归一化。</p><p>最理想的情况为，群体中的结点均连接到群体外的所有结点上，此时$C_d^{group}(S)$的最大值为$V-S$。使用群体度中心性除以$|V-S|$进行归一化处理。</p><h4 id="群体介数中心性"><a href="#群体介数中心性" class="headerlink" title="群体介数中心性"></a>群体介数中心性</h4><p>群体介数中心性被定义为：<br>$$<br>C_b^{group}(S) = \sum_{s\neq t, s\notin S, t \notin S}  \frac{\sigma_{st}(S)}{\sigma_{st} }<br>$$<br>其中，$\sigma_{st}(S)$ 表示从$s$到$t$经过集合$S$中元素的最短路径的数目。</p><p>最理想的情况下，从$s$到$t$的所有的最短路径均经过集合$S$中的元素，因此，$C_b^{group}(S)$的最大值为${2\begin{pmatrix}  |V-S| \ 2\  \end{pmatrix} }$。</p><p>和介数中心性相似，使用介数中心性除以最大值进行归一化处理。</p><h4 id="群体接近中心性"><a href="#群体接近中心性" class="headerlink" title="群体接近中心性"></a>群体接近中心性</h4><p>群体接近中心性被定义为：<br>$$<br>C_c^{group}(S)=\frac{1}{\bar l_S^{group} }<br>$$<br>其中，$\bar l <em>S^{group} = \frac{1}{|V-S|}\sum</em>{v_j \notin S} l_{S,v_j}$，$l_{S,v_j}$是群体$S$与群体之外的元素$v_j \in V-S$的最短路径的长度。该长度可以以多种方式定义，一种方法是寻找$S$中距离$v_j$最近的成员元素：<br>$$<br>l_{S,v_j} = \min_{v_i \in S}l_{v_i,v_j}<br>$$<br>另一种是使用最大距离或者平均距离。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;度&quot;&gt;&lt;a href=&quot;#度&quot; class=&quot;headerlink&quot; title=&quot;度&quot;&gt;&lt;/a&gt;度&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;定义：&lt;strong&gt;与结点直接相连的边数目&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于无向图：&lt;/p&gt;
&lt;ul&gt;

      
    
    </summary>
    
      <category term="复杂网络" scheme="http://yoururl.com/categories/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Networks" scheme="http://yoururl.com/tags/Networks/"/>
    
  </entry>
  
  <entry>
    <title>R安装与关联jupyter</title>
    <link href="http://yoururl.com/2018/12/14/R%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E5%88%B0jupyter/"/>
    <id>http://yoururl.com/2018/12/14/R安装配置到jupyter/</id>
    <published>2018-12-13T16:01:00.000Z</published>
    <updated>2019-01-26T14:57:23.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="R安装并配置到jupyter"><a href="#R安装并配置到jupyter" class="headerlink" title="R安装并配置到jupyter"></a>R安装并配置到jupyter</h2><ul><li><p>安装R</p><p>版本：<a href="https://mran.revolutionanalytics.com/download" target="_blank" rel="noopener">Microsoft R Open 3.5.1</a></p></li><li><p>cmd进入R会话</p></li></ul><ul><li><p>输入如下配置命令;</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"devtools"</span>)</span><br><span class="line">devtools::install_github(<span class="string">"IRkernel/IRkernel"</span>)</span><br><span class="line">IRkernel::installspec()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;R安装并配置到jupyter&quot;&gt;&lt;a href=&quot;#R安装并配置到jupyter&quot; class=&quot;headerlink&quot; title=&quot;R安装并配置到jupyter&quot;&gt;&lt;/a&gt;R安装并配置到jupyter&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装R&lt;/p&gt;
&lt;p&gt;版本
      
    
    </summary>
    
      <category term="安装与配置" scheme="http://yoururl.com/categories/%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Install &amp; config" scheme="http://yoururl.com/tags/Install-config/"/>
    
  </entry>
  
  <entry>
    <title>jupyterLab安装与配置</title>
    <link href="http://yoururl.com/2018/12/01/%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEjupyterLab/"/>
    <id>http://yoururl.com/2018/12/01/安装与配置jupyterLab/</id>
    <published>2018-11-30T16:01:00.000Z</published>
    <updated>2019-01-26T14:41:16.205Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装与更新-jupyterLab"><a href="#安装与更新-jupyterLab" class="headerlink" title="安装与更新 jupyterLab"></a>安装与更新 jupyterLab</h2><ul><li>安装jupyterLab</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c conda-forge jupyterlab</span><br></pre></td></tr></table></figure><ul><li>更新jupyterlab</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U jupyterlab</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><ul><li>安装nodejs</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c conda-forge nodejs</span><br></pre></td></tr></table></figure><ul><li>安装扩展</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install my-extension</span><br></pre></td></tr></table></figure><ul><li>列出扩展</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension list</span><br></pre></td></tr></table></figure><ul><li>卸载扩展</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension uninstall my-extension</span><br></pre></td></tr></table></figure><ul><li>启用扩展</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension enable my-extension</span><br></pre></td></tr></table></figure><ul><li>禁用扩展</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension disable my-extension</span><br></pre></td></tr></table></figure><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ul><li>目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install @jupyterlab/toc</span><br></pre></td></tr></table></figure><ul><li>tensorboard</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install jupyterlab_tensorboard</span><br></pre></td></tr></table></figure><ul><li>html</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install @mflevine/jupyterlab_html</span><br></pre></td></tr></table></figure><ul><li>latex</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install @jupyterlab/latex</span><br></pre></td></tr></table></figure><ul><li>go-to-definition</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install @krassowski/jupyterlab_go_to_definition</span><br></pre></td></tr></table></figure><ul><li>voyager</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install jupyterlab_voyager</span><br></pre></td></tr></table></figure><ul><li>statusbar</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install @jupyterlab/statusbar</span><br></pre></td></tr></table></figure><ul><li>celltags</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install @jupyterlab/celltags</span><br></pre></td></tr></table></figure><ul><li>drawio</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install jupyterlab-drawio</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装与更新-jupyterLab&quot;&gt;&lt;a href=&quot;#安装与更新-jupyterLab&quot; class=&quot;headerlink&quot; title=&quot;安装与更新 jupyterLab&quot;&gt;&lt;/a&gt;安装与更新 jupyterLab&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装jupyte
      
    
    </summary>
    
      <category term="安装与配置" scheme="http://yoururl.com/categories/%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Install &amp; config" scheme="http://yoururl.com/tags/Install-config/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow环境 人脸识别 FaceNet 应用（一）:FaceNet安装与验证测试集</title>
    <link href="http://yoururl.com/2018/07/15/windows%E4%B8%8Bpython3.5%E5%AE%89%E8%A3%85facenet/"/>
    <id>http://yoururl.com/2018/07/15/windows下python3.5安装facenet/</id>
    <published>2018-07-15T02:15:33.025Z</published>
    <updated>2018-03-20T08:07:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy_z<br>文献：<a href="https://arxiv.org/abs/1503.03832" target="_blank" rel="noopener">FaceNet: A Unified Embedding for Face Recognition and Clustering</a><br><a href="https://pan.baidu.com/s/1R70SWpSmF7SoZB5vkHdfpw" target="_blank" rel="noopener">数据集及模型下载通道</a>：(密码：3wty)</p></blockquote><p>##一、前提条件</p><p>###1.&emsp;已安装Tensorflow</p><p>###2.&emsp;已在安装下列包(二选一):   </p><p>&emsp;&emsp;a.&emsp;python下安装scipy, scikit-learn, opencv-python, h5py, matplotlib, Pillow, requests, psutil</p><p>&emsp;&emsp;b.&emsp;安装Anaconda集成环境</p><p>###3.&emsp;已更新Sklearn至最新版本(二选一):</p><p>&emsp;&emsp;a.&emsp;可在propmt下”conda update conda “</p><p>&emsp;&emsp;b.&emsp;直接在cmd命令行下”pip install -U scikit-learn”</p><p>###4.&emsp;已安装git</p><blockquote><p>备注:如果没有完成以上的第3点,之后执行align时,可能会出现”no module named facenet”,”no module named align”,”no module named scikit-learn”等情况</p></blockquote><p>##二、安装和配置FaceNet</p><p>&emsp;&emsp;1.&emsp;在cmd命令行，定位到自己想下载的文件夹,用git下载FaceNet源代码工程:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive https://github.com/davidsandberg/facenet.git</span><br></pre></td></tr></table></figure><blockquote><p>建议：最好定位在&emsp;&emsp;Anaconda3\Lib\site-packages&emsp;&emsp;下安装。因为FaceNet也相当于一个python库。</p></blockquote><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/23373226.jpg" alt=""></p><p>&emsp;&emsp;2.&emsp;下载数据集LFW。LFW数据集是由美国马萨诸塞大学阿姆斯特分校计算机视觉实验室整理的。下载地址：<a href="http://vis-www.cs.umass.edu/lfw/lfw.tgz" target="_blank" rel="noopener">http://vis-www.cs.umass.edu/lfw/lfw.tgz</a>, 下载完成后，把数据解压到目录 ..facenet\data\lfw\raw  下面,新建一个空文件夹命名为”lfw_160”。可以看到数据集中每张图像的分辩率是250*250。</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/8023931.jpg" alt=""></p><p>&emsp;&emsp;3.&emsp;设置环境变量,以下方法二选一:</p><p>&emsp;&emsp;a.&emsp;在cmd命令行键入：set PYTHONPATH=…\facenet\src, 例如笔者的是:set PYTHONPATH=D:\Anaconda2\envs\py3.6\Lib\site-packages\facenet\src</p><p>&emsp;&emsp;b.&emsp;在 计算机–&gt;属性–&gt;高级系统设置–&gt;环境变量中,新建PYTHONPATH,键入 D:\Anaconda2\envs\py3.6\Lib\site-packages\facenet\src</p><p>检验:在cmd命令行下面，键入set，查看设置情况</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/66907272.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/56240084.jpg" alt=""></p><p>##三、图像数据预处理</p><blockquote><p>也可直接使用下载的已处理数据集</p></blockquote><p>&emsp;&emsp;我们需要将待检测所使用的数据集校准为和预训练模型所使用的数据集大小一致。</p><p>&emsp;&emsp;1.&emsp;使用&emsp;facenet\src\align\align_dataset_mtcnn.py&emsp;进行校准,校准后的图片存在&emsp;..facenet\data\lfw\lfw_160&emsp;下面。在cmd命令行 或者 对应语言版本的propmt下，定位到facenet所在位置，键入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src\align\align_dataset_mtcnn.py data/lfw/raw data/lfw/lfw_160</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;官方Wiki说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/align/align_dataset_mtcnn.py ~/datasets/casia/CASIA-maxpy-clean/ ~/datasets/casia/casia_maxpy_mtcnnpy_182 --image_size 182 --margin 44</span><br></pre></td></tr></table></figure><blockquote><p>上述命令生成的脸部缩略图是182x182像素。</p></blockquote><p>&emsp;&emsp;2.&emsp;校准后发现图像大小变了</p><p>##四、评估谷歌预训练模型在数据集的准确率</p><p>&emsp;&emsp;1.&emsp;下载预训练的模型。把下载的文件解压到src\models\目录下面。</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/34564036.jpg" alt=""></p><p>&emsp;&emsp;2.&emsp;程序下载好了,测试数据集LFW也有了,模型也有了,接下来就可以评估模型在数据集的准确率了。在cmd命令行或者propmt下定位到facenet文件夹下，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src\validate_on_lfw.py data\lfw\lfw_160 src\models\20170512-110547</span><br></pre></td></tr></table></figure><p>紧接着,预测中,结果如图：</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/47530520.jpg" alt=""></p><p>##五、其他</p><p>###5.1 对比<br>&emsp;&emsp;facenet可以直接比对两个人脸经过它的网络映射之后的欧氏距离，运行程序为facenet-master\src\compare.py。<br>-1、在compare.py所在目录下放入要比对的文件1.jpg和2.jpg，打开cmd命令行窗口<br>-2、cd到compare.py所在路径<br>-3、输入 python compare.py models/20170512-110547 1.png 2.png</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-16/42045957.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy_z&lt;br&gt;文献：&lt;a href=&quot;https://arxiv.org/abs/1503.03832&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FaceNet: A Unified Embedding for F
      
    
    </summary>
    
      <category term="人脸识别" scheme="http://yoururl.com/categories/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="Summary" scheme="http://yoururl.com/tags/Summary/"/>
    
      <category term="facenet" scheme="http://yoururl.com/tags/facenet/"/>
    
      <category term="face recognition" scheme="http://yoururl.com/tags/face-recognition/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter notebook: How to create a slideshow</title>
    <link href="http://yoururl.com/2018/07/15/Jupyter%20notebook%EF%BC%9AHow%20to%20create%20a%20slideshow/"/>
    <id>http://yoururl.com/2018/07/15/Jupyter notebook：How to create a slideshow/</id>
    <published>2018-07-15T02:15:32.933Z</published>
    <updated>2018-04-25T17:54:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用Jupyter-notebook-制作PPT"><a href="#利用Jupyter-notebook-制作PPT" class="headerlink" title="利用Jupyter notebook 制作PPT"></a>利用Jupyter notebook 制作PPT</h1><p>使用 Jupyter notebook 作为 slide 主要优点：  </p><ul><li>运行 notebook 可以播放幻灯片  </li><li>导出 slides.html 格式的幻灯片，方便在浏览器打开播放</li></ul><h2 id="工具依赖"><a href="#工具依赖" class="headerlink" title="工具依赖"></a>工具依赖</h2><ul><li>RISE</li><li>reveal.js </li></ul><h3 id="RISE"><a href="#RISE" class="headerlink" title="RISE"></a>RISE</h3><p>RISE allows you to instantly turn your Jupyter Notebooks into a slideshow. No out-of-band conversion is needed, switch from jupyter notebook to a live reveal.js-based slideshow in a single keystroke, and back.</p><h4 id="Install-RISE"><a href="#Install-RISE" class="headerlink" title="Install RISE"></a>Install RISE</h4><h4 id="Option-1-Using-conda"><a href="#Option-1-Using-conda" class="headerlink" title="Option 1 - Using conda :"></a>Option 1 - Using conda :</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c damianavila82 rise</span><br></pre></td></tr></table></figure><h4 id="Option-2-Using-pip"><a href="#Option-2-Using-pip" class="headerlink" title="Option 2 - Using pip::"></a>Option 2 - Using pip::</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install RISE</span><br></pre></td></tr></table></figure><p>and then two more steps to install the JS and CSS in the proper places:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-nbextension install rise --py --sys-prefix</span><br></pre></td></tr></table></figure><p>and enable the nbextension:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-nbextension enable rise --py --sys-prefix</span><br></pre></td></tr></table></figure><h3 id="reveal-js"><a href="#reveal-js" class="headerlink" title="reveal.js"></a>reveal.js</h3><p>A framework for easily creating beautiful presentations using HTML. <a href="https://revealjs.com/#/" target="_blank" rel="noopener">Check out the live demo.</a></p><p>reveal.js comes with a broad range of features including nested slides, Markdown contents, PDF export, speaker notes and a JavaScript API. There’s also a fully featured visual editor and platform for sharing reveal.js presentations at slides.com.  </p><p>Reveal.js 是一个使用 HTML 语言制作演示文稿的 Web 框架，支持插入多种格式的内容，并以类似 PPT 的形式呈现。  </p><p>Reveal.js 具有许多优势：</p><ul><li>制作灵活、不限应用，只需修改 HTML 文件</li><li>发布灵活、不限平台，只需打开 HTML 文件</li><li>丰富的特性，支持过渡动画、代码高亮、视频背景、Markdown 语法、导出 PDF 等</li><li>极度轻量，占用空间和内存少</li></ul><p>配置流程：  </p><ul><li>在 notebook 文件目录（包含 .ipnb 文件）下， clone <a href="https://github.com/hakimel/reveal.js.git" target="_blank" rel="noopener">reveal.js</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/hakimel/reveal.js.git</span><br></pre></td></tr></table></figure><h2 id="slide-设置"><a href="#slide-设置" class="headerlink" title="slide 设置"></a>slide 设置</h2><p>这里有一个幻灯片<a href="http://www.slideviper.oquanta.info/tutorial/slideshow_tutorial_slides.html#/" target="_blank" rel="noopener">示例</a>供参考，其制作风格简洁明晰。</p><p>那么如何用 Jupyter Notebook 制作幻灯片呢？<br>首先在 notebook 的菜单栏选择 View &gt; Cell Toolbar &gt; Slideshow，这时在文档的每个单元右上角显示了 Slide Type 的选项。通过设置不同的类型，来控制幻灯片的格式。有如下5中类型：</p><ul><li>Slide：主页面，通过按左右方向键进行切换。</li><li>Sub-Slide：副页面，通过按上下方向键进行切换。</li><li>Fragment：一开始是隐藏的，按空格键或方向键后显示，实现动态效果。</li><li>Skip：在幻灯片中不显示的单元。</li><li>Notes：作为演讲者的备忘笔记，也不在幻灯片中显示。</li></ul><h2 id="生成幻灯片"><a href="#生成幻灯片" class="headerlink" title="生成幻灯片"></a>生成幻灯片</h2><p>在notebook中设置cell 的slide属性，确认后保存，例如 notebook.ipynb<br>使用nbconvert 来将notebook文件转换为HTML  </p><pre><code class="python">jupyter nbconvert --to slides notebook.ipynb --reveal-prefix=reveal.js</code></pre><p>生成文件： notebook.slides.html , 直接用浏览器打开即可播放幻灯片</p><p>有时候不想要input cell显示在slide上面，这个时候可以使用下面的设置：  </p><pre><code class="python">jupyter nbconvert RainStromNetworkAnalysis.ipynb --to slides --TemplateExporter.exclude_input=<span class="keyword">True</span>  </code></pre><p>同样的使用下面的命令虽然可以隐藏input cell但是不能生成slide只能生成html文件：  </p><pre><code class="python">jupyter nbconvert --template=nbextensions --to=slides RainStromNetworkAnalysis.ipynb</code></pre><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>Reveal.js 支持 Markdown 语法，我们得以直接在 Markdown 编辑器里做 PPT。以上只是制作了最简单的 PPT，我们后续还可以添加各种动画效果、背景、图表等内容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;利用Jupyter-notebook-制作PPT&quot;&gt;&lt;a href=&quot;#利用Jupyter-notebook-制作PPT&quot; class=&quot;headerlink&quot; title=&quot;利用Jupyter notebook 制作PPT&quot;&gt;&lt;/a&gt;利用Jupyter note
      
    
    </summary>
    
      <category term="Jupyter" scheme="http://yoururl.com/categories/Jupyter/"/>
    
    
      <category term="Jupyter" scheme="http://yoururl.com/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow环境 人脸识别 FaceNet 应用（二）:FaceNet官方WiKi解读</title>
    <link href="http://yoururl.com/2018/07/15/FaceNet%20%E5%AE%98%E6%96%B9WiKi%E8%A7%A3%E8%AF%BB/"/>
    <id>http://yoururl.com/2018/07/15/FaceNet 官方WiKi解读/</id>
    <published>2018-07-15T02:15:32.918Z</published>
    <updated>2018-03-23T08:27:53.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy_z<br>文献：<a href="https://github.com/davidsandberg/facenet/wiki" target="_blank" rel="noopener">官方WiKi</a></p></blockquote><p>##一、分类器训练</p><p>###1.1 运行 train_softmax.py 文件训练<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">python src/train_softmax.py</span><br><span class="line">--logs_base_dir ~/logs/facenet/</span><br><span class="line">--models_base_dir ~/models/facenet/</span><br><span class="line">--data_dir ~/datasets/casia/casia_maxpy_mtcnnalign_182</span><br><span class="line">--image_size 160</span><br><span class="line">--model_def models.inception_resnet_v1</span><br><span class="line">--lfw_dir /home/david/datasets/lfw/lfw_mtcnnalign_160</span><br><span class="line">--optimizer RMSPROP</span><br><span class="line">--learning_rate -1</span><br><span class="line">--max_nrof_epochs 80</span><br><span class="line">--keep_probability 0.8</span><br><span class="line">--random_crop</span><br><span class="line">--random_flip</span><br><span class="line">--learning_rate_schedule_file data/learning_rate_schedule_classifier_casia.txt</span><br><span class="line">--weight_decay 5e-5</span><br><span class="line">--center_loss_factor 1e-2</span><br><span class="line">--center_loss_alfa 0.9</span><br></pre></td></tr></table></figure></p><ul><li><strong>log_base_dir</strong>:<br><strong>models_base_dir</strong>:<br>训练开始时，以数据/时间训练开始的训练会话的子目录以yyyymmdd-hhmm的格式在以上两个目录中创建。  </li><li><strong>data_dir</strong>：  用于指出训练数据集的位置，可以通过用冒号分隔路径来使用几个数据集的联合。<br>model_def： 给出推理网络的描述符，上述样例中  models.inception_resnet_v1 指向models包中的<br>inception_resnet_v1模块。 该模块定义一个函数 inference(images, …)，images是输入图像的占位符(Inception-ResNet-v1的尺寸&lt;?, 160,160,3&gt;),并返回一个embeddings变量的引用。  </li><li><strong>lfw_dir</strong>：如果将参数lfw_dir设置为指向LFW数据集的基本目录，那么每1000个批次将在LFW上对该模型进行评估。有关如何在LFW上评估现有模型的信息，请参阅 Validate-on-LFW 页面。 如果在训练期间不需要对LFW进行评估，则可以将lfw_dir参数留空。 但请注意，此处使用的LFW数据集应与训练数据集一致。  </li><li><strong>max_nrof_epochs</strong>：最大训练周期。  </li><li><strong>learning_rate_schedule_file</strong>：为了改善最终模型的性能，当训练开始收敛时，学习速率降低10倍。 这是通过在参数learning_rate_schedule_file指向的文本文件中定义的学习速率时间表来完成的，同时还将参数learning_rate设置为负值。 为了简单起见，本例中data / learning_rate_schedule_classifier_casia.txt中使用的学习率也包括在库中。</li></ul><blockquote><p>注：train_tripletloss.py和train_softmax.py的区别：这是作者对论文做出的一个延伸，除了使用facenet里提到的train_tripletloss三元组损失函数来训练，还实现了用softmax的训练方法来训练。当然，在样本量很小的情况下，用softmax训练会更容易收敛。但是，当训练集中包含大量的不同个体(超过10万)时，最后一层的softmax输出数量就会变得非常大，但是使用train_tripletloss的训练仍然可以正常工作。</p></blockquote><p>###1.2 运行 train_softmax.py 文件训练</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">python src/train_tripletloss.py</span><br><span class="line">--logs_base_dir ~/logs/facenet/</span><br><span class="line">--models_base_dir ~/models/facenet/</span><br><span class="line">--data_dir ~/datasets/casia/casia_maxpy_mtcnnalign_182_160</span><br><span class="line">--image_size 160</span><br><span class="line">--model_def models.inception_resnet_v1</span><br><span class="line">--lfw_dir ~/datasets/lfw/lfw_mtcnnalign_160</span><br><span class="line">--optimizer RMSPROP</span><br><span class="line">--learning_rate 0.01</span><br><span class="line">--weight_decay 1e-4</span><br><span class="line">--max_nrof_epochs 500</span><br></pre></td></tr></table></figure><p>##二、可视化TensorBoard<br>&emsp;&emsp;监视训练过程，使用TensorBoard:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir=~/logs/facenet --port 6006</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;打开浏览器：<a href="http://localhost:6006/" target="_blank" rel="noopener">http://localhost:6006/</a></p><p>##三、用自己的图像训练分类器</p><p>###3.1 在LFW上训练分类器  </p><p>&emsp;&emsp;对于这个实验，我们使用LFW图像的子集来训练分类器。 LFW数据集分为训练和测试集。 然后加载预训练模型，然后使用此模型为选定图像生成特征。 预训练模型通常在更大的数据集上进行训练以提供良好的性能（本例中为MS-Celeb-1M数据集的一个子集）。</p><ul><li>将数据集分解为训练和测试集</li><li>加载预训练模型进行特征提取</li><li>计算数据集中图像的嵌入</li><li><p>模式= TRAIN：</p><ul><li>使用来自数据集的训练部分的嵌入来训练分类器  </li><li>将训练好的分类模型保存为python pickle</li></ul></li><li><p>模式= CLASSIFY：</p><ul><li>加载分类模型</li><li>使用来自数据集测试部分的嵌入来测试分类器  </li></ul></li></ul><blockquote><p>classifier.py定义参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">def parse_arguments(argv):</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">    parser.add_argument(&apos;mode&apos;, type=str, choices=[&apos;TRAIN&apos;, &apos;CLASSIFY&apos;],</span><br><span class="line">        help=&apos;Indicates if a new classifier should be trained or a classification &apos; +</span><br><span class="line">        &apos;model should be used for classification&apos;, default=&apos;CLASSIFY&apos;)</span><br><span class="line">    parser.add_argument(&apos;data_dir&apos;, type=str,</span><br><span class="line">        help=&apos;Path to the data directory containing aligned LFW face patches.&apos;)</span><br><span class="line">    parser.add_argument(&apos;model&apos;, type=str,</span><br><span class="line">        help=&apos;Could be either a directory containing the meta_file and ckpt_file or a model protobuf (.pb) file&apos;)</span><br><span class="line">    parser.add_argument(&apos;classifier_filename&apos;,</span><br><span class="line">        help=&apos;Classifier model file name as a pickle (.pkl) file. &apos; +</span><br><span class="line">        &apos;For training this is the output and for classification this is an input.&apos;)</span><br><span class="line">    parser.add_argument(&apos;--use_split_dataset&apos;,</span><br><span class="line">        help=&apos;Indicates that the dataset specified by data_dir should be split into a training and test set. &apos; +  </span><br><span class="line">        &apos;Otherwise a separate test set can be specified using the test_data_dir option.&apos;, action=&apos;store_true&apos;)</span><br><span class="line">    parser.add_argument(&apos;--test_data_dir&apos;, type=str,</span><br><span class="line">        help=&apos;Path to the test data directory containing aligned images used for testing.&apos;)</span><br><span class="line">    parser.add_argument(&apos;--batch_size&apos;, type=int,</span><br><span class="line">        help=&apos;Number of images to process in a batch.&apos;, default=90)</span><br><span class="line">    parser.add_argument(&apos;--image_size&apos;, type=int,</span><br><span class="line">        help=&apos;Image size (height, width) in pixels.&apos;, default=160)</span><br><span class="line">    parser.add_argument(&apos;--seed&apos;, type=int,</span><br><span class="line">        help=&apos;Random seed.&apos;, default=666)</span><br><span class="line">    parser.add_argument(&apos;--min_nrof_images_per_class&apos;, type=int,</span><br><span class="line">        help=&apos;Only include classes with at least this number of images in the dataset&apos;, default=20)</span><br><span class="line">    parser.add_argument(&apos;--nrof_train_images_per_class&apos;, type=int,</span><br><span class="line">        help=&apos;Use this number of images from each class for training and the rest for testing&apos;, default=10)</span><br><span class="line"></span><br><span class="line">    return parser.parse_args(argv)</span><br></pre></td></tr></table></figure></p></blockquote><ul><li><strong>mode</strong>：  指示训练新分类器还是进行分类测试集。’TRAIN’,    ‘CLASSIFY’</li><li><strong>data_dir</strong>：  包含对齐的LFW面部补丁的数据目录路径。</li><li><strong>model</strong>：  可能是包含meta_file和ckpt_file或模型protobuf(.pb)文件的目录</li><li><strong>classifier_filename</strong>：  分类器模型文件名称作pickle（.pkl）文件，对于训练过程，这是输出；对于分类过程，这是输入。</li><li><strong>use_split_dataset</strong>：  指示由data_dir指定的数据集应该分为训练集和测试集。 否则可以使用test_data_dir选项指定单独的测试集。</li><li><strong>test_data_dir</strong>：  包含用于测试的对齐图像的测试数据目录的路径。</li><li><strong>batch_size</strong>：  一个批次的图像运行数量。</li><li><strong>image_size</strong> ：  图像的像素尺寸。</li><li><strong>seed</strong>:   随机seed。</li><li><strong>min_nrof_images_per_class</strong>：  仅包含数据集中至少包含这些数量的图像的类。</li><li><strong>nrof_train_images_per_class</strong>：  从每个类中使用这个数量的图像进行训练，其余的进行测试。</li></ul><p>&emsp;&emsp;在数据集的训练集部分训练分类器的步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py</span><br><span class="line">TRAIN</span><br><span class="line">data/lfw/lfw_align_mtcnnpy_160/</span><br><span class="line">src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">src/models/lfw_classifier.pkl</span><br><span class="line">--batch_size 1000</span><br><span class="line">--min_nrof_images_per_class 40</span><br><span class="line">--nrof_train_images_per_class 35</span><br><span class="line">--use_split_dataset</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py TRAIN data/lfw/lfw_align_mtcnnpy_160/ src/models/20170512-110547/20170512-110547.pb src/models/lfw_classifier.pkl --batch_size 1000 --min_nrof_images_per_class 40 --nrof_train_images_per_class 35 --use_split_dataset</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;训练输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Number of classes: 19</span><br><span class="line">Number of images: 665</span><br><span class="line">Loading feature extraction model</span><br><span class="line">Model filename: src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">Calculating features for images</span><br><span class="line">Training classifier</span><br><span class="line">Saved classifier model to file &quot;src/models/lfw_classifier.pkl&quot;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;训练好的分类器可以稍后用于使用测试集进行分类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py</span><br><span class="line">CLASSIFY</span><br><span class="line">data/lfw/lfw_align_mtcnnpy_160/</span><br><span class="line">src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">src/models/lfw_classifier.pkl</span><br><span class="line">--batch_size 1000</span><br><span class="line">--min_nrof_images_per_class 40</span><br><span class="line">--nrof_train_images_per_class 35</span><br><span class="line">--use_split_dataset</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py CLASSIFY data/lfw/lfw_align_mtcnnpy_160/ src/models/20170512-110547/20170512-110547.pb src/models/lfw_classifier.pkl --batch_size 1000 --min_nrof_images_per_class 40 --nrof_train_images_per_class 35 --use_split_dataset</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;单独指定测试集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py CLASSIFY data/lfw/test_lfw src/models/20170512-110547/20170512-110547.pb src/models/lfw_classifier.pkl --batch_size 1000 --min_nrof_images_per_class 40 --nrof_train_images_per_class 35 --test_data_dir data/lfw/test_lfw</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里使用数据集的测试集部分进行分类，并显示分类结果和分类概率。 该子集的分类准确度为〜0.98。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Number of classes: 19</span><br><span class="line">Number of images: 1202</span><br><span class="line">Loading feature extraction model</span><br><span class="line">Model filename: src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">Calculating features for images</span><br><span class="line">Testing classifier</span><br><span class="line">Loaded classifier model from file &quot;src/models/lfw_classifier.pkl&quot;</span><br><span class="line">   0  Ariel Sharon: 0.712</span><br><span class="line">   1  Ariel Sharon: 0.771</span><br><span class="line">   2  Ariel Sharon: 0.807</span><br><span class="line">   3  Ariel Sharon: 0.785</span><br><span class="line">   4  Ariel Sharon: 0.750</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">1197  Vladimir Putin: 0.536</span><br><span class="line">1198  Vladimir Putin: 0.723</span><br><span class="line">1199  Vladimir Putin: 0.715</span><br><span class="line">1200  Vladimir Putin: 0.663</span><br><span class="line">1201  Vladimir Putin: 0.732</span><br><span class="line">Accuracy: 0.999</span><br></pre></td></tr></table></figure></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-21/53475149.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-21/76473615.jpg" alt=""></p><p>##四、基于mtcnn与facenet的人脸识别（单张图像识别分类）</p><p>&emsp;&emsp;代码：facenet/contributed/predict.py  </p><p>&emsp;&emsp;主要功能：</p><ul><li><p>① 使用mtcnn进行人脸检测并对齐与裁剪</p></li><li><p>② 对裁剪的人脸使用facenet进行embedding</p></li><li><p>③ 执行predict.py进行人脸识别（需要训练好的svm模型）</p></li></ul><p>&emsp;&emsp;参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">def parse_arguments(argv):</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(&apos;image_files&apos;, type=str, nargs=&apos;+&apos;, help=&apos;Path(s) of the image(s)&apos;)</span><br><span class="line">    parser.add_argument(&apos;model&apos;, type=str,</span><br><span class="line">        help=&apos;Could be either a directory containing the meta_file and ckpt_file or a model protobuf (.pb) file&apos;)</span><br><span class="line">    parser.add_argument(&apos;classifier_filename&apos;,</span><br><span class="line">        help=&apos;Classifier model file name as a pickle (.pkl) file. &apos; +</span><br><span class="line">        &apos;For training this is the output and for classification this is an input.&apos;)</span><br><span class="line">    parser.add_argument(&apos;--image_size&apos;, type=int,</span><br><span class="line">        help=&apos;Image size (height, width) in pixels.&apos;, default=160)</span><br><span class="line">    parser.add_argument(&apos;--seed&apos;, type=int,</span><br><span class="line">        help=&apos;Random seed.&apos;, default=666)</span><br><span class="line">    parser.add_argument(&apos;--margin&apos;, type=int,</span><br><span class="line">        help=&apos;Margin for the crop around the bounding box (height, width) in pixels.&apos;, default=44)</span><br><span class="line">    parser.add_argument(&apos;--gpu_memory_fraction&apos;, type=float,</span><br><span class="line">        help=&apos;Upper bound on the amount of GPU memory that will be used by the process.&apos;, default=1.0)</span><br><span class="line">    return parser.parse_args(argv)</span><br></pre></td></tr></table></figure></p><ul><li><strong>image_files</strong>： 被识别图像路径</li><li><strong>model</strong>：包含meta_file和ckpt_file或模型protobuf（.pb）文件的目录</li><li><strong>classifier_filename</strong>：分类器模型文件名称作为pickle（.pkl）文件</li></ul><p>&emsp;&emsp;测试：用三中生成的lfw_classifier.pkl作为分类器模型进行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python predict.py d:/Anaconda3/Lib/site-packages/facenet/data/images/3.png D:/Anaconda3/Lib/site-packages/facenet/src/models/20170512-110547 D:/Anaconda3/Lib/site-packages/facenet/src/models/lfw_classifier.pkl</span><br></pre></td></tr></table></figure><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-22/3119407.jpg" alt=""></p><p>python contributed/predict.py data/images/2.png src/models/20170512-110547 src/models/lfw_classifier_whole.pkl</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy_z&lt;br&gt;文献：&lt;a href=&quot;https://github.com/davidsandberg/facenet/wiki&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方WiKi&lt;/a&gt;&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="人脸识别" scheme="http://yoururl.com/categories/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="Summary" scheme="http://yoururl.com/tags/Summary/"/>
    
      <category term="facenet" scheme="http://yoururl.com/tags/facenet/"/>
    
      <category term="face recognition" scheme="http://yoururl.com/tags/face-recognition/"/>
    
  </entry>
  
  <entry>
    <title>DeepFool</title>
    <link href="http://yoururl.com/2018/07/15/Deep%20Fool/"/>
    <id>http://yoururl.com/2018/07/15/Deep Fool/</id>
    <published>2018-07-15T02:15:32.911Z</published>
    <updated>2018-03-14T07:20:13.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy_z<br>翻译文献：<a href="https://arxiv.org/abs/1511.04599" target="_blank" rel="noopener">DeepFool: a simple and accurate method to fool deep neural networks</a><br>^_^: 红色小字为作者自己的小白理解，如有错误，请谅解。欢迎纠正！</p></blockquote><p><a href="1">^_^</a></p><p>#符号说明</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>$x$</td><td>原始图像</td></tr><tr><td>$r$</td><td>扰动</td></tr><tr><td>$\hat{k}(x)$</td><td>预测标签</td></tr><tr><td>$Δ(x;\hat{k})$</td><td>$\hat{k}$ 在点 $x$ 处的鲁棒性</td></tr><tr><td>$\mathbb{E}_x$</td><td>数据分布期望</td></tr></tbody></table><p>&emsp;&emsp;对于给定分类器，定义对抗扰动:<br>$$<br>∆(x;<br>\hat{k}) := \min_r ||r||_2 \;\; s.t.\; \hat{k}(x + r) ≠ \hat{k}(x),</p><p>\tag{1}<br>$$</p><p>&emsp;&emsp;分类器的鲁棒性定义为：<br>$$<br>ρ_{adv}(\hat{k}) = \mathbb{E}_x \,\frac{∆(x;\hat{k})}{ ||x||_2},<br>\tag{2}<br>$$</p><p>#对于二分类器的DeepFool</p><p>&emsp;&emsp;多分类器可以看作是二值分类器的集合，因此先研究二分类器算法。</p><ul><li><p>我们假设 $\hat{k}(x) = sign(f(x))$ ，其中 $f$ 是一个任意的标量值图像分类函数，$f:\mathbb{R}^n \rightarrow \mathbb{R}$ 。<br>用 ${\scr F}=^\Delta={x:f(x)=0}$ 表示 $f$ 的零水平集。<br>首先分析当 $f$ 是一个<a href="https://baike.baidu.com/item/%E4%BB%BF%E5%B0%84%E5%87%BD%E6%95%B0/9276178?fr=aladdin" target="_blank" rel="noopener">仿射</a>分类器 $f(x)=w^Tx+b$ ，然后推导出一般算法，该算法可应用于任何可微二值分类器 $f$。</p></li><li><p>当 $f$ 是仿射的分类器时，$f$ 在 $x_0$ 点处的鲁棒性: $\Delta (x_0;f)$ ，等于从 $x_0$ 到分离仿射超平面 ${\scr F}={x:w^Tx+b=0}$ 的距离（见图2），</p></li></ul><blockquote><p>之后，我们通过 $f$ 或其相应的离散映射 $\hat{k}$ 来引用分类器。 因此，$ρ<em>{adv}(\hat{k})=ρ</em>{adv}(f) 和 Δ(x; \hat{k})=Δ(x; f)$。</p></blockquote><center><font color="#0099ff" size="2" face="黑体">图2：线性二值分类器的对抗样本 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/76583305.jpg" alt=""></p><ul><li>改变分类器决策的最小扰动对应于 $x_0$ 到 ${\scr F}$ 上的正交投影。  由下列封闭式公式给出：<br>$$<br>r_∗(x_0) := arg \min ||r||_2<br>\;\;s.t. \;sign(f(x_0 + r))  \not= sign(f(x_0))<br>= −\frac{f(x_0)}{\sideset{}{^2_2}{||w||}}w,<br>\tag{3}<br>$$</li></ul><blockquote><font color="#FF0000" size="2" face="黑体"><a href="1">^_^</a>:推导参考支持向量机概念。</font></blockquote><ul><li>现在假设 $f$ 是一般的二元可微分类器，我们采用迭代过程来估计鲁棒性 $\Delta (x_0;f)$ ，具体而言，在每次迭代中，$f$ 围绕当前点 $x_i$线性化，并且线性化分类器的最小扰动被计算为:<br>$$<br>arg \min_{r_i} ||r_i||_2 \;\;s.t.\; f(x_i) + ∇f(x_i)^Tr_i = 0,<br>\tag{4}<br>$$</li></ul><blockquote><font color="#FF0000" size="2" face="黑体"><a href="1">^_^</a>:梯度方向即为垂直超平面的方向，也就是超平面的法线上方向，可以最快达到分类边界。</font></blockquote><ul><li>算法的迭代 $i$ 中的扰动 $r_i$ 是使用方程（3）中的封闭形式解来计算的，并且在下一个迭代 $x_{i + 1}$ 被更新。当 $x_{i + 1}$ 改变分类器的符号时，该算法停止。</li></ul><center><font color="#0099ff" size="2" face="黑体">算法1：二值分类器的DeepFool算法 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/47575515.jpg" alt=""></p><center><font color="#0099ff" size="2" face="黑体">图3：算法1的几何图示 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/85167736.jpg" alt=""></p><blockquote><p>  当 $n=2$ 时，假设 $x_0∈ \mathbb{R}^n$ 。 绿色平面是 $x→f(x_0)+∇f(x_0)^T(x−x_0)$ 的图形，与分类器函数 $x→f(x)$ 相切。橙色线表示 $f(x_0) + ∇f(x_0)^T(x-x_0) = 0$ ， $x_0$ 投影到 $\mathbb{R}^n$ 的橙色超平面进一步得到 $x_1$ 。</p></blockquote><p>&emsp;&emsp;以上算法经常能收敛到零水平集 ${\scr F}$ 。但为了到达分类边界的另一边，最后的扰动向量 $\hat{r}$ 需要乘 $1+η$，且 $η≪1$ 。在后续实验中 $η=0.02$ 。</p><p>#对于多分类器的DeepFool</p><p>&emsp;&emsp;将DeepFool方法推广到多分类器。多分类器最常用的方法是 <a href="http://blog.csdn.net/u013082989/article/details/53001746" target="_blank" rel="noopener">one-vs-all</a>(一对多)。因此基于该分类方案提出方法。</p><ul><li>在该方案中，分类器有 $c$ 类输出， 因此分类器能被定义为 $f: \mathbb{R}^n \rightarrow \mathbb{R}^c$  。分类是通过以下映射完成的：<br>$$<br>\hat{k}(x)=arg\max_k \;f_k(x),<br>\tag{5}<br>$$<br>&emsp;&emsp;&emsp; $f_k(x)$ 是 $f(x)$ 对应于第 $k$ 类的输出。</li></ul><p>&emsp;&emsp;与二分类情况类似，我们首先提出了线性情况的建议方法，然后将其推广到其他分类器。</p><p>##仿射多分类器</p><ul><li>$f(x)$ 是仿射分类器，$f(x)=W^T+b$ 。映射 $\hat{k}$ 是“one-vs-all”分类方案的结果。欺骗分类器的最小扰动表示如下：<br>$$<br>arg \min_r||r||_2 \;\;s.t.\;∃k : \sideset{}{^T_k}w(x_0+r)+b_k ≥ \sideset{}{^T_{\hat{k}(x_0)}}w(x_0 + r)+b_{\hat{k}(x_0)},<br>\tag{6}<br>$$</li></ul><blockquote><font color="#FF0000" size="2" face="黑体"><a href="1">^_^</a>:计算最小扰动，首先要保证分类与原始点产生变化(即扰动导致分类结果变化)，那么约束条件就是，存在一类，使得这一类的分类置信度大于 原始预测的置信度</font></blockquote><p>&emsp;&emsp;&emsp; $w_k$ 是 $W$ 的第 $k$ 列。从几何上看，上述问题对应于计算 $x_0$ 和 凸多面体 $P$ 的补集的距离：<br>$$<br>P=\bigcap_{k=1}^{c}{x:f_{\hat{k}(x_0)}(x)≥ f_k(x)},<br>\tag{7}<br>$$</p><p>&emsp;&emsp;&emsp;其中， $x_0$ 落在 $P$ 内部。距离用 $dist(x_0,P^c)$ 表示。 多面体 $P$ 定义了 $f$ 输出标签 $\hat{k}(x_0)$ 的范围。 设置如图4所示：</p><center><font color="#0099ff" size="2" face="黑体">图4：仿射多分类器输出标签空间区域 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/35279198.jpg" alt=""></p><blockquote><p>若 $x_0$ 属于类别4，令 ${\scr F}_k={x:f_k(x)-f_4(x)=0}$ 。这些超平面用实线表示，P的边界用绿色虚线表示。</p></blockquote><ul><li>定义 $\hat{l}(x_0)$ 为离 $P$ 的边界最近的超平面(如图4中的 $\hat{l}(x_0)=3$)。 $\hat{l}(x_0)$ 计算如下：</li></ul><p>$$\hat{l}(x_0)=arg \min_{k\not={\hat{k}(x_0)}}\frac{|f_k(x_0)-f_{\hat{k}(x_0)}(x_0)|}{||w_k-w_{\hat{k}(x_0)}||_2}.<br>\tag{8}<br>$$</p><p>&emsp;&emsp;&emsp;最小扰动 $r_<em>(x_0)$ 是把 $x_0$ 投影到超平面的向量：<br>$$<br>r_</em>(x_0)=\frac{|f_{\hat{l}(x_0)}(x_0)-f_{\hat{k}(x_0)}(x_0)|}{\sideset{}{^2_2}{||w_{\hat{l}(x_0)}-w_{\hat{k}(x_0)}||}}(w_{\hat{l}(x_0)}-w_{\hat{k}(x_0)}).<br>\tag{9}<br>$$</p><p>&emsp;&emsp;&emsp;换句话说，我们在 $P$ 的面上发现了 $x_0$ 的最近投影。</p><p>##一般多分类器<br>&emsp;&emsp;现在将DeepFool算法扩展到一般的多分类器。</p><ul><li>对于一般的非线性分类器，式(7)中的集合 $P$ 描述的分类器输出标签 $\hat{k}(x_0)$ 的区域空间不再是一个多面体。在二分类情况下解释迭代的线性过程，我们用一个多面体 $\tilde{P}_i$ 在迭代次数 $i$ 下近似集合 $P$ 。<br>$$<br>\tilde{P}<em>i= \bigcap</em>{k=1}^{c}{x:f_k(x_i)-f_{\hat{k}(x_0)}(x_i) + ∇f_k(x_i)^Tx-∇f_{\hat{k}(x_0)}(x_i)^Tx≤0}.<br>\tag{10}<br>$$</li></ul><center><font color="#0099ff" size="2" face="黑体">图5：非线性多分类器输出标签区域空间 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/81096955.jpg" alt=""></p><ul><li><p>随后用 $dist(x_i,\sideset{}{_i^c}{\tilde{P}})$ 在迭代次数 $i$ 下近似 $x_i$ 到 $P$ 补集的距离。算法的每次迭代中，到达多面体 $\tilde{P}_i$ 边界的扰动向量被计算，当前预测更新。</p><p>该算法在算法2中给出。应该注意，所提出的算法以<a href="http://www.52ml.net/10359.html" target="_blank" rel="noopener">贪心</a>方式运行，并且不能保证收敛于(1)中的最佳扰动。 然而，我们在实践中观察到，我们的算法产生非常小的扰动，这被认为是最小扰动的良好近似。</p></li></ul><center><font color="#0099ff" size="2" face="黑体">算法2：多分类器的DeepFool算法</font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/66140912.jpg" alt=""></p><p>&emsp;&emsp;应该指出的是，DeepFool的优化策略与现有的优化技术密切相关。 在二分类情况下，它可以看作牛顿迭代算法，用于在欠定情况下找到非线性方程组的根。 这种算法被称为正常流量法。 我们在二分类情况下的算法可以被看作是梯度下降算法，具有在每次迭代时自动选择的自适应步长。 算法2中的线性化也类似于序列凸规划，其中约束在每一步被线性化。</p><p>##拓展到 $L_p$ 范数<br>&emsp;&emsp;我们已经用 $L_2$ 范数计算了扰动。我们的框架不限制选择，提出的算法可以调节，用任何 $L_p$ 范数  $(p∈[1,∞])$ 来寻找最小对抗扰动。</p><ul><li>为此，算法2中第10行和第11行的更新步骤必须分别由以下更新代替：</li></ul><p>$$<br>\hat{l}\leftarrow arg\min_{k\not=\hat{k}(x_0)}\frac{|f’_k|}{||w’_k||_q},<br>\tag{11}<br>$$</p><p>$$<br>r_i\leftarrow\frac{|f’_{\hat{l}}|}{\sideset{}{^q_q}{||w’<em>{\hat{l}}||}}|w’</em>{\hat{l}}|^{q-1}\bigodot sign(w’_{\hat{l}}),<br>\tag{12}<br>$$</p><p>&emsp;&emsp;&emsp; $\bigodot$ 是逐点乘积，$q=\frac{p}{p-1}$ 。当 $p=∞$ 时(即 $l_∞$ 范数)， 更新步骤变成：<br>$$<br>\hat{l}\leftarrow arg\min_{k\not=\hat{k}(x_0)}\frac{|f’_k|}{||w’_k||_1},<br>\tag{13}<br>$$</p><p>$$<br>r_i\leftarrow\frac{|f’<em>{\hat{l}}|}{||w’</em>{\hat{l}}||<em>1} sign(w’</em>{\hat{l}}),<br>\tag{14}<br>$$</p><p>#实验</p><p>##设置</p><p>&emsp;&emsp;我们现在在应用于MNIST，CIFAR-10和ImageNet图像分类数据集的深度卷积神经网络架构上测试我们的DeepFool算法。 我们考虑以下深度神经网络架构：</p><ul><li><p><strong>MNIST</strong>：一个双层全连接网络和一个双层LeNet卷积神经网络结构。 这两个网络都是使用MatConvNet包通过SGD进行训练。</p></li><li><p><strong>CIFAR-10</strong>：我们训练了三层LeNet架构，以及网络网络（NIN）架构。</p></li><li><p><strong>ILSVRC 2012</strong>：我们使用了CaffeNet 和GoogLeNet预训练模型</p></li></ul><p>&emsp;&emsp;为了评估分类器 $f$ 的对抗扰动的鲁棒性， 定义平均鲁棒性 $\hat{ρ}<em>{adv}(f)$ :<br>$$<br>\hat{ρ}</em>{adv}(f)=\frac{1}{|{\scr D}|}\sum_{x∈{\scr D}}\frac{||\hat{r}(x)||_2}{||x||_2},<br>\tag{15}<br>$$</p><p>其中，$\hat{r}(x)$ 是使用DeepFool得到的预测最小扰动 ， ${\scr D}$ 代表测试集。</p><p>##结论</p><p>&emsp;&emsp;我们在表1中呈现了使用不同方法计算的每个分类器的准确度和平均鲁棒性 $\hatρ_{adv}$ 。 我们还显示了每种方法计算一个对抗样本所需的运行时间。 可以看出，DeepFool估计的扰动比使用竞争方法计算的扰动更小（因此更接近于(1)中定义的最小扰动）。 例如，使用DeepFool获得的平均扰动比FGSM估计的平均扰动低5倍。 在ILSVRC2012挑战数据集上，平均扰动比FGSM小一个数量级。 此外，与<a href="https://arxiv.org/abs/1312.6199" target="_blank" rel="noopener">18</a>中的方法相比，所提出的方法也产生更小的扰动矢量， 所提出的方法因此在检测可能欺骗神经网络的方向上更精确。 因此，DeepFool可以用作精确评估分类器鲁棒性的有用工具。</p><center><font color="#0099ff" size="2" face="黑体">表一：不同分类器在不同数据集的对抗鲁棒性 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/44616336.jpg" alt=""></p><blockquote><p>每个方法计算一个样本所需的时间在时间栏中给出。 时间是在2015年中的MacBook Pro上计算的，无需CUDA支持。 星号标记表示使用GTX 750 Ti GPU计算的值。[4]:FGSM</p></blockquote><p>&emsp;&emsp;在复杂性方面，所提出的方法比[18]中提出的标准方法快得多。事实上，虽然[18]方法涉及到一系列目标函数的代价最小化，但我们经验性地观察到，DeepFool在少数迭代（即小于3）中收敛于愚弄分类器的扰动向量。因此，与现有技术方法相比，所提出的方法达到更精确的扰动矢量，同时在计算上是有效的。这使得它很容易被用作基线方法来估计大规模数据集上非常深的神经网络的鲁棒性。在这种情况下，我们首先对大规模ImageNet数据集上最先进的分类器的鲁棒性进行量化评估。可以看出，尽管测试精度非常高，但这些方法对对抗扰动极不稳定：幅度比原始图像小1000倍的扰动足以欺骗最先进的深度神经网络。</p><center><font color="#0099ff" size="2" face="黑体">图6：对抗扰动的样本对比 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/11841802.jpg" alt=""></p><p>&emsp;&emsp;第一行：被分类为 $\hat{k}(x)=$ “鲸鱼”的原始图像 $x$ 。<br>&emsp;&emsp;第二行：被分类为 $\hat{k}(x+r)=$ “乌龟”的图像 $x + r$ 以及由DeepFool计算出的相应扰动 $r$ 。<br>&emsp;&emsp;第三行：被分类为“乌龟”的图像以及由FGSM计算出的相应扰动。 DeepFool导致更小的扰动。</p><p>&emsp;&emsp;可以观察到，DeepFool 产生难以察觉的对抗扰动，而FGSM输出具有更高范数的扰动图像。</p><ul><li>注意到，当扰动用最大范数计算时，上述结论依然成立： DeepFool 较其他方法生成更小的对抗扰动。</li></ul><center><font color="#0099ff" size="2" face="黑体">表2：对抗扰动的最大范数鲁棒性 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/22804987.jpg" alt=""></p><blockquote><p>分别基于DeepFool(最小的 $l_∞$ 扰动)和FGSM的四个不同网络的 $\sideset{}{^∞_{adv}}{\hat{ρ}}$ 值， 错误分类率达到90%</p></blockquote><p>$$<br>\sideset{}{^∞<em>{adv}}{\hat{ρ}}(f)=\frac{1}{|{\scr D}|} \sum</em>{x\in{\scr D}}\frac{||\hat{r}(x)||<em>∞}{||x||</em>∞},<br>$$</p><p>&emsp;&emsp;其中  $\hat{r}(x)$  分别使用DeepFool( $p =∞$ ，参见3.3节)和快速梯度符号法计算。</p><p>###使用对抗样本进行微调</p><p>&emsp;&emsp;在本节中，我们对表1中的对抗样本所用的网络进行微调，为MNIST和CIFAR-10任务构建更鲁棒的分类器。具体来说，对于每个网络，我们进行了两个实验：<br>&emsp;&emsp;(1)在DeepFool的对抗样本中微调网络，<br>&emsp;&emsp;(2)在快速梯度符号对抗样本上微调网络。<br>我们通过执行另外5个训练周期对网络进行微调，仅在扰动的训练集上减少了50％的学习速率。对于每个实验，所有5个额外的周期使用相同的训练数据。为了完整性，我们还对原始数据执行了5个额外的周期。图7a至图7d显示了不同微调策略的 $\hat{ρ}<em>{adv}$ 的演变，其中鲁棒性 $\hat{ρ}</em>{adv}$ 是使用DeepFool估算的，因为这是最准确的方法，如表1所示。观察到即使在一个额外周期之后，对DeepFool对抗样本的微调也增强了网络对对抗扰动的鲁棒性。例如，MNIST网络的鲁棒性提高了50％，NIN的鲁棒性提高了约40％。  </p><center><font color="#0099ff" size="2" face="黑体">图7：微调效果 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/88045331.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/19503473.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/15536386.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/98947187.jpg" alt=""></p><p>&emsp;&emsp;另一方面，令人惊讶的是，FGSM可能会导致网络的对抗扰动鲁棒性下降。我们推测这种行为是由于使用FGSM估计的扰动远远大于最小对抗扰动。用过度扰动的图像微调网络会降低网络对对抗扰动的鲁棒性。为了验证这个假设，我们在图8中比较了一个网络的对抗鲁棒性，这个网络用DeepFool获得的对抗样本进行了微调，其中扰动的范数被故意乘以 $α= 1,2,3$ 。</p><center><font color="#0099ff" size="2" face="黑体">图8：调整扰动范数对鲁棒性的影响 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/47701062.jpg" alt=""></p><p>&emsp;&emsp;有趣的是，我们看到通过放大对抗性扰动的范数，微调网络的鲁棒性降低。这可以解释为什么过度扰动的图像会降低MNIST网络的鲁棒性：这些扰动可能真的改变数据的类别，因此基于这些样本进行的微调可能导致鲁棒性的下降（有关说明，请参见图9） 。这证实了我们的假设，并进一步显示了设计精确方法来计算最小扰动的重要性。</p><center><font color="#0099ff" size="2" face="黑体">图9：不同 α 值带来的图片数字识别类型的改变</font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/9476430.jpg" alt=""></p><blockquote><p>原始图像被识别为 “1”，DeepFool 扰动图像被识别为”7”。</p></blockquote><p>&emsp;&emsp;表3列出了微调网络的精度。 可以看出，使用DeepFool进行微调可以提高网络的准确性。 相反，使用FGSM进行微调导致了我们所有实验中测试精度的降低。 这证实了FGSM输出一些不太可能出现在测试数据中的过度扰动图像。 因此，它降低了该方法的性能，因为它充当正则化器而不代表原始数据的分布。 这种效应类似于几何数据增强方案，其中原始样本的大变换对泛化具有相反的效果。</p><center><font color="#0099ff" size="2" face="黑体">表3：微调网络精度 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/96929609.jpg" alt=""></p><blockquote><p>微调后的网络测试错误率（五个周期后）。 每列对应于不同类型的增强扰动。</p></blockquote><p>&emsp;&emsp;为了强调对最小扰动的正确估计的重要性，我们现在表明使用近似方法可能导致关于网络的对抗鲁棒性的错误结论。 我们对快速梯度符号对抗样本中的NIN分类器进行了微调。 我们遵循前面描述的程序，但是这次我们将学习率降低了90％。 我们已经使用DeepFool和FGSM评估了此网络在不同额外周期的对抗鲁棒性。 如图10所示，红线 夸大了训练对对抗样本的影响。 此外，它不足以证明在第一个额外周期失去鲁棒性。</p><center><font color="#0099ff" size="2" face="黑体">图10：正则化的鲁棒性 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/82983733.jpg" alt=""></p><blockquote><p>如何用不同的方法判断对抗鲁棒性。 这些值通过原始网络的相应 $\hat{ρ}_{adv}$ 进行归一化。</p></blockquote><p>&emsp;&emsp;这些观察结果证实，使用准确的工具来衡量分类器的鲁棒性对于得出有关网络鲁棒性的结论是至关重要的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy_z&lt;br&gt;翻译文献：&lt;a href=&quot;https://arxiv.org/abs/1511.04599&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DeepFool: a simple and accurate 
      
    
    </summary>
    
      <category term="对抗攻击" scheme="http://yoururl.com/categories/%E5%AF%B9%E6%8A%97%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Adversarial attack" scheme="http://yoururl.com/tags/Adversarial-attack/"/>
    
      <category term="Translation" scheme="http://yoururl.com/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>前端-html基础</title>
    <link href="http://yoururl.com/2018/07/15/01-HTML/"/>
    <id>http://yoururl.com/2018/07/15/01-HTML/</id>
    <published>2018-07-14T16:00:00.000Z</published>
    <updated>2018-07-15T04:26:02.980Z</updated>
    
    <content type="html"><![CDATA[<hr><p> 学习目标:</p><ul><li>了解常用浏览器</li><li>掌握WEB标准</li><li>理解标签语义化</li><li>掌握常用的排版标签</li><li>掌握常用的文本格式化图像链接等标签</li><li>掌握三种列表标签</li><li>掌握表格标签</li><li>掌握表格标签</li><li>掌握表单标签<br>typora-copy-images-to: media</li></ul><hr><h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><p>传智讲师   刘晓强     江湖人称  强哥  </p><p>但是不是</p><p><img src="media/qq.jpg"></p><p>也不是：</p><p><img src="media/lk.jpg"></p><p>其实这是我：</p><p><img src="media/gt.jpg"></p><p>前端基础  html +css    基础班        html 2 +css  7天    9 天 传统布局    +  3天 html 5 +css3 基础</p><p>就业班   js     移动web       php + 项目  15      node      vue     框架  微信 …  大前端    </p><h1 id="HTML-第一天目标"><a href="#HTML-第一天目标" class="headerlink" title="HTML 第一天目标"></a>HTML 第一天目标</h1><p>能够写出基本的页面（里面包含图片、各种标签和链接）</p><h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><p>我们主要用的 开发工具有   chrome  、  sublime 、  photoshop</p><h2 id="浏览器（显示）"><a href="#浏览器（显示）" class="headerlink" title="浏览器（显示）"></a>浏览器（显示）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器是网页显示、运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。</span><br></pre></td></tr></table></figure><p><img src="media/b.png"></p><h3 id="查看浏览器占有的市场份额（知晓）"><a href="#查看浏览器占有的市场份额（知晓）" class="headerlink" title="查看浏览器占有的市场份额（知晓）"></a>查看浏览器占有的市场份额（知晓）</h3><p>查看网站： <a href="http://tongji.baidu.com/data/browser" target="_blank">http://tongji.baidu.com/data/browser</a></p><p><img src="media/count.png"></p><p> 这些工具你认识几个？</p><h2 id="sublime（书写）"><a href="#sublime（书写）" class="headerlink" title="sublime（书写）"></a>sublime（书写）</h2><p> <img src="media/s.png"></p><p>  普通青年    Dreamweaver</p><p>  文艺青年    sublime</p><p>  高手和傻子  用记事本</p><p>  其实。。。。</p><p>  <img src="media/node.png"></p><h2 id="Photoshop-协助"><a href="#Photoshop-协助" class="headerlink" title="Photoshop(协助)"></a>Photoshop(协助)</h2><p><img src="media/1498465020015.png" alt="1498465020015"></p><p>PS 工具是我们使用频率比较高的软件之一， 我们学习PS目的不是为了设计海报做电商和UI的，而是要求：</p><ol><li><strong>熟练的切图</strong></li><li>能和网站美工美眉有共同话题。。。。。</li></ol><h1 id="认识网页"><a href="#认识网页" class="headerlink" title="认识网页"></a>认识网页</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及Flash等。</span><br></pre></td></tr></table></figure><p>&lt;img src=”media/mi.png”alt=””&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">思考：  网页是如何形成的呢?</span><br></pre></td></tr></table></figure><p><img src="media/web.png"></p><h1 id="常见浏览器内核介绍"><a href="#常见浏览器内核介绍" class="headerlink" title="常见浏览器内核介绍"></a>常见浏览器内核介绍</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器是网页运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。</span><br></pre></td></tr></table></figure><p><img src="media/b.png"></p><h2 id="浏览器内核（理解）"><a href="#浏览器内核（理解）" class="headerlink" title="浏览器内核（理解）"></a>浏览器内核（理解）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">浏览器内核又可以分成两部分：渲染引擎(layout engineer 或者 Rendering Engine)和 JS 引擎。</span><br><span class="line">渲染引擎 它负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。</span><br><span class="line">JS 引擎 则是解析 Javascript 语言，执行 javascript语言来实现网页的动态效果。</span><br><span class="line"></span><br><span class="line">最开始渲染引擎和 JS 引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。有一个网页标准计划小组制作了一个 ACID 来测试引擎的兼容性和性能。内核的种类很多，如加上没什么人使用的非商业的免费内核，可能会有10多种，但是常见的浏览器内核可以分这四种：Trident、Gecko、Blink、Webkit。</span><br></pre></td></tr></table></figure><p>（1）Trident(IE内核) </p><p>国内很多的双核浏览器的其中一核便是 Trident，美其名曰 “兼容模式”。</p><p>代表： IE、傲游、世界之窗浏览器、Avant、腾讯TT、猎豹安全浏览器、360极速浏览器、百度浏览器等。</p><p>Window10 发布后，IE 将其内置浏览器命名为 Edge，Edge 最显著的特点就是新内核 EdgeHTML。</p><p>（2）Gecko(firefox) </p><p>Gecko(Firefox 内核)： Mozilla FireFox(火狐浏览器) 采用该内核，Gecko 的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。 可惜这几年已经没落了， 比如 打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</p><p>（3） webkit(Safari)  </p><p> Safari 是苹果公司开发的浏览器，所用浏览器内核的名称是大名鼎鼎的 WebKit。</p><p> 现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了），苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。</p><p> 代表浏览器：傲游浏览器3、 Apple Safari (Win/Mac/iPhone/iPad)、Symbian手机浏览器、Android 默认浏览器，</p><p>（4） Chromium/Blink(chrome) </p><p>   在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。 </p><p>​     大部分国产浏览器最新版都采用Blink内核。二次开发</p><p>（5） Presto(Opera) </p><p>  Presto（已经废弃） 是挪威产浏览器 opera 的 “前任” 内核，为何说是 “前任”，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌怀抱了。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">了解一点：</span><br></pre></td></tr></table></figure><p>移动端的浏览器内核主要说的是系统内置浏览器的内核。</p><p>Android手机而言，使用率最高的就是Webkit内核，大部分国产浏览器宣称的自己的内核，基本上也是属于webkit二次开发。</p><p>iOS以及WP7平台上，由于系统原因，系统大部分自带浏览器内核，一般是Safari或者IE内核Trident的</p><h1 id="Web标准（重点）"><a href="#Web标准（重点）" class="headerlink" title="Web标准（重点）"></a>Web标准（重点）</h1><p>通过以上浏览器的内核不同，我们知道他们工作原理、解析肯定不同，显示就会有差别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">问：  哪个语言再全国基本都可以听得懂？</span><br></pre></td></tr></table></figure><p><img src="media/bz.png"></p><h2 id="Web-标准的好处"><a href="#Web-标准的好处" class="headerlink" title="Web 标准的好处"></a>Web 标准的好处</h2><p><em>1</em>、让Web的发展前景更广阔<br><em>2</em>、内容能被更广泛的设备访问<br><em>3</em>、更容易被搜寻引擎搜索<br><em>4</em>、降低网站流量费用<br><em>5</em>、使网站更易于维护<br><em>6</em>、提高页面浏览速度</p><h2 id="Web-标准构成"><a href="#Web-标准构成" class="headerlink" title="Web 标准构成"></a>Web 标准构成</h2><p> Web标准不是某一个标准，而是由W3C和其他标准化组织制定的一系列标准的集合。</p><p>主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结构标准：结构用于对网页元素进行整理和分类，咱们主要学的是HTML。 最重要</span><br><span class="line">表现标准：表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS。</span><br><span class="line">行为标准：行为是指网页模型的定义及交互的编写，咱们主要学的是 Javascript</span><br></pre></td></tr></table></figure><p>理想状态我们的源码： .HTML    .css   .js </p><p>直观感受：</p><p><img src="media/gx.png"></p><p>总结WEB标准：</p><p>结构标准：   <img src="media/hb1.png">  决定你是否有个好天然身体 </p><p>表现标准：   <img src="media/hb2.png">  决定你是否打扮的美丽外观</p><p>行为标准：   <img src="media/hb3.jpg" width="420">  决定你是否有吸引人的行为</p><h2 id="课堂一练："><a href="#课堂一练：" class="headerlink" title="课堂一练："></a>课堂一练：</h2><p><strong>1.关于WEB标准下列说法正确的是: </strong></p><p>A html决定页面的行为，css决定页面的样式，js决定页面的结构</p><p>B html决定页面的样式，css决定页面的结构，js决定页面的行为</p><p>C html决定页面的结构，css决定页面的样式，js决定页面的行为</p><p>D 以上都不正确</p><p>2 <strong>web 标准里边规定三层分离不包括哪部分</strong></p><p>A．HTML</p><p>B．CSS</p><p>C．JavaScript</p><p>D．PHP</p><p>3.<strong>关于WEB标准下列说法正确的是</strong></p><p>A．html相当于人的动作行为，CSS相当于人的穿着打扮，javascript相当于人的骨架结构；</p><p>B．html相当于人的骨架结构，CSS相当于人的穿着打扮，javascript相当于人的动作行为；</p><p>C．html相当于人的穿着打扮，CSS相当于人的骨架结构，javascript相当于人的动作行为；</p><p>D．html相当于人的骨架结构，CSS相当于人的动作行为，javascript相当于人的穿着打扮；</p><h1 id="HTML-初识"><a href="#HTML-初识" class="headerlink" title="HTML 初识"></a>HTML 初识</h1><p>一般先学习HTML+CSS， 这里我们先定一个小目标，先学HTML,后学习CSS。</p><p>HTML（英文Hyper Text Markup Language的缩写）中文译为“超文本标签语言”。是用来描述网页的一种语言。</p><p>所谓超文本，因为它可以加入图片、声音、动画、多媒体等内容，不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 我是一个大标题 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   注意：   体会 文本    标签    语言   几个词语</p><ul><li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)</li><li>HTML 不是一种编程语言，而是一种标记语言 (markup language)</li><li>标记语言是一套标记标签 (markup tag)</li></ul><p>总结： HTML 作用就是用标记标签来描述网页，把网页内容在浏览器中展示出来。 </p><p>用文字来描述网页标签</p><h2 id="HTML骨架格式"><a href="#HTML骨架格式" class="headerlink" title="HTML骨架格式"></a>HTML骨架格式</h2><p>日常生活的书信，我们要遵循共同的约定。 </p><p><img src="media/mess.png" alt=""></p><p>同理：HTML 有自己的语言语法骨架格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure><p>课堂练习1：    书写我们的第一个HTML 页面！</p><ol><li>新建一个demo 的 TXT 文件。</li><li>里面写入刚才的HTML 骨架。月薪过万 你我之间  黑马洗练  一飞冲天</li><li>把后缀名改为 .HTML。</li><li>右击–谷歌浏览器打开。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1 HTML标签：</span><br><span class="line"></span><br><span class="line">作用所有HTML中标签的一个根节点。 最大的标签   根标签</span><br><span class="line"></span><br><span class="line">2 head标签： 文档的头部</span><br><span class="line"></span><br><span class="line">文档的头部描述了文档的各种属性和信息，包括文档的标题、在 Web 中的位置以及和其他文档的关系等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</span><br><span class="line"></span><br><span class="line">注意在head标签中我们必须要设置的标签是title</span><br><span class="line"></span><br><span class="line">3.title标签： 文档的标题</span><br><span class="line"></span><br><span class="line">作用：让页面拥有一个属于自己的标题。</span><br><span class="line"></span><br><span class="line">4.body标签：文档的主体  以后我们的页面内容 基本都是放到body里面的</span><br><span class="line"></span><br><span class="line">body 元素包含文档的所有内容（比如文本、超链接、图像、表格和列表等等。）</span><br></pre></td></tr></table></figure><p>为了便于记忆，我们请出刚才要辞职回家养猪的二师兄来帮忙， 我称之为  猪八戒记忆法</p><p><img src="media/pig.png"></p><h2 id="HTML标签分类"><a href="#HTML标签分类" class="headerlink" title="HTML标签分类"></a>HTML标签分类</h2><p>  在HTML页面中，带有“&lt; &gt;”符号的元素被称为HTML标签，如上面提到的 &lt;HTML&gt;、&lt;head&gt;、&lt;body&gt;都是HTML骨架结构标签。所谓标签就是放在“&lt; &gt;” 标签符中表示某个功能的编码命令，也称为HTML标签或 HTML元素</p><p>1.双标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span>&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该语法中“&lt;标签名&gt;”表示该标签的作用开始，一般称为“开始标签（start tag）”，“&lt;/标签名&gt;” 表示该标签的作用结束，一般称为“结束标签（end tag）”。和开始标签相比，结束标签只是在前面加了一个关闭符“/”。</p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 比如 <span class="tag">&lt;<span class="name">body</span>&gt;</span>我是文字  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>2.单标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>  单标签也称空标签，是指用一个标签符号即可完整地描述某个功能的标签。</p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 比如  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="HTML标签关系"><a href="#HTML标签关系" class="headerlink" title="HTML标签关系"></a>HTML标签关系</h2><p>标签的相互关系就分为两种：</p><p>1.嵌套关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  <span class="tag">&lt;<span class="name">title</span>&gt;</span> <span class="tag">&lt;/<span class="name">title</span>&gt;</span>  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/father.jpg"></p><p>2.并列关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/xiong.jpg"></p><p>倡议： 如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位。如果是并列关系，最好上下对齐。</p><h2 id="课堂一练"><a href="#课堂一练" class="headerlink" title="课堂一练"></a>课堂一练</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请问下列哪个标签是错误的？</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A  &lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B  &lt;strong&gt;&lt;div&gt;&lt;/div&gt;&lt;/strong&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C  &lt;head&gt;&lt;title&gt;&lt;/head&gt;&lt;/title&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D  &lt;body&gt;&lt;div&gt;&lt;/div&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>  <a href="key.HTML" target="_blank">sublime 一些常用快捷键  点我查看 </a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">再页面中输入 以下2个单词</span><br><span class="line">1.  html: 5   </span><br><span class="line">2.  !</span><br><span class="line">   在sublime里面然后按下tab键盘即可生成HTML骨架</span><br></pre></td></tr></table></figure><h1 id="文档类型-lt-DOCTYPE-gt"><a href="#文档类型-lt-DOCTYPE-gt" class="headerlink" title="文档类型&lt;!DOCTYPE&gt;"></a>文档类型&lt;!DOCTYPE&gt;</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure><p>同学你用啥手机？你咋回答？  </p><p>这句话就是告诉我们使用哪个html版本？  我们使用的是 html 5 的版本。  html有很多版本，那我们应该告诉用户和浏览器我们使用的版本号。</p><p>&lt;!DOCTYPE&gt; 标签位于文档的最前面，用于向浏览器说明当前文档使用哪种 HTML 或 XHTML 标准规范，必需在开头处使用&lt;!DOCTYPE&gt;标签为所有的XHTML文档指定XHTML版本和类型，只有这样浏览器才能按指定的文档类型进行解析。</p><p>注意：  一些老网站可能用的还是老版本的文档类型比如 XHTML之类的，但是我们学的是HTML5,而且HTML5的文档类型兼容很好(向下兼容的原则)，所以大家放心的使用HTML5的文档类型就好了。</p><h1 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h1><meta charset="UTF-8"><p>utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。</p><p>gb2312 简单中文  包括6763个汉字</p><p>BIG5   繁体中文 港澳台等用</p><p>GBK包含全部中文字符    是GB2312的扩展，加入对繁体字的支持，兼容GB2312</p><p>UTF-8则包含全世界所有国家需要用到的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记住一点，以后我们统统使用UTF-8 字符集, 这样就避免出现字符集不统一而引起乱码的情况了。</span><br></pre></td></tr></table></figure><h1 id="HTML标签的语义化"><a href="#HTML标签的语义化" class="headerlink" title="HTML标签的语义化"></a>HTML标签的语义化</h1><p>白话： 所谓标签语义化，就是指标签的含义。</p><h2 id="为什么要有语义化标签"><a href="#为什么要有语义化标签" class="headerlink" title="为什么要有语义化标签"></a>为什么要有语义化标签</h2><ol><li><p>方便代码的阅读和维护</p></li><li><p>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容 </p></li><li><p>使用语义化标签会具有更好地搜索引擎优化 </p></li></ol><p>核心：合适的地方给一个最为合理的标签。</p><p>语义是否良好： 当我们去掉CSS之后，网页结构依然组织有序，并且有良好的可读性。</p><p>白话，一眼看去，就知道那个是重点，结构是什么，知道每块的内容是干啥的。</p><p>遵循的原则：先确定语义的HTML ，再选合适的CSS。</p><h1 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h1><p> 首先 HTML和CSS是两种完全不同的语言，我们学的是结构，就只写HTML标签，认识标签就可以了。 不会再给结构标签指定样式了。</p><p> HTML标签有很多，这里我们学习最为常用的，后面有些较少用的，我们可以查下手册就可以了。 </p><h2 id="排版标签"><a href="#排版标签" class="headerlink" title="排版标签"></a>排版标签</h2><p>排版标签主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p><h3 id="标题标签-熟记"><a href="#标题标签-熟记" class="headerlink" title="标题标签 (熟记)"></a>标题标签 (熟记)</h3><p> 单词缩写：  head   头部. 标题     title  文档标题</p><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签，HTML提供了6个等级的标题，即</p><p> </p><h1>、<h2>、<h3>、<h4>、<h5>和<h6><p></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标题标签语义：  作为标题使用，并且依据重要性递减</span><br></pre></td></tr></table></figure><p>其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hn</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">hn</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：  h1 标签因为重要，尽量少用，不要动不动就向你扔了一个h1。 一般h1 都是给logo使用，或者页面中最重要标题信息。</p></blockquote><p>  <img src="media/dog.gif"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">传智播客学前端，</span><br><span class="line">　　前端学院四十班。</span><br><span class="line">　　新班强哥讲台站，</span><br><span class="line">　　又带新颜技术钻。</span><br><span class="line">　　标题一共六级选，</span><br><span class="line">　　具体效果刷新见。</span><br><span class="line">　　        ------强哥</span><br></pre></td></tr></table></figure><h3 id="段落标签-熟记"><a href="#段落标签-熟记" class="headerlink" title="段落标签( 熟记)"></a>段落标签( 熟记)</h3><p>单词缩写：  paragraph  段落  [ˈpærəgræf]    无须记这个单词</p><p> 在网页中要把文字有条理地显示出来，离不开段落标签，就如同我们平常写文章一样，整个网页也可以分为若干个段落，而段落的标签就是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>  文本内容  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。</p><h3 id="水平线标签-认识"><a href="#水平线标签-认识" class="headerlink" title="水平线标签(认识)"></a>水平线标签(认识)</h3><p>单词缩写：  horizontal  横线    [ˌhɔrəˈzɑntl]    同上</p><p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，<hr>就是创建横跨网页水平线的标签。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>是单标签</span><br></pre></td></tr></table></figure><p> 在网页中显示默认样式的水平线。</p><p>课堂练习2：    新闻页面 </p><p><img src="media/sh.png"> </p><h3 id="换行标签-熟记"><a href="#换行标签-熟记" class="headerlink" title="换行标签(熟记)"></a>换行标签(熟记)</h3><p>单词缩写：  break   打断 ,换行</p><p>在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这时如果还像在word中直接敲回车键换行就不起作用了。</p><h2 id="课堂一练-1"><a href="#课堂一练-1" class="headerlink" title="课堂一练"></a>课堂一练</h2><p>关于标签下列说法正确的是 </p><p>(A) P1是段落标签</p><p>(B) H1 是标题标签</p><p>(C) Hr是换行标签</p><p>(D) Br 是一条直线</p><p> 2 关于标签下列说法不正确的是</p><p>(A) H标签有6个等级分别是</p><h1> <h2> <h3> <h4> <h5>和<h6><p></p><p>(B) h1到h6 文字从小到大 </p><p>(C) p标签一行只能放一个</p><p>(D) P是段落标签会给文字加上段落的语义</p><h3 id="div-span标签-重点"><a href="#div-span标签-重点" class="headerlink" title="div span标签(重点)"></a>div span标签(重点)</h3><p>div  span    是没有语义的     是我们网页布局主要的2个盒子     css+div</p><p>div 就是  division  的缩写   分割， 分区的意思  其实有很多div 来组合网页。</p><p>span, 跨度，跨距；范围    </p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> 这是头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    <span class="tag">&lt;<span class="name">span</span>&gt;</span>今日价格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本格式化标签-熟记"><a href="#文本格式化标签-熟记" class="headerlink" title="文本格式化标签(熟记)"></a>文本格式化标签(熟记)</h2><p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><p><img src="media/tab.png"></p><p>  b  i  s  u   只有使用 没有 强调的意思       strong   em  del   ins  语义更强烈</p><h2 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h2><p><img src="media/ttt.jpg" width="300"></p><p>属性就是特性 比如 手机的颜色 手机的尺寸 ，总结就是手机的。。</p><p>手机的颜色是黑色   手机的尺寸是 8寸</p><p>水平线的长度是 200  </p><p>图片的宽度 是  300    键  值对</p><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> 属性<span class="attr">1</span>=<span class="string">"属性值1"</span> 属性<span class="attr">2</span>=<span class="string">"属性值2"</span> …&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的语法中，</p><p>1.标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</p><p>2.属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</p><p>3.任何标签的属性都有默认值，省略该属性则取默认值。</p><p>采取  键值对 的格式   key=”value”  的格式  </p><p>比如:  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">"400"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>属性  是 宽度  </p><p>值    是 400 </p><p>提倡：   尽量不使用 样式属性。   <img src="media/sm.jpg"> </p><h2 id="图像标签img-重点"><a href="#图像标签img-重点" class="headerlink" title="图像标签img (重点)"></a>图像标签img (重点)</h2><p>单词缩写：   image  图像</p><p>HTML网页中任何元素的实现都要依靠HTML标签，要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签<img>以及和他相关的属性。其基本语法格式如下：</p><p>该语法中src属性用于指定图像文件的路径和文件名，他是img标签的必需属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图像URL"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/img.png"></p><p><strong>当网页显示图片时,鼠标滑上图片显示文字描述是以下哪个属性<em>**</em></strong></p><p>(A) 设置alt属性</p><p>(B) 设置title属性</p><p>(C) 设置href 属性</p><p>(D) 设置src 属性</p><p><strong>2  在HTML中，使用<img>标签插入图像，下列选项关于<img>的src属性说法正确的是 </strong></p><p>(A) 用来设置图片的格式</p><p>(B) 用来设置图片的所在位置</p><p>(C) 用来设置鼠标指向图片时显示的文字</p><p>(D) 用来设置图片是否能正确显示 </p><h2 id="链接标签-重点"><a href="#链接标签-重点" class="headerlink" title="链接标签(重点)"></a>链接标签(重点)</h2><p>单词缩写：  anchor 的缩写  [ˈæŋkə(r)] 。基本解释 锚, 铁锚 的</p><p>在HTML中创建超链接非常简单，只需用标签环绕需要被链接的对象即可，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"跳转目标"</span> <span class="attr">target</span>=<span class="string">"目标窗口的弹出方式"</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>href：用于指定链接目标的url地址，当为标签应用href属性时，它就具有了超链接的功能。  Hypertext Reference的缩写。意思是超文本引用</p><p>target：用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。</p><p>注意：</p><p>1.外部链接 需要添加 http:// <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><p>2.内部链接 直接链接内部页面名称即可 比如 &lt; a href=”index.html”&gt; 首页     </p><p>3.如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=”#”)，表示该链接暂时为一个空链接。</p><p>4.不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</p><h3 id="锚点定位-（难点）"><a href="#锚点定位-（难点）" class="headerlink" title="锚点定位 （难点）"></a>锚点定位 （难点）</h3><p>通过创建锚点链接，用户能够快速定位到目标内容。<br>创建锚点链接分为两步：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.使用“a href=”#id名&gt;“链接文本"<span class="tag">&lt;/<span class="name">a</span>&gt;</span>创建链接文本（被点击的）</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#two"</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line">2.使用相应的id名标注跳转目标的位置。</span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>第2集<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="base-标签-基本的"><a href="#base-标签-基本的" class="headerlink" title="base 标签   基本的"></a>base 标签   基本的</h3><p>base 可以设置整体链接的打开状态   </p><p>base 写到  <head>  </head>  之间   </p><p>把所有的连接 都默认添加 target=”_blank”</p><p> <img src="media/base.png"></p><h2 id="课堂一练-2"><a href="#课堂一练-2" class="headerlink" title="课堂一练"></a>课堂一练</h2><p> 1在HTML中，关于a标签说法不正确的是（）</p><p>(A) a标签可以通过href属性跳转到另外一个页面</p><p>(B) a标签可以通过targer属性设置在是否在新窗口中打开</p><p>(C) a标签只能在当前页面设置锚点链接，让用户能够快速定位到目标内</p><p>(D) a标签可以通过href=”#”设置一个空链接</p><p>2如果想跳转到当前页面里名为show的锚点，下列写法是正确的</p><p>A  &lt; a href=”.show”&gt;跳转</p><p>B &lt; a href=”#show”&gt;跳转</p><p>C &lt; a href=” show”&gt;跳转</p><p>D &lt; a src=” #show”&gt;跳转</p><p>3如果想跳转到同目录下的名为success.html文件里名为show的锚点，下列写法是正确的</p><p>(A) &lt; a href=”success.html#show”&gt;跳转</p><p>(B)  &lt; a href=”#show”&gt;跳转 </p><p>(C)  &lt; a href=”success#show”&gt;跳转<br>(D) &lt; a src=”success.html#show”&gt;跳转</p><h2 id="特殊字符标签-（理解）"><a href="#特殊字符标签-（理解）" class="headerlink" title="特殊字符标签 （理解）"></a>特殊字符标签 （理解）</h2><p> <img src="media/zifu.png"></p><h2 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h2><p>在HTML中还有一种特殊的标签——注释标签。如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。其基本语法格式如下：<br>​        </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span>   ctrl + /       或者 ctrl +shift + /</span><br></pre></td></tr></table></figure><p>注释内容不会显示在浏览器窗口中，但是作为HTML文档内容的一部分，也会被下载到用户的计算机上，查看源代码时就可以看到。</p><p>注释重要性：</p><p><img src="media/zs.png"></p><h1 id="路径-重点、难点"><a href="#路径-重点、难点" class="headerlink" title="路径(重点、难点)"></a>路径(重点、难点)</h1><p><img src="media/dt.png" width="400"></p><p><img src="media/lj.png"></p><p>实际工作中，通常新建一个文件夹专门用于存放图像文件，这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。</p><p>根目录  当前目录 </p><p>路径可以分为： 相对路径和绝对路径</p><h2 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h2><p>以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。</p><ol><li>图像文件和HTML文件位于同一文件夹：只需输入图像文件的名称即可，如&lt;img src=”logo.gif” /&gt;。</li><li>图像文件位于HTML文件的下一级文件夹：输入文件夹名和文件名，之间用“/”隔开，如&lt;img src=”img/img01/logo.gif” /&gt;。</li><li>图像文件位于HTML文件的上一级文件夹：在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，如&lt;img src=”../logo.gif” /&gt;。</li></ol><h2 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h2><p>绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的</p><p>“D:\web\img\logo.gif”，或完整的网络地址，例如“<a href="http://www.itcast.cn/images/logo.gif”。" target="_blank" rel="noopener">http://www.itcast.cn/images/logo.gif”。</a></p><h2 id="课堂一练-3"><a href="#课堂一练-3" class="headerlink" title="课堂一练"></a>课堂一练</h2><p>1.<strong>在下面结构中，哪种写法可以在index页面中有输出img.gif</strong></p><p><img src="media/1512226080266.png" alt="1512226080266"></p><p>(A) &lt;img src=”../image/img.gif” /&gt;         </p><p>(B) &lt;img src=”image/img.gif” /&gt; </p><p>(C) &lt;img src=”image../img.gif” /&gt;    </p><p>(D) &lt;img src=”img.gif/image” /&gt;</p><p><strong>2在下面结构中，哪种写法可以在index页面中有输出1.jpg</strong></p><p><img src="media/1512226099480.png" alt="1512226099480"></p><p>(A) &lt;img src=”../1/2/1.jpg” /&gt;        </p><p>(B) &lt;img src=”/1/2/1.jpg” /&gt;</p><p>(C) &lt;img src=”1/2/1.jpg” /&gt;    </p><p>(D) <img src="”1.jpg”"></p><p>3在下面结构中哪种写法可以在index页面中有输出img.gif</p><p><img src="media/1512226121609.png" alt="1512226121609"></p><p>(A) &lt;img src=”demo/image/img.gif” /&gt;     </p><p>(B) &lt;img src=”image/img.gif” /&gt; </p><p>(C) &lt;img src=”image../img.gif” /&gt;    </p><p>(D) &lt;img src=”img.gif/image/demo” /&gt;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  每一天都有一个主题 我们HTML第一天的主题就是 &lt;认识标签&gt;</p><p>学HTML 之前 觉得 很神秘  </p><p><img src="media/z.png"></p><p>等你学完之后忽然发现</p><p><img src="media/rh.jpg" width="615"></p><p>总结今天的思路贯穿线：</p><p><img src="media/a.png" width="1000"></p><h1 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h1><p>什么是列表？</p><p><img src="media/list.png"></p><p>把…制成表,以表显示</p><p>容器里面装载着文字或图表的一种形式，叫列表。</p><p>列表最大的特点就是  整齐 、整洁、 有序</p><h2 id="无序列表-ul-（重点）"><a href="#无序列表-ul-（重点）" class="headerlink" title="无序列表 ul （重点）"></a>无序列表 ul （重点）</h2><p>无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>比如下面这些，新闻是没有顺序的，不用排队，先到先得，后发布先显示。</p><p><img src="media/ul.png"></p><p>脚下留心：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</span><br><span class="line">2. &lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。</span><br><span class="line">3. 无序列表会带有自己样式属性，放下那个样式，一会让CSS来！</span><br></pre></td></tr></table></figure><h2 id="有序列表-ol-（了解）"><a href="#有序列表-ol-（了解）" class="headerlink" title="有序列表 ol （了解）"></a>有序列表 ol （了解）</h2><p><img src="media/gold.png"></p><p>有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  所有特性基本与ul 一致。  </p><p>  但是实际工作中， 较少用 ol img src=”media/1.jpg” /&gt;</p><h2 id="自定义列表（理解）"><a href="#自定义列表（理解）" class="headerlink" title="自定义列表（理解）"></a>自定义列表（理解）</h2><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <img src="media/2.jpg"> </p><p>用的还可以：</p><p><img src="media/mix.png"></p><h1 id="表格-table-会使用"><a href="#表格-table-会使用" class="headerlink" title="表格 table(会使用)"></a>表格 table(会使用)</h1><p><img src="http://zcr4.ncfstatic.com/attachment/201403/27/10/5333888008f05_thumb_670x0.jpg" alt="img"></p><p>存在即是合理的。  表格的现在还是较为常用的一种标签，但不是用来布局，常见处理、显示表格式数据。</p><p><img src="media/table.png"></p><p>ps:  这些地方用表格，你会觉得生活还是那么美好。。。。忍不住想说  PPAP i hava a pen  </p><h2 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a>创建表格</h2><p>在HTML网页中，要想创建表格，就需要使用表格相关的标签。创建表格的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的语法中包含三对HTML标签，分别为 &lt;table&gt;&lt;/table&gt;、&lt;tr&gt;&lt;/tr&gt;、&lt;td&gt;&lt;/td&gt;，他们是创建表格的基本标签，缺一不可，下面对他们进行具体地解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.table用于定义一个表格。</span><br><span class="line"></span><br><span class="line">2.tr 用于定义表格中的一行，必须嵌套在 table标签中，在 table中包含几对 tr，就有几行表格。</span><br><span class="line"></span><br><span class="line">3.td /td：用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中，一对 &lt;tr&gt; &lt;/tr&gt;中包含几对&lt;td&gt;&lt;/td&gt;，就表示该行中有多少列（或多少个单元格）。</span><br></pre></td></tr></table></figure><p>注意：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;tr&gt;&lt;/tr&gt;中只能嵌套&lt;td&gt;&lt;/td&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. &lt;td&gt;&lt;/td&gt;标签，他就像一个容器，可以容纳所有的元素</span><br></pre></td></tr></table></figure><h2 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h2><p><img src="media/tt.png"></p><h2 id="表头标签"><a href="#表头标签" class="headerlink" title="表头标签"></a>表头标签</h2><p>表头一般位于表格的第一行或第一列，其文本加粗居中，如下图所示，即为设置了表头的表格。设置表头非常简单，只需用表头标签&lt;th&gt;&lt;/th&gt;替代相应的单元格标签&lt;td&gt;&lt;/td&gt;即可。</p><p> <img src="media/th.png"></p><h2 id="表格结构（了解）"><a href="#表格结构（了解）" class="headerlink" title="表格结构（了解）"></a>表格结构（了解）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">在使用表格进行布局时，可以将表格划分为头部、主体和页脚（页脚因为有兼容性问题，我们不在赘述），具体 如下所示：</span><br><span class="line"></span><br><span class="line">&lt;thead&gt;&lt;/thead&gt;：用于定义表格的头部。</span><br><span class="line"></span><br><span class="line">必须位于&lt;table&gt;&lt;/table&gt; 标签中，一般包含网页的logo和导航等头部信息。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;tbody&gt;&lt;/tbody&gt;：用于定义表格的主体。</span><br><span class="line"></span><br><span class="line">位于&lt;table&gt;&lt;/table&gt;标签中，一般包含网页中除头部和底部之外的其他内容。</span><br></pre></td></tr></table></figure><p><img src="media/thead.png"></p><h2 id="表格标题"><a href="#表格标题" class="headerlink" title="表格标题"></a>表格标题</h2><p><strong>表格的标题： caption</strong></p><p><strong>定义和用法</strong></p><p>caption 元素定义表格标题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>caption 标签必须紧随 table 标签之后。您只能对每个表格定义一个标题。通常这个标题会被居中于表格之上。</p><h2 id="合并单元格-难点"><a href="#合并单元格-难点" class="headerlink" title="合并单元格(难点)"></a>合并单元格(难点)</h2><p>跨行合并：rowspan    跨列合并：colspan</p><p>合并单元格的思想：</p><p>​     将多个内容合并的时候，就会有多余的东西，把它删除。    例如 把 3个 td 合并成一个， 那就多余了2个，需要删除。</p><p>​     公式：  删除的个数  =  合并的个数  - 1   </p><p>   合并的顺序 先上   先左 </p><h2 id="总结表格"><a href="#总结表格" class="headerlink" title="总结表格"></a>总结表格</h2><ol><li><p>表格提供了HTML 中定义表格式数据的方法。</p></li><li><p>表格中由行中的单元格组成。</p></li><li><p>表格中没有列元素，列的个数取决于行的单元格个数。</p></li><li><p>表格不要纠结于外观，那是CSS 的作用。</p><p>​</p><p><strong>表格的学习要求：  能手写表格结构，并且能合并单元格。</strong></p></li></ol><h1 id="表单标签-掌握"><a href="#表单标签-掌握" class="headerlink" title="表单标签(掌握)"></a>表单标签(掌握)</h1><p>现实中的表单，类似我们去银行办理信用卡填写的单子。 如下图</p><p><img src="media/car.jpg" width="500"></p><p>目的是为了收集用户信息。</p><p>在我们网页中， 我们也需要跟用户进行交互，收集用户资料，此时也需要表单。</p><p>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。</p><p><img src="media/bd.png"></p><p>  表单控件：</p><p>​       包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><p>  提示信息：</p><p>​        一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><p>  表单域：  </p><p>​      他相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h2 id="input-控件-重点"><a href="#input-控件-重点" class="headerlink" title="input 控件(重点)"></a>input 控件(重点)</h2><p>在上面的语法中，&lt;input /&gt;标签为单标签，type属性为其最基本的属性，其取值有多种，用于指定不同的控件类型。除了type属性之外，&lt;input /&gt;标签还可以定义很多其他的属性，其常用属性如下表所示。</p><p><img src="media/input.png"></p><h2 id="label标签-理解"><a href="#label标签-理解" class="headerlink" title="label标签(理解)"></a>label标签(理解)</h2><p>label 标签为 input 元素定义标注（标签）。</p><p>作用：  用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点</p><p>如何绑定元素呢？</p><p>for 属性规定 label 与哪个表单元素绑定。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="textarea控件-文本域"><a href="#textarea控件-文本域" class="headerlink" title="textarea控件(文本域)"></a>textarea控件(文本域)</h2><p>如果需要输入大量的信息，就需要用到&lt;textarea&gt;&lt;/textarea&gt;标签。通过textarea控件可以轻松地创建多行文本输入框，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"每行中的字符数"</span> <span class="attr">rows</span>=<span class="string">"显示的行数"</span>&gt;</span></span><br><span class="line">  文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/textarea.png"></p><h2 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h2><p>使用select控件定义下拉菜单的基本语法格式如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><ol><li>&lt;select&gt;&lt;/select&gt;中至少应包含一对&lt;option&gt;&lt;/option&gt;。</li><li>在option 中定义selected =” selected “时，当前项即为默认选中项。</li></ol><h2 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h2><p>在HTML中，form标签被用于定义表单域，即创建一个表单，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。创建表单的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url地址"</span> <span class="attr">method</span>=<span class="string">"提交方式"</span> <span class="attr">name</span>=<span class="string">"表单名称"</span>&gt;</span></span><br><span class="line">  各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常用属性：</p><ol><li>Action<br>在表单收集到信息后，需要将信息传递给服务器进行处理，action属性用于指定接收并处理表单数据的服务器程序的url地址。</li><li>method<br>用于设置表单数据的提交方式，其取值为get或post。</li><li>name<br>用于指定表单的名称，以区分同一个页面中的多个表单。</li></ol><p>注意：  每个表单都应该有自己表单域。</p><h1 id="查文档"><a href="#查文档" class="headerlink" title="查文档"></a>查文档</h1><p>经常查阅文档是一个非常好的学习习惯。</p><p>W3C :  <a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">http://www.w3school.com.cn/</a></p><p>MDN: <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/</a></p></h6></h5></h4></h3></h2></h1></h6></h5></h4></h3></h2></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt; 学习目标:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解常用浏览器&lt;/li&gt;
&lt;li&gt;掌握WEB标准&lt;/li&gt;
&lt;li&gt;理解标签语义化&lt;/li&gt;
&lt;li&gt;掌握常用的排版标签&lt;/li&gt;
&lt;li&gt;掌握常用的文本格式化图像链接等标签&lt;/li&gt;
&lt;li&gt;掌握三种列表标签&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="html" scheme="http://yoururl.com/categories/html/"/>
    
    
      <category term="html" scheme="http://yoururl.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow 基础（八）： 神经网络优化</title>
    <link href="http://yoururl.com/2018/05/01/Tensorflow%20%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AB%EF%BC%89%EF%BC%9A%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96/"/>
    <id>http://yoururl.com/2018/05/01/Tensorflow 基础（八）：神经网络优化/</id>
    <published>2018-04-30T16:00:00.000Z</published>
    <updated>2018-05-01T08:07:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="神经网络优化"><a href="#神经网络优化" class="headerlink" title="神经网络优化"></a>神经网络优化</h1><ul><li>学习率设置  </li><li>过拟合问题  </li><li>滑动平均模型</li></ul><h2 id="学习率设置"><a href="#学习率设置" class="headerlink" title="学习率设置"></a>学习率设置</h2><p>在梯度下降算法中，对于参数 $\theta$，其梯度为 $\frac{\partial}{\partial \theta}J(\theta)$ 。还需要定义一个学习率 $\eta$ (learning rate)来定义每次参数更新的幅度。通过参数的梯度和学习率，参数更新公式为：  </p><p>$$<br>\theta _{n+1} =\theta _n - \eta \frac{\partial}{\partial \theta _n} J(\theta _n)<br>$$  </p><p>如果学习率过大，可能会导致参数在极优值两侧来回移动；如果学习率过小，虽然能保证收敛性，但会大大降低优化速度。<br>为解决学习率的问题，Tensorflow 提供了一种更加灵活的学习率设置方法—指数衰减法。通过这个函数可以使用较大的学习率快速得到一个较优的解，然后随着迭代的继续逐步减小学习率，使得模型在训练后期更加稳定。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tf.train.exponential_decay(</span><br><span class="line">    learning_rate,          <span class="comment"># 初始学习率</span></span><br><span class="line">    global_step,            <span class="comment"># </span></span><br><span class="line">    decay_steps,            <span class="comment"># 衰减速度， 完整使用一边训练数据所需要的迭代轮数，  decay_steps =  dataset_size / batch_size</span></span><br><span class="line">    decay_rate,             <span class="comment"># 衰减系数</span></span><br><span class="line">    staircase=<span class="keyword">False</span>,        <span class="comment"># True：阶梯衰减（global_step / decay_steps 为整数）； False：连续衰减</span></span><br><span class="line">    name=<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该函数会指数级的减小学习率，实现了以下代码功能</span></span><br><span class="line">decayed_learning_rate = learning_rate * decay_rate ^ (global_step / decay_steps)</span><br></pre></td></tr></table></figure><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-4-29/64880644.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">global_step = tf.Variable(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 生成学习率</span></span><br><span class="line">learning_rate = tf.train.exponential_decay(learning_rate=<span class="number">0.1</span>, global_step=global_step, decay_steps=<span class="number">100</span>, decay_rate=<span class="number">0.96</span>, staircase=<span class="keyword">True</span>)</span><br><span class="line"><span class="comment"># 使用指数衰减的学习率，在minimize函数中传入global_step将自动更新该参数，从而使得学习率得到相应更新</span></span><br><span class="line">learning_step = tf.train.GradientDescentOptimizer(learning_rate).minimize(...my loss..., global_step=global_step)</span><br></pre></td></tr></table></figure><h2 id="过拟合问题"><a href="#过拟合问题" class="headerlink" title="过拟合问题"></a>过拟合问题</h2><p>过拟合指的是模型对于训练数据拟合程度过度的情况。</p><p>当某个模型过度的学习训练数据中的细节和噪音，以至于模型在新的数据上表现很差，我们称发生了<strong>过拟合</strong>。这意味着训练数据中的噪音或者随机波动也被当做概念被模型学习了,这会<strong>导致模型比较复杂</strong>。而问题就在于这些概念不适用于新的数据，从而导致模型<strong>泛化性能变差</strong>。  </p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-4-30/788202.jpg" alt="">  </p><p>为了防止过拟合，我们需要用到一些方法，如：early stopping、数据集扩增（Data augmentation）、正则化（Regularization）、Dropout等。</p><h3 id="Early-stopping"><a href="#Early-stopping" class="headerlink" title="Early stopping"></a>Early stopping</h3><p>对模型进行训练的过程即是对模型的参数进行学习更新的过程，这个参数学习的过程往往会用到一些迭代方法，如梯度下降（Gradient descent）学习算法。Early stopping便是一种<strong>迭代次数截断</strong>的方法来防止过拟合，即在模型对训练数据集迭代收敛之前停止迭代来防止过拟合。  </p><p>Early stopping方法的具体做法是：  </p><ul><li>在每一个Epoch结束时（一个Epoch集为对所有的训练数据的一轮遍历）计算验证集的 accuracy，    </li><li>在训练的过程中，记录到目前为止最好的 validation accuracy，当连续10次 Epoch（或者更多次）没达到最佳 accuracy 时，则可以认为 accuracy 不再提高了。此时便可以停止迭代了（Early Stopping）。<br>这种策略也称为“No-improvement-in-n”， n 即 Epoch 的次数，可以根据实际情况取，如10、20、30……  </li></ul><h3 id="数据集扩增（Data-augmentation）"><a href="#数据集扩增（Data-augmentation）" class="headerlink" title="数据集扩增（Data augmentation）"></a>数据集扩增（Data augmentation）</h3><p>在数据挖掘领域流行着这样的一句话，“有时候往往拥有更多的数据胜过一个好的模型”。因为我们在使用训练数据训练模型，通过这个模型对将来的数据进行拟合，前提是，<strong>训练数据与测试数据是独立同分布的</strong>。更多的数据往往使估计与模拟更准确。<br>通俗得讲，数据集扩增即需要得到更多的符合要求的数据，即和已有的数据是独立同分布的，或者近似独立同分布的。一般有以下方法：  </p><ul><li>从数据源采集更多数据  </li><li>复制原有数据加噪声  </li><li>重采样  </li><li>根据当前数据集估计数据分布参数，使用该分布产生更多数据等</li></ul><h3 id="正则化-（regularization）"><a href="#正则化-（regularization）" class="headerlink" title="正则化 （regularization）"></a>正则化 （regularization）</h3><p>正则化的本质：<strong>约束（限制）要优化的参数</strong>。<br>正则化中我们将保留所有的特征变量，但是会减小特征变量的数量级（参数数值的大小 $\theta (j)$ ）。</p><p>这个方法非常有效，当我们有很多特征变量时，其中每一个变量都能对预测产生一点影响。正如我们在房价预测的例子中看到的那样，我们可以有很多特征变量，其中每一个变量都是有用的，因此我们不希望把它们删掉，这就导致了正则化概念的发生。</p><p><a href="https://jjzhou012.github.io/2017/08/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%AD%A3%E5%88%99%E5%8C%96/" target="_blank" rel="noopener">正则化</a>  </p><ul><li>L1正则化可以产生稀疏权值矩阵，即产生一个稀疏模型，可以用于特征选择。  </li><li>L2正则化可以防止模型过拟合（overfitting）；一定程度上，L1也可以防止过拟合。<br>实践中，可以将L1，L2正则化同时使用：  </li></ul><p>$$<br>R(w)=\sum_i \alpha \left|w_i \right|+(1-\alpha)w_i^2<br>$$  </p><p>Tensorflow 可以优化带正则化的损失函数。以下给出一个简单的带L2正则化的损失函数定义：    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">w = tf.Variable(tf.random_normal([<span class="number">2</span>, <span class="number">1</span>], stddev=<span class="number">1</span>, seed=<span class="number">1</span>))</span><br><span class="line">y = tf.matmul(x, w)</span><br><span class="line"><span class="comment"># loss 由两部分组成，第一部分为均方误差损失函数，刻画了模型在训练数据上的表现；  </span></span><br><span class="line"><span class="comment"># 第二部分为正则化，防止模型过度模拟训练数据中的随机噪声</span></span><br><span class="line"><span class="comment"># lambda 为正则化项的权重，w为需要计算正则化损失的参数</span></span><br><span class="line">loss = tf.reduce_mean(tf.square(y_ - y)) + tf.contrib.layers.l2_regularizer(<span class="keyword">lambda</span>)(w)</span><br></pre></td></tr></table></figure><p>Tensorflow 提供了一些正则化函数：<br><img src="http://p5bxip6n0.bkt.clouddn.com/18-5-1/6239431.jpg" alt=""><br>以下是一些使用样例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">w = tf.constant([[<span class="number">1.0</span>, <span class="number">-2.0</span>], [<span class="number">-3.0</span>, <span class="number">4.0</span>]])  </span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    <span class="comment"># L1正则化，输出为（|1|+|-2|+|-3|+|4|）* 0.5=5</span></span><br><span class="line">    print(sess.run(tf.contrib.layers.l1_regularizer(<span class="number">0.5</span>)(w)))</span><br><span class="line">    <span class="comment"># L2正则化， 输出为（1^2 + (-2)^2 + (-3)^2 + 4^2）/ 2 * 0.5 = 7.5</span></span><br><span class="line">    <span class="comment"># Tensorflow 会将L2正则化损失值除以2使得求导得到的结果更加简洁</span></span><br><span class="line">    print(sess.run(tf.contrib.layers.l2_regularizer(<span class="number">0.5</span>)(w)))</span><br><span class="line">    <span class="comment"># L1,L2同时使用</span></span><br><span class="line">    print(sess.run(tf.contrib.layers.l1_l2_regularizer(<span class="number">0.5</span>, <span class="number">0.5</span>)(w)))</span><br></pre></td></tr></table></figure><pre><code>5.07.512.5</code></pre><p>在简单的神经网络中，这样的方式可以很好的计算带正则化的损失函数了。但当神经网络的参数增多之后，这样的方式可能导致损失函数loss的定义很长，可读性差且容易出错。更主要的是，当网络结构复杂之后定义网络结构的部分和计算损失函数的部分可能不在同一函数中，这样通过变量这样的方式计算损失函数就不方便了，为解决这个问题，可以使用 Tensorflow 中提供的集合（collection），它可以在一个计算图中保留一组实体。<br>下面代码给出了通过集合计算一个5层神经网络带L2正则化的损失函数的计算方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取一层神经网络边上的权重，并将这个权重的L2正则化损失加入名为‘losses’的集合中</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_weight</span><span class="params">(shape, lambda)</span>:</span></span><br><span class="line">    <span class="comment"># 生成一个变量</span></span><br><span class="line">    var = tf.Variable(tf.random_normal(shape), dtype=tf.float32)</span><br><span class="line">    <span class="comment"># add_to_collection函数将这个新生成变量的L2正则化损失项加入集合。</span></span><br><span class="line">    <span class="comment"># 这个函数的第一参数‘los''ses’是集合的名字，第二个参数是要加入集合的内容</span></span><br><span class="line">    tf.add_to_collection(<span class="string">'losses'</span>, tf.contrib.layers.l2_regularizer(<span class="keyword">lambda</span>)(var))</span><br><span class="line">    <span class="comment"># 返回生成的变量</span></span><br><span class="line">    <span class="keyword">return</span> var</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义输入输出</span></span><br><span class="line">x = tf.placeholder(dtype=tf.float32, shape=(<span class="keyword">None</span>, <span class="number">2</span>))</span><br><span class="line">y_ = tf.placeholder(dtype=tf.float32, shape=(<span class="keyword">None</span>, <span class="number">1</span>))</span><br><span class="line">batch_size = <span class="number">8</span></span><br><span class="line"><span class="comment"># 定义每一层网络的节点个数</span></span><br><span class="line">lay_dim = [<span class="number">2</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">1</span>]</span><br><span class="line"><span class="comment"># 神经网络层数</span></span><br><span class="line">n_layers = len(lay_dim)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个变量维护前向传播时最深层的节点，开始为输入层。</span></span><br><span class="line">cur_layer = x</span><br><span class="line"><span class="comment"># 当前层的节点个数, 开始为输入层</span></span><br><span class="line">in_dim = lay_dim[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过一个循环来生成5层全连接的神经网络结构</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n_layers):</span><br><span class="line">    <span class="comment"># 下一层的节点个数</span></span><br><span class="line">    out_dim = lay_dim[i]</span><br><span class="line">    <span class="comment"># 生成当前层中的权重变量，并将这个变量的L2正则化损失加入计算图上的集合</span></span><br><span class="line">    w = get_weight(shape=[in_dim, out_dim], <span class="number">0.001</span>)</span><br><span class="line">    bias = tf.Variable(tf.constant(<span class="number">0.1</span>, shape=[out_dim]))</span><br><span class="line">    <span class="comment"># 使用ReLU激活函数</span></span><br><span class="line">    cur_layer = tf.nn.relu(tf.matmul(cur_layer, w) + bias) </span><br><span class="line">    <span class="comment"># 进入下一层之前更新节点个数</span></span><br><span class="line">    in_dim = lay_dim[i]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在定义神经网络前向传播的同时已经将所有L2正则化损失加入了图上的集合  </span></span><br><span class="line"><span class="comment"># 这里只需要计算刻画模型在训练数据上表现的损失函数</span></span><br><span class="line">mse_loss = tf.reduce_mean(tf.square(y_ - cur_layer))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将均方误差损失函数加入损失集合</span></span><br><span class="line">tf.add_to_collection(<span class="string">'losses'</span>, mse_loss)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get_collection 得到一个列表，这个列表是所有这个集合中的元素，在这个样例中，</span></span><br><span class="line"><span class="comment"># 这些元素就是损失函数的不同部分，将它们加起来就可以得到最终的损失函数</span></span><br><span class="line">loss = tf.add_n(tf.get_collection(<span class="string">'losses'</span>))</span><br></pre></td></tr></table></figure><p>通过以上代码可以看出，通过使用集合的方法在网络结构比较复杂的情况下可以使代码可读性更高。</p><h3 id="Dropout"><a href="#Dropout" class="headerlink" title="Dropout"></a>Dropout</h3><p>Dropout是指在模型训练时随机让网络某些隐含层节点的权重不工作，不工作的那些节点可以暂时认为不是网络结构的一部分，但是它的权重得保留下来（只是暂时不更新而已），因为下次样本输入时它可能又得工作了。<br>DNNs是以概率 $p$ 舍弃部分神经元，其它神经元以概率 $q=1-p$ 被保留，舍去的神经元的输出都被设置为零。<br><img src="http://p5bxip6n0.bkt.clouddn.com/18-5-1/96305551.jpg" alt=""><br>上图为Dropout的可视化表示，左边是应用Dropout之前的网络，右边是应用了Dropout的同一个网络。  </p><p>dropout函数实现：引用keras的dropout实现源码  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dropout</span><span class="params">(x, level)</span>:</span></span><br><span class="line">    <span class="comment"># level是概率值，必须在0~1之间  </span></span><br><span class="line">    <span class="keyword">if</span> level &lt; <span class="number">0</span> <span class="keyword">or</span> level &gt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">'Dropout level must be in interval [0, 1].'</span>)</span><br><span class="line">    retain_pron = <span class="number">1.</span> - level</span><br><span class="line">    <span class="comment"># 通过binomial函数，生成与x一样的维数向量。binomial函数就像抛硬币一样，我们可以把每个神经元当做抛硬币一样  </span></span><br><span class="line">    <span class="comment"># 硬币正面的概率为p，n表示每个神经元试验的次数  </span></span><br><span class="line">    <span class="comment"># 因为我们每个神经元只需要抛一次就可以了所以n=1，size参数是神经元数量。  </span></span><br><span class="line">    <span class="comment"># 生成一个0，1分布的向量，0表示神经元被屏蔽，也就是dropout</span></span><br><span class="line">    sample = np.random.binomial(n=<span class="number">1</span>, p=retain_pron, size=x.shape)</span><br><span class="line">    print(sample)</span><br><span class="line">    <span class="comment"># 输入屏蔽部分神经元</span></span><br><span class="line">    x *=sample</span><br><span class="line">    print(x)</span><br><span class="line">    <span class="comment"># dropout后进行scale</span></span><br><span class="line">    x /= retain_pron</span><br><span class="line">    print(x)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试dropout， 输入向量x，经过dropout的结果</span></span><br><span class="line">x = np.asarray([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>], dtype=np.float32)</span><br><span class="line">dropout(x, <span class="number">0.4</span>)</span><br></pre></td></tr></table></figure><pre><code>[0 1 0 1 1 1 1 0 1 1 0][0. 1. 0. 3. 4. 5. 6. 0. 8. 9. 0.][ 0.         1.6666666  0.         5.         6.6666665  8.333333 10.         0.        13.333333  14.999999   0.       ]array([ 0.       ,  1.6666666,  0.       ,  5.       ,  6.6666665,        8.333333 , 10.       ,  0.       , 13.333333 , 14.999999 ,        0.       ], dtype=float32)</code></pre><p>为什么要进行rescale？<br>这被称为inverted dropout。当模型使用了dropout layer，训练的时候只有占比为 $p$ 的隐藏层单元参与训练，那么在预测的时候，如果所有的隐藏层单元都需要参与进来，则得到的结果相比训练时平均要大 $p$ ，为了避免这种情况，就需要测试的时候将输出结果乘以 $\frac{1}{p}$ 使下一层的输入规模保持不变。而利用inverted dropout，我们可以在训练的时候直接将dropout后留下的权重扩大 $\frac{1}{p}$ 倍，这样就可以使结果的scale保持不变，而在预测的时候也不用做额外的操作了，更方便一些。</p><p>Tensorflow 中的 dropout：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line">keep_prob = tf.placeholder(tf.float32)</span><br><span class="line">x = tf.Variable(tf.ones(shape=[<span class="number">10</span>], dtype=tf.float32))</span><br><span class="line">y = tf.nn.dropout(x, keep_prob=keep_prob)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    init_op = tf.global_variables_initializer()</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    </span><br><span class="line">    print(sess.run(y, feed_dict=&#123;keep_prob : <span class="number">0.4</span>&#125;))</span><br></pre></td></tr></table></figure><pre><code>[0.  2.5 2.5 0.  0.  2.5 0.  0.  2.5 0. ]</code></pre><h2 id="滑动平均模型"><a href="#滑动平均模型" class="headerlink" title="滑动平均模型"></a>滑动平均模型</h2><p>滑动平均模型，它可以使得模型在测试数据上更鲁棒，在使用随机梯度下降算法训练神经网络时，通过滑动平均模型可以在一定程度上提高最终模型在测试数据上的表现。其实滑动平均模型，主要是通过控制衰减率来控制参数更新前后之间的差距，从而达到减缓参数的变化值（如，参数更新前是5，更新后的值是4，通过滑动平均模型之后，参数的值会在4到5之间），如果参数更新前后的值保持不变，通过滑动平均模型之后，参数的值仍然保持不变。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tf.train.ExponentialMovingAverage(</span><br><span class="line">    decay,                              <span class="comment"># 衰减率</span></span><br><span class="line">    num_updates=<span class="keyword">None</span>,                   <span class="comment"># 动态设置decay参数</span></span><br><span class="line">    zero_debias=<span class="keyword">False</span>, </span><br><span class="line">    name=<span class="string">'ExponentialMovingAverage'</span>)</span><br></pre></td></tr></table></figure><ul><li>为了使得模型在训练的初始阶段更新得更快，ExponentialMovingAverage 还提供了 num_updates 参数来动态设置 decay 的大小，设置 num_updates 参数后，每次使用的衰减率为：<br>$$<br>decay= \min \left{decay,\  \frac{1 + num_updates}{10 + num_updates} \right}<br>$$<br>在 num_step 还比较小的时候，min() 会取到右边比较小的部分，也就是有一个比较小的 decay，这个时候模型更新会很快，当 step 增大时，模型更新速度会逐渐降低。</li><li>该函数对每一个待更新的变量（variable）都会维护一个影子变量（shadow variable）。影子变量的初始值就是这个变量的初始值，每次运行变量更新时，影子变量的值会更新为：<br>$$<br>shadow_variable = decay <em> shadow_variable + (1 - decay) </em> variable<br>$$<br>从公式可以看出，decay 决定了模型更新速度，decay 越大，模型越趋于稳定。实际运用中，decay 一般会设置为十分接近 1 的常数（0.999或0.9999）。  </li></ul><p>通过一段代码解释 ExponentialMovingAverage 是如何被使用的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个变量用于计算滑动平均，变量初始值为0。因为所有需要计算滑动平均的变量必须是实数型，所以指定变量类型为tf.float32</span></span><br><span class="line">v1 = tf.Variable(<span class="number">0</span>, dtype=tf.float32)</span><br><span class="line"><span class="comment"># step 变量模拟神经网络迭代轮数，用于动态控制衰减率  ， 即 num_updates 参数</span></span><br><span class="line">step = tf.Variable(<span class="number">0</span>, trainable=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个滑动平均类。初始化时给定衰减率decay和控制衰减率的变量step。</span></span><br><span class="line">ema = tf.train.ExponentialMovingAverage(decay=<span class="number">0.99</span>, num_updates=step)</span><br><span class="line"><span class="comment"># 定义一个更新变量滑动平均的操作。这里定义一个列表，每次执行该操作，列表中的变量会被更新。  </span></span><br><span class="line">maintain_averages_op = ema.apply([v1])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    init_op = tf.global_variables_initializer()</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 通过ema.average(v1)获取滑动平均之后变量的取值。</span></span><br><span class="line">    <span class="comment"># 初始化之后变量v1的值和v1的滑动平均都为0</span></span><br><span class="line">    print(<span class="string">'初始化变量和滑动平均值'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 更新变量v1的值到5</span></span><br><span class="line">    sess.run(tf.assign(v1, <span class="number">5</span>))</span><br><span class="line">    <span class="comment"># 更新v1的滑动平均值。衰减率为 min&#123;0.99 + (1+step)/(10+step)=0.1&#125;=0.1</span></span><br><span class="line">    <span class="comment"># 所以v1的滑动平均会被更新为0.1*0+0.9*5 =4.5</span></span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(<span class="string">'更新变量v1=5，滑动平均值'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 更新step的值为10000</span></span><br><span class="line">    sess.run(tf.assign(step, <span class="number">10000</span>))</span><br><span class="line">    <span class="comment"># 更新变量v1的值到10</span></span><br><span class="line">    sess.run(tf.assign(v1, <span class="number">10</span>))</span><br><span class="line">    <span class="comment"># 更新v1的滑动平均值。衰减率为 min&#123;0.99 + (1+step)/(10+step)=0.999&#125;=0.99</span></span><br><span class="line">    <span class="comment"># 所以v1的滑动平均会被更新为0.99*4.5+0.01*10 =4.555</span></span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(<span class="string">'更新v1=10,更新step=10000, 滑动平均值'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 再次更新滑动平均值，得到新的滑动平均值 0.99*4.555+0.01*10=4.60945</span></span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(<span class="string">'再次更新'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br></pre></td></tr></table></figure><pre><code>初始化变量和滑动平均值[0.0, 0.0]更新变量v1=5，滑动平均值[5.0, 4.5]更新v1=10,更新step=10000, 滑动平均值[10.0, 4.555]再次更新[10.0, 4.60945]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;神经网络优化&quot;&gt;&lt;a href=&quot;#神经网络优化&quot; class=&quot;headerlink&quot; title=&quot;神经网络优化&quot;&gt;&lt;/a&gt;神经网络优化&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;学习率设置  &lt;/li&gt;
&lt;li&gt;过拟合问题  &lt;/li&gt;
&lt;li&gt;滑动平均模型&lt;/li&gt;
&lt;/
      
    
    </summary>
    
      <category term="Tensorflow" scheme="http://yoururl.com/categories/Tensorflow/"/>
    
    
      <category term="Tensorflow" scheme="http://yoururl.com/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>reveal.js</title>
    <link href="http://yoururl.com/2018/04/25/reveal.js/"/>
    <id>http://yoururl.com/2018/04/25/reveal.js/</id>
    <published>2018-04-24T16:00:00.000Z</published>
    <updated>2018-04-25T17:20:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="reveal-js"><a href="#reveal-js" class="headerlink" title="reveal.js  "></a>reveal.js <a href="https://travis-ci.org/hakimel/reveal.js" target="_blank" rel="noopener"><img src="https://travis-ci.org/hakimel/reveal.js.svg?branch=master" alt="Build Status"></a> <a href="https://slides.com?ref=github" target="_blank" rel="noopener"><img src="https://s3.amazonaws.com/static.slid.es/images/slides-github-banner-320x40.png?1" alt="Slides" width="160" height="20"></a></h1><p>A framework for easily creating beautiful presentations using HTML. <a href="http://revealjs.com/" target="_blank" rel="noopener">Check out the live demo</a>.</p><p>reveal.js comes with a broad range of features including <a href="https://github.com/hakimel/reveal.js#markup" target="_blank" rel="noopener">nested slides</a>, <a href="https://github.com/hakimel/reveal.js#markdown" target="_blank" rel="noopener">Markdown contents</a>, <a href="https://github.com/hakimel/reveal.js#pdf-export" target="_blank" rel="noopener">PDF export</a>, <a href="https://github.com/hakimel/reveal.js#speaker-notes" target="_blank" rel="noopener">speaker notes</a> and a <a href="https://github.com/hakimel/reveal.js#api" target="_blank" rel="noopener">JavaScript API</a>. There’s also a fully featured visual editor and platform for sharing reveal.js presentations at <a href="https://slides.com?ref=github" target="_blank" rel="noopener">slides.com</a>.</p><h2 id="Table-of-contents"><a href="#Table-of-contents" class="headerlink" title="Table of contents"></a>Table of contents</h2><ul><li><a href="#online-editor">Online Editor</a></li><li><a href="#instructions">Instructions</a><ul><li><a href="#markup">Markup</a></li><li><a href="#markdown">Markdown</a></li><li><a href="#element-attributes">Element Attributes</a></li><li><a href="#slide-attributes">Slide Attributes</a></li></ul></li><li><a href="#configuration">Configuration</a></li><li><a href="#presentation-size">Presentation Size</a></li><li><a href="#dependencies">Dependencies</a></li><li><a href="#ready-event">Ready Event</a></li><li><a href="#auto-sliding">Auto-sliding</a></li><li><a href="#keyboard-bindings">Keyboard Bindings</a></li><li><a href="#touch-navigation">Touch Navigation</a></li><li><a href="#lazy-loading">Lazy Loading</a></li><li><a href="#api">API</a><ul><li><a href="#slide-changed-event">Slide Changed Event</a></li><li><a href="#presentation-state">Presentation State</a></li><li><a href="#slide-states">Slide States</a></li><li><a href="#slide-backgrounds">Slide Backgrounds</a></li><li><a href="#parallax-background">Parallax Background</a></li><li><a href="#slide-transitions">Slide Transitions</a></li><li><a href="#internal-links">Internal links</a></li><li><a href="#fragments">Fragments</a></li><li><a href="#fragment-events">Fragment events</a></li><li><a href="#code-syntax-highlighting">Code syntax highlighting</a></li><li><a href="#slide-number">Slide number</a></li><li><a href="#overview-mode">Overview mode</a></li><li><a href="#fullscreen-mode">Fullscreen mode</a></li><li><a href="#embedded-media">Embedded media</a></li><li><a href="#stretching-elements">Stretching elements</a></li><li><a href="#postmessage-api">postMessage API</a></li></ul></li><li><a href="#pdf-export">PDF Export</a></li><li><a href="#theming">Theming</a></li><li><a href="#speaker-notes">Speaker Notes</a><ul><li><a href="#share-and-print-speaker-notes">Share and Print Speaker Notes</a></li><li><a href="#server-side-speaker-notes">Server Side Speaker Notes</a></li></ul></li><li><a href="#multiplexing">Multiplexing</a><ul><li><a href="#master-presentation">Master presentation</a></li><li><a href="#client-presentation">Client presentation</a></li><li><a href="#socketio-server">Socket.io server</a></li></ul></li><li><a href="#mathjax">MathJax</a></li><li><a href="#installation">Installation</a><ul><li><a href="#basic-setup">Basic setup</a></li><li><a href="#full-setup">Full setup</a></li><li><a href="#folder-structure">Folder Structure</a></li></ul></li><li><a href="#license">License</a></li></ul><h4 id="More-reading"><a href="#More-reading" class="headerlink" title="More reading"></a>More reading</h4><ul><li><a href="https://github.com/hakimel/reveal.js/releases" target="_blank" rel="noopener">Changelog</a>: Up-to-date version history.</li><li><a href="https://github.com/hakimel/reveal.js/wiki/Example-Presentations" target="_blank" rel="noopener">Examples</a>: Presentations created with reveal.js, add your own!</li><li><a href="https://github.com/hakimel/reveal.js/wiki/Browser-Support" target="_blank" rel="noopener">Browser Support</a>: Explanation of browser support and fallbacks.</li><li><a href="https://github.com/hakimel/reveal.js/wiki/Plugins,-Tools-and-Hardware" target="_blank" rel="noopener">Plugins</a>: A list of plugins that can be used to extend reveal.js.</li></ul><h2 id="Online-Editor"><a href="#Online-Editor" class="headerlink" title="Online Editor"></a>Online Editor</h2><p>Presentations are written using HTML or Markdown but there’s also an online editor for those of you who prefer a graphical interface. Give it a try at <a href="https://slides.com?ref=github" target="_blank" rel="noopener">https://slides.com</a>.</p><h2 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h2><h3 id="Markup"><a href="#Markup" class="headerlink" title="Markup"></a>Markup</h3><p>Here’s a barebones example of a fully working reveal.js presentation:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/reveal.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/theme/white.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"reveal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slides"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Slide 1<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Slide 2<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/reveal.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">Reveal.initialize();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>The presentation markup hierarchy needs to be <code>.reveal &gt; .slides &gt; section</code> where the <code>section</code> represents one slide and can be repeated indefinitely. If you place multiple <code>section</code> elements inside of another <code>section</code> they will be shown as vertical slides. The first of the vertical slides is the “root” of the others (at the top), and will be included in the horizontal sequence. For example:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"reveal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slides"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Single Horizontal Slide<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Vertical Slide 1<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Vertical Slide 2<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>It’s possible to write your slides using Markdown. To enable Markdown, add the <code>data-markdown</code> attribute to your <code>&lt;section&gt;</code> elements and wrap the contents in a <code>&lt;textarea data-template&gt;</code> like the example below. You’ll also need to add the <code>plugin/markdown/marked.js</code> and <code>plugin/markdown/markdown.js</code> scripts (in that order) to your HTML file.</p><p>This is based on <a href="https://gist.github.com/1343518" target="_blank" rel="noopener">data-markdown</a> from <a href="https://github.com/paulirish" target="_blank" rel="noopener">Paul Irish</a> modified to use <a href="https://github.com/chjj/marked" target="_blank" rel="noopener">marked</a> to support <a href="https://help.github.com/articles/github-flavored-markdown" target="_blank" rel="noopener">GitHub Flavored Markdown</a>. Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks).</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">data-template</span>&gt;</span></span><br><span class="line">## Page title</span><br><span class="line"></span><br><span class="line">A paragraph with some text and a [link](http://hakim.se).</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="External-Markdown"><a href="#External-Markdown" class="headerlink" title="External Markdown"></a>External Markdown</h4><p>You can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file: the <code>data-separator</code> attribute defines a regular expression for horizontal slides (defaults to <code>^\r?\n---\r?\n$</code>, a newline-bounded horizontal rule)  and <code>data-separator-vertical</code> defines vertical slides (disabled by default). The <code>data-separator-notes</code> attribute is a regular expression for specifying the beginning of the current slide’s speaker notes (defaults to <code>notes?:</code>). The <code>data-charset</code> attribute is optional and specifies which charset to use when loading the external file.</p><p>When used locally, this feature requires that reveal.js <a href="#full-setup">runs from a local web server</a>.  The following example customises all available options:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>=<span class="string">"example.md"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-separator</span>=<span class="string">"^\n\n\n"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-separator-vertical</span>=<span class="string">"^\n\n"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-separator-notes</span>=<span class="string">"^Note:"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-charset</span>=<span class="string">"iso-8859-15"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        Note that Windows uses `\r\n` instead of `\n` as its linefeed character.</span></span><br><span class="line"><span class="comment">        For a regex that supports all operating systems, use `\r?\n` instead of `\n`.</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Element-Attributes"><a href="#Element-Attributes" class="headerlink" title="Element Attributes"></a>Element Attributes</h4><p>Special syntax (through HTML comments) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/template"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">- Item 1 <span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="2" --&gt;</span></span></span><br><span class="line"><span class="xml">- Item 2 <span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="1" --&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Slide-Attributes"><a href="#Slide-Attributes" class="headerlink" title="Slide Attributes"></a>Slide Attributes</h4><p>Special syntax (through HTML comments) is available for adding attributes to the slide <code>&lt;section&gt;</code> elements generated by your Markdown.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/template"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- .slide: data-background="#ff0000" --&gt;</span></span></span><br><span class="line"><span class="undefined">Markdown content</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Configuring-marked"><a href="#Configuring-marked" class="headerlink" title="Configuring marked"></a>Configuring <em>marked</em></h4><p>We use <a href="https://github.com/chjj/marked" target="_blank" rel="noopener">marked</a> to parse Markdown. To customise marked’s rendering, you can pass in options when <a href="#configuration">configuring Reveal</a>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// Options which are passed into marked</span></span><br><span class="line"><span class="comment">// See https://github.com/chjj/marked#options-1</span></span><br><span class="line">markdown: &#123;</span><br><span class="line">smartypants: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>At the end of your page you need to initialize reveal by running the following code. Note that all configuration values are optional and will default to the values specified below.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display presentation control arrows</span></span><br><span class="line">controls: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Help the user learn the controls by providing hints, for example by</span></span><br><span class="line"><span class="comment">// bouncing the down arrow when they first encounter a vertical slide</span></span><br><span class="line">controlsTutorial: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Determines where controls appear, "edges" or "bottom-right"</span></span><br><span class="line">controlsLayout: <span class="string">'bottom-right'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Visibility rule for backwards navigation arrows; "faded", "hidden"</span></span><br><span class="line"><span class="comment">// or "visible"</span></span><br><span class="line">controlsBackArrows: <span class="string">'faded'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display a presentation progress bar</span></span><br><span class="line">progress: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set default timing of 2 minutes per slide</span></span><br><span class="line">defaultTiming: <span class="number">120</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display the page number of the current slide</span></span><br><span class="line">slideNumber: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Push each slide change to the browser history</span></span><br><span class="line">history: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enable keyboard shortcuts for navigation</span></span><br><span class="line">keyboard: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enable the slide overview mode</span></span><br><span class="line">overview: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Vertical centering of slides</span></span><br><span class="line">center: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enables touch navigation on devices with touch input</span></span><br><span class="line">touch: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Loop the presentation</span></span><br><span class="line">loop: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Change the presentation direction to be RTL</span></span><br><span class="line">rtl: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Randomizes the order of slides each time the presentation loads</span></span><br><span class="line">shuffle: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Turns fragments on and off globally</span></span><br><span class="line">fragments: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flags if the presentation is running in an embedded mode,</span></span><br><span class="line"><span class="comment">// i.e. contained within a limited portion of the screen</span></span><br><span class="line">embedded: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flags if we should show a help overlay when the questionmark</span></span><br><span class="line"><span class="comment">// key is pressed</span></span><br><span class="line">help: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flags if speaker notes should be visible to all viewers</span></span><br><span class="line">showNotes: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Global override for autoplaying embedded media (video/audio/iframe)</span></span><br><span class="line"><span class="comment">// - null: Media will only autoplay if data-autoplay is present</span></span><br><span class="line"><span class="comment">// - true: All media will autoplay, regardless of individual setting</span></span><br><span class="line"><span class="comment">// - false: No media will autoplay, regardless of individual setting</span></span><br><span class="line">autoPlayMedia: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of milliseconds between automatically proceeding to the</span></span><br><span class="line"><span class="comment">// next slide, disabled when set to 0, this value can be overwritten</span></span><br><span class="line"><span class="comment">// by using a data-autoslide attribute on your slides</span></span><br><span class="line">autoSlide: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stop auto-sliding after user input</span></span><br><span class="line">autoSlideStoppable: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this method for navigation when auto-sliding</span></span><br><span class="line">autoSlideMethod: Reveal.navigateNext,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enable slide navigation via mouse wheel</span></span><br><span class="line">mouseWheel: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hides the address bar on mobile devices</span></span><br><span class="line">hideAddressBar: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Opens links in an iframe preview overlay</span></span><br><span class="line"><span class="comment">// Add `data-preview-link` and `data-preview-link="false"` to customise each link</span></span><br><span class="line"><span class="comment">// individually</span></span><br><span class="line">previewLinks: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Transition style</span></span><br><span class="line">transition: <span class="string">'slide'</span>, <span class="comment">// none/fade/slide/convex/concave/zoom</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Transition speed</span></span><br><span class="line">transitionSpeed: <span class="string">'default'</span>, <span class="comment">// default/fast/slow</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Transition style for full page slide backgrounds</span></span><br><span class="line">backgroundTransition: <span class="string">'fade'</span>, <span class="comment">// none/fade/slide/convex/concave/zoom</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of slides away from the current that are visible</span></span><br><span class="line">viewDistance: <span class="number">3</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background image</span></span><br><span class="line">parallaxBackgroundImage: <span class="string">''</span>, <span class="comment">// e.g. "'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background size</span></span><br><span class="line">parallaxBackgroundSize: <span class="string">''</span>, <span class="comment">// CSS syntax, e.g. "2100px 900px"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of pixels to move the parallax background per slide</span></span><br><span class="line"><span class="comment">// - Calculated automatically unless specified</span></span><br><span class="line"><span class="comment">// - Set to 0 to disable movement along an axis</span></span><br><span class="line">parallaxBackgroundHorizontal: <span class="literal">null</span>,</span><br><span class="line">parallaxBackgroundVertical: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// The display mode that will be used to show slides</span></span><br><span class="line">display: <span class="string">'block'</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>The configuration can be updated after initialization using the <code>configure</code> method:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Turn autoSlide off</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">autoSlide</span>: <span class="number">0</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start auto-sliding every 5s</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">autoSlide</span>: <span class="number">5000</span> &#125;);</span><br></pre></td></tr></table></figure><h3 id="Presentation-Size"><a href="#Presentation-Size" class="headerlink" title="Presentation Size"></a>Presentation Size</h3><p>All presentations have a normal size, that is, the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport.</p><p>See below for a list of configuration options related to sizing, including default values:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The "normal" size of the presentation, aspect ratio will be preserved</span></span><br><span class="line"><span class="comment">// when the presentation is scaled to fit different resolutions. Can be</span></span><br><span class="line"><span class="comment">// specified using percentage units.</span></span><br><span class="line">width: <span class="number">960</span>,</span><br><span class="line">height: <span class="number">700</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Factor of the display size that should remain empty around the content</span></span><br><span class="line">margin: <span class="number">0.1</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Bounds for smallest/largest possible scale to apply to content</span></span><br><span class="line">minScale: <span class="number">0.2</span>,</span><br><span class="line">maxScale: <span class="number">1.5</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>If you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">width: <span class="string">"100%"</span>,</span><br><span class="line">height: <span class="string">"100%"</span>,</span><br><span class="line">margin: <span class="number">0</span>,</span><br><span class="line">minScale: <span class="number">1</span>,</span><br><span class="line">maxScale: <span class="number">1</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><p>Reveal.js doesn’t <em>rely</em> on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line">dependencies: [</span><br><span class="line"><span class="comment">// Cross-browser shim that fully implements classList - https://github.com/eligrey/classList.js/</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'lib/js/classList.js'</span>, <span class="attr">condition</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> !<span class="built_in">document</span>.body.classList; &#125; &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Interpret Markdown in &lt;section&gt; elements</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/markdown/marked.js'</span>, <span class="attr">condition</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> !!<span class="built_in">document</span>.querySelector( <span class="string">'[data-markdown]'</span> ); &#125; &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/markdown/markdown.js'</span>, <span class="attr">condition</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> !!<span class="built_in">document</span>.querySelector( <span class="string">'[data-markdown]'</span> ); &#125; &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Syntax highlight for &lt;code&gt; elements</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/highlight/highlight.js'</span>, <span class="attr">async</span>: <span class="literal">true</span>, <span class="attr">callback</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; hljs.initHighlightingOnLoad(); &#125; &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Zoom in and out with Alt+click</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/zoom-js/zoom.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Speaker notes</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/notes/notes.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// MathJax</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/math/math.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>You can add your own extensions using the same syntax. The following properties are available for each dependency object:</p><ul><li><strong>src</strong>: Path to the script to load</li><li><strong>async</strong>: [optional] Flags if the script should load after reveal.js has started, defaults to false</li><li><strong>callback</strong>: [optional] Function to execute when the script has loaded</li><li><strong>condition</strong>: [optional] Function which must return true for the script to be loaded</li></ul><p>To load these dependencies, reveal.js requires <a href="http://headjs.com/" target="_blank" rel="noopener">head.js</a> <em>(a script loading library)</em> to be loaded before reveal.js.</p><h3 id="Ready-Event"><a href="#Ready-Event" class="headerlink" title="Ready Event"></a>Ready Event</h3><p>A <code>ready</code> event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already ‘ready’ you can call <code>Reveal.isReady()</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'ready'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.currentSlide, event.indexh, event.indexv</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p>Note that we also add a <code>.ready</code> class to the <code>.reveal</code> element so that you can hook into this with CSS.</p><h3 id="Auto-sliding"><a href="#Auto-sliding" class="headerlink" title="Auto-sliding"></a>Auto-sliding</h3><p>Presentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Slide every five seconds</span></span><br><span class="line">Reveal.configure(&#123;</span><br><span class="line">  autoSlide: <span class="number">5000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>When this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing »A« on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying <code>autoSlideStoppable: false</code> in your reveal.js config.</p><p>You can also override the slide duration for individual slides and fragments by using the <code>data-autoslide</code> attribute:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-autoslide</span>=<span class="string">"2000"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>After 2 seconds the first fragment will be shown.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-autoslide</span>=<span class="string">"10000"</span>&gt;</span>After 10 seconds the next fragment will be shown.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span>&gt;</span>Now, the fragment is displayed for 2 seconds before the next slide is shown.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>To override the method used for navigation when auto-sliding, you can specify the <code>autoSlideMethod</code> setting. To only navigate along the top layer and ignore vertical slides, set this to <code>Reveal.navigateRight</code>.</p><p>Whenever the auto-slide mode is resumed or paused the <code>autoslideresumed</code> and <code>autoslidepaused</code> events are fired.</p><h3 id="Keyboard-Bindings"><a href="#Keyboard-Bindings" class="headerlink" title="Keyboard Bindings"></a>Keyboard Bindings</h3><p>If you’re unhappy with any of the default keyboard bindings you can override them using the <code>keyboard</code> config option:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Reveal.configure(&#123;</span><br><span class="line">  keyboard: &#123;</span><br><span class="line">    <span class="number">13</span>: <span class="string">'next'</span>, <span class="comment">// go to the next slide when the ENTER key is pressed</span></span><br><span class="line">    <span class="number">27</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;, <span class="comment">// do something custom when ESC is pressed</span></span><br><span class="line">    <span class="number">32</span>: <span class="literal">null</span> <span class="comment">// don't do anything when SPACE is pressed (i.e. disable a reveal.js default binding)</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Touch-Navigation"><a href="#Touch-Navigation" class="headerlink" title="Touch Navigation"></a>Touch Navigation</h3><p>You can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the <code>touch</code> config option to false when initializing reveal.js.</p><p>If there’s some part of your content that needs to remain accessible to touch events you’ll need to highlight this by adding a <code>data-prevent-swipe</code> attribute to the element. One common example where this is useful is elements that need to be scrolled.</p><h3 id="Lazy-Loading"><a href="#Lazy-Loading" class="headerlink" title="Lazy Loading"></a>Lazy Loading</h3><p>When working on presentation with a lot of media or iframe content it’s important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the <code>viewDistance</code> configuration option.</p><p>To enable lazy loading all you need to do is change your <code>src</code> attributes to <code>data-src</code> as shown below. This is supported for image, video, audio and iframe elements. Lazy loaded iframes will also unload when the containing slide is no longer visible.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"image.png"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">data-src</span>=<span class="string">"http://hakim.se"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">data-src</span>=<span class="string">"video.webm"</span> <span class="attr">type</span>=<span class="string">"video/webm"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">data-src</span>=<span class="string">"video.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>The <code>Reveal</code> object exposes a JavaScript API for controlling navigation and reading state:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Navigation</span></span><br><span class="line">Reveal.slide( indexh, indexv, indexf );</span><br><span class="line">Reveal.left();</span><br><span class="line">Reveal.right();</span><br><span class="line">Reveal.up();</span><br><span class="line">Reveal.down();</span><br><span class="line">Reveal.prev();</span><br><span class="line">Reveal.next();</span><br><span class="line">Reveal.prevFragment();</span><br><span class="line">Reveal.nextFragment();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Randomize the order of slides</span></span><br><span class="line">Reveal.shuffle();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Toggle presentation states, optionally pass true/false to force on/off</span></span><br><span class="line">Reveal.toggleOverview();</span><br><span class="line">Reveal.togglePause();</span><br><span class="line">Reveal.toggleAutoSlide();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shows a help overlay with keyboard shortcuts, optionally pass true/false</span></span><br><span class="line"><span class="comment">// to force on/off</span></span><br><span class="line">Reveal.toggleHelp();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Change a config value at runtime</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">controls</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the present configuration options</span></span><br><span class="line">Reveal.getConfig();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch the current scale of the presentation</span></span><br><span class="line">Reveal.getScale();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Retrieves the previous and current slide elements</span></span><br><span class="line">Reveal.getPreviousSlide();</span><br><span class="line">Reveal.getCurrentSlide();</span><br><span class="line"></span><br><span class="line">Reveal.getIndices();        <span class="comment">// &#123; h: 0, v: 0, f: 0 &#125;</span></span><br><span class="line">Reveal.getSlidePastCount();</span><br><span class="line">Reveal.getProgress();       <span class="comment">// (0 == first slide, 1 == last slide)</span></span><br><span class="line">Reveal.getSlides();         <span class="comment">// Array of all slides</span></span><br><span class="line">Reveal.getTotalSlides();    <span class="comment">// Total number of slides</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the speaker notes for the current slide</span></span><br><span class="line">Reveal.getSlideNotes();</span><br><span class="line"></span><br><span class="line"><span class="comment">// State checks</span></span><br><span class="line">Reveal.isFirstSlide();</span><br><span class="line">Reveal.isLastSlide();</span><br><span class="line">Reveal.isOverview();</span><br><span class="line">Reveal.isPaused();</span><br><span class="line">Reveal.isAutoSliding();</span><br></pre></td></tr></table></figure><h3 id="Slide-Changed-Event"><a href="#Slide-Changed-Event" class="headerlink" title="Slide Changed Event"></a>Slide Changed Event</h3><p>A <code>slidechanged</code> event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes.</p><p>Some libraries, like MathJax (see <a href="https://github.com/hakimel/reveal.js/issues/226#issuecomment-10261609" target="_blank" rel="noopener">#226</a>), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'slidechanged'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.previousSlide, event.currentSlide, event.indexh, event.indexv</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><h3 id="Presentation-State"><a href="#Presentation-State" class="headerlink" title="Presentation State"></a>Presentation State</h3><p>The presentation’s current state can be fetched by using the <code>getState</code> method. A state object contains all of the information required to put the presentation back as it was when <code>getState</code> was first called. Sort of like a snapshot. It’s a simple object that can easily be stringified and persisted or sent over the wire.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Reveal.slide( <span class="number">1</span> );</span><br><span class="line"><span class="comment">// we're on slide 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> state = Reveal.getState();</span><br><span class="line"></span><br><span class="line">Reveal.slide( <span class="number">3</span> );</span><br><span class="line"><span class="comment">// we're on slide 3</span></span><br><span class="line"></span><br><span class="line">Reveal.setState( state );</span><br><span class="line"><span class="comment">// we're back on slide 1</span></span><br></pre></td></tr></table></figure><h3 id="Slide-States"><a href="#Slide-States" class="headerlink" title="Slide States"></a>Slide States</h3><p>If you set <code>data-state=&quot;somestate&quot;</code> on a slide <code>&lt;section&gt;</code>, “somestate” will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide.</p><p>Furthermore you can also listen to these changes in state via JavaScript:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'somestate'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Sprinkle magic</span></span><br><span class="line">&#125;, <span class="literal">false</span> );</span><br></pre></td></tr></table></figure><h3 id="Slide-Backgrounds"><a href="#Slide-Backgrounds" class="headerlink" title="Slide Backgrounds"></a>Slide Backgrounds</h3><p>Slides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a <code>data-background</code> attribute to your <code>&lt;section&gt;</code> elements. Four different types of backgrounds are supported: color, image, video and iframe.</p><h4 id="Color-Backgrounds"><a href="#Color-Backgrounds" class="headerlink" title="Color Backgrounds"></a>Color Backgrounds</h4><p>All CSS color formats are supported, including hex values, keywords, <code>rgba()</code> or <code>hsl()</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-color</span>=<span class="string">"#ff0000"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Color<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Image-Backgrounds"><a href="#Image-Backgrounds" class="headerlink" title="Image Backgrounds"></a>Image Backgrounds</h4><p>By default, background images are resized to cover the full page. Available options:</p><table><thead><tr><th style="text-align:left">Attribute</th><th style="text-align:left">Default</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">data-background-image</td><td style="text-align:left"></td><td style="text-align:left">URL of the image to show. GIFs restart when the slide opens.</td></tr><tr><td style="text-align:left">data-background-size</td><td style="text-align:left">cover</td><td style="text-align:left">See <a href="https://developer.mozilla.org/docs/Web/CSS/background-size" target="_blank" rel="noopener">background-size</a> on MDN.</td></tr><tr><td style="text-align:left">data-background-position</td><td style="text-align:left">center</td><td style="text-align:left">See <a href="https://developer.mozilla.org/docs/Web/CSS/background-position" target="_blank" rel="noopener">background-position</a> on MDN.</td></tr><tr><td style="text-align:left">data-background-repeat</td><td style="text-align:left">no-repeat</td><td style="text-align:left">See <a href="https://developer.mozilla.org/docs/Web/CSS/background-repeat" target="_blank" rel="noopener">background-repeat</a> on MDN.</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-image</span>=<span class="string">"http://example.com/image.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Image<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-image</span>=<span class="string">"http://example.com/image.png"</span> <span class="attr">data-background-size</span>=<span class="string">"100px"</span> <span class="attr">data-background-repeat</span>=<span class="string">"repeat"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This background image will be sized to 100px and repeated<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Video-Backgrounds"><a href="#Video-Backgrounds" class="headerlink" title="Video Backgrounds"></a>Video Backgrounds</h4><p>Automatically plays a full size video behind the slide.</p><table><thead><tr><th style="text-align:left">Attribute</th><th style="text-align:left">Default</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">data-background-video</td><td style="text-align:left"></td><td style="text-align:left">A single video source, or a comma separated list of video sources.</td></tr><tr><td style="text-align:left">data-background-video-loop</td><td style="text-align:left">false</td><td style="text-align:left">Flags if the video should play repeatedly.</td></tr><tr><td style="text-align:left">data-background-video-muted</td><td style="text-align:left">false</td><td style="text-align:left">Flags if the audio should be muted.</td></tr><tr><td style="text-align:left">data-background-size</td><td style="text-align:left">cover</td><td style="text-align:left">Use <code>cover</code> for full screen and some cropping or <code>contain</code> for letterboxing.</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-video</span>=<span class="string">"https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm"</span> <span class="attr">data-background-video-loop</span> <span class="attr">data-background-video-muted</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Video<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Iframe-Backgrounds"><a href="#Iframe-Backgrounds" class="headerlink" title="Iframe Backgrounds"></a>Iframe Backgrounds</h4><p>Embeds a web page as a slide background that covers 100% of the reveal.js width and height. The iframe is in the background layer, behind your slides, and as such it’s not possible to interact with it by default. To make your background interactive, you can add the <code>data-background-interactive</code> attribute.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-iframe</span>=<span class="string">"https://slides.com"</span> <span class="attr">data-background-interactive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Iframe<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Background-Transitions"><a href="#Background-Transitions" class="headerlink" title="Background Transitions"></a>Background Transitions</h4><p>Backgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing <code>backgroundTransition: &#39;slide&#39;</code> to the <code>Reveal.initialize()</code> call. Alternatively you can set <code>data-background-transition</code> on any section with a background to override that specific transition.</p><h3 id="Parallax-Background"><a href="#Parallax-Background" class="headerlink" title="Parallax Background"></a>Parallax Background</h3><p>If you want to use a parallax scrolling background, set the first two properties below when initializing reveal.js (the other two are optional).</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background image</span></span><br><span class="line">parallaxBackgroundImage: <span class="string">''</span>, <span class="comment">// e.g. "https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background size</span></span><br><span class="line">parallaxBackgroundSize: <span class="string">''</span>, <span class="comment">// CSS syntax, e.g. "2100px 900px" - currently only pixels are supported (don't use % or auto)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of pixels to move the parallax background per slide</span></span><br><span class="line"><span class="comment">// - Calculated automatically unless specified</span></span><br><span class="line"><span class="comment">// - Set to 0 to disable movement along an axis</span></span><br><span class="line">parallaxBackgroundHorizontal: <span class="number">200</span>,</span><br><span class="line">parallaxBackgroundVertical: <span class="number">50</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Make sure that the background size is much bigger than screen size to allow for some scrolling. <a href="http://revealjs.com/?parallaxBackgroundImage=https%3A%2F%2Fs3.amazonaws.com%2Fhakim-static%2Freveal-js%2Freveal-parallax-1.jpg&amp;parallaxBackgroundSize=2100px%20900px" target="_blank" rel="noopener">View example</a>.</p><h3 id="Slide-Transitions"><a href="#Slide-Transitions" class="headerlink" title="Slide Transitions"></a>Slide Transitions</h3><p>The global presentation transition is set using the <code>transition</code> config value. You can override the global transition for a specific slide by using the <code>data-transition</code> attribute:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"zoom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This slide will override the presentation transition and zoom!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition-speed</span>=<span class="string">"fast"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Choose from three transition speeds: default, fast or slow!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can also use different in and out transitions for the same slide:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">    The train goes on …</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">    and on …</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide-in fade-out"</span>&gt;</span></span><br><span class="line">    and stops.</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"fade-in slide-out"</span>&gt;</span></span><br><span class="line">    (Passengers entering and leaving)</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">    And it starts again.</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Internal-links"><a href="#Internal-links" class="headerlink" title="Internal links"></a>Internal links</h3><p>It’s easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute (<code>&lt;section id=&quot;some-slide&quot;&gt;</code>):</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/2/2"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/some-slide"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an <code>enabled</code> class when it’s a valid navigation route based on the current slide.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-left"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-right"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-up"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-down"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-prev"</span>&gt;</span> <span class="comment">&lt;!-- Previous vertical or horizontal slide --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-next"</span>&gt;</span> <span class="comment">&lt;!-- Next vertical or horizontal slide --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragments"><a href="#Fragments" class="headerlink" title="Fragments"></a>Fragments</h3><p>Fragments are used to highlight individual elements on a slide. Every element with the class <code>fragment</code> will be stepped through before moving on to the next slide. Here’s an example: <a href="http://revealjs.com/#/fragments" target="_blank" rel="noopener">http://revealjs.com/#/fragments</a></p><p>The default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment grow"</span>&gt;</span>grow<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment shrink"</span>&gt;</span>shrink<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment fade-out"</span>&gt;</span>fade-out<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment fade-up"</span>&gt;</span>fade-up (also down, left and right!)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment current-visible"</span>&gt;</span>visible only once<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-current-blue"</span>&gt;</span>blue only once<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-red"</span>&gt;</span>highlight-red<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-green"</span>&gt;</span>highlight-green<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-blue"</span>&gt;</span>highlight-blue<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Multiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fragment fade-in"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fragment fade-out"</span>&gt;</span>I'll fade in, then out<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The display order of fragments can be controlled using the <code>data-fragment-index</code> attribute.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-fragment-index</span>=<span class="string">"3"</span>&gt;</span>Appears last<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-fragment-index</span>=<span class="string">"1"</span>&gt;</span>Appears first<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-fragment-index</span>=<span class="string">"2"</span>&gt;</span>Appears second<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragment-events"><a href="#Fragment-events" class="headerlink" title="Fragment events"></a>Fragment events</h3><p>When a slide fragment is either shown or hidden reveal.js will dispatch an event.</p><p>Some libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'fragmentshown'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.fragment = the fragment DOM element</span></span><br><span class="line">&#125; );</span><br><span class="line">Reveal.addEventListener( <span class="string">'fragmenthidden'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.fragment = the fragment DOM element</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><h3 id="Code-syntax-highlighting"><a href="#Code-syntax-highlighting" class="headerlink" title="Code syntax highlighting"></a>Code syntax highlighting</h3><p>By default, Reveal is configured with <a href="https://highlightjs.org/" target="_blank" rel="noopener">highlight.js</a> for code syntax highlighting. To enable syntax highlighting, you’ll have to load the highlight plugin (<a href="plugin/highlight/highlight.js">plugin/highlight/highlight.js</a>) and a highlight.js CSS theme (Reveal comes packaged with the zenburn theme: <a href="lib/css/zenburn.css">lib/css/zenburn.css</a>).</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// More info https://github.com/hakimel/reveal.js#dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/highlight/highlight.js'</span>, <span class="attr">async</span>: <span class="literal">true</span>, <span class="attr">callback</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; hljs.initHighlightingOnLoad(); &#125; &#125;,</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Below is an example with clojure code that will be syntax highlighted. When the <code>data-trim</code> attribute is present, surrounding whitespace is automatically removed.  HTML will be escaped by default. To avoid this, for example if you are using <code>&lt;mark&gt;</code> to call out a line of code, add the <code>data-noescape</code> attribute to the <code>&lt;code&gt;</code> element.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">data-trim</span> <span class="attr">data-noescape</span>&gt;</span></span><br><span class="line">(def lazy-fib</span><br><span class="line">  (concat</span><br><span class="line">   [0 1]</span><br><span class="line">   <span class="tag">&lt;<span class="name">mark</span>&gt;</span>((fn rfib [a b]<span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br><span class="line">        (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1)))</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Slide-number"><a href="#Slide-number" class="headerlink" title="Slide number"></a>Slide number</h3><p>If you would like to display the page number of the current slide you can do so using the <code>slideNumber</code> and <code>showSlideNumber</code> configuration values.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Shows the slide number using default formatting</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">slideNumber</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Slide number formatting can be configured using these variables:</span></span><br><span class="line"><span class="comment">//  "h.v": horizontal . vertical slide number (default)</span></span><br><span class="line"><span class="comment">//  "h/v": horizontal / vertical slide number</span></span><br><span class="line"><span class="comment">//    "c": flattened slide number</span></span><br><span class="line"><span class="comment">//  "c/t": flattened slide number / total slides</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">slideNumber</span>: <span class="string">'c/t'</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Control which views the slide number displays on using the "showSlideNumber" value:</span></span><br><span class="line"><span class="comment">//     "all": show on all views (default)</span></span><br><span class="line"><span class="comment">// "speaker": only show slide numbers on speaker notes view</span></span><br><span class="line"><span class="comment">//   "print": only show slide numbers when printing to PDF</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">showSlideNumber</span>: <span class="string">'speaker'</span> &#125;);</span><br></pre></td></tr></table></figure><h3 id="Overview-mode"><a href="#Overview-mode" class="headerlink" title="Overview mode"></a>Overview mode</h3><p>Press »ESC« or »O« keys to toggle the overview mode on and off. While you’re in this mode, you can still navigate between slides,<br>as if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'overviewshown'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123; <span class="comment">/* ... */</span> &#125; );</span><br><span class="line">Reveal.addEventListener( <span class="string">'overviewhidden'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123; <span class="comment">/* ... */</span> &#125; );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Toggle the overview mode programmatically</span></span><br><span class="line">Reveal.toggleOverview();</span><br></pre></td></tr></table></figure><h3 id="Fullscreen-mode"><a href="#Fullscreen-mode" class="headerlink" title="Fullscreen mode"></a>Fullscreen mode</h3><p>Just press »F« on your keyboard to show your presentation in fullscreen mode. Press the »ESC« key to exit fullscreen mode.</p><h3 id="Embedded-media"><a href="#Embedded-media" class="headerlink" title="Embedded media"></a>Embedded media</h3><p>Add <code>data-autoplay</code> to your media element if you want it to automatically start playing when the slide is shown:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">data-autoplay</span> <span class="attr">src</span>=<span class="string">"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you want to enable or disable autoplay globally, for all embedded media, you can use the <code>autoPlayMedia</code> configuration option. If you set this to <code>true</code> ALL media will autoplay regardless of individual <code>data-autoplay</code> attributes. If you initialize with <code>autoPlayMedia: false</code> NO media will autoplay.</p><p>Note that embedded HTML5 <code>&lt;video&gt;</code>/<code>&lt;audio&gt;</code> and YouTube/Vimeo iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a <code>data-ignore</code> attribute.</p><h3 id="Embedded-iframes"><a href="#Embedded-iframes" class="headerlink" title="Embedded iframes"></a>Embedded iframes</h3><p>reveal.js automatically pushes two <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage" target="_blank" rel="noopener">post messages</a> to embedded iframes. <code>slide:start</code> when the slide containing the iframe is made visible and <code>slide:stop</code> when it is hidden.</p><h3 id="Stretching-elements"><a href="#Stretching-elements" class="headerlink" title="Stretching elements"></a>Stretching elements</h3><p>Sometimes it’s desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the <code>.stretch</code> class to an element as seen below:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This video will use up the remaining space on the slide<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">class</span>=<span class="string">"stretch"</span> <span class="attr">src</span>=<span class="string">"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Limitations:</p><ul><li>Only direct descendants of a slide section can be stretched</li><li>Only one descendant per slide section can be stretched</li></ul><h3 id="postMessage-API"><a href="#postMessage-API" class="headerlink" title="postMessage API"></a>postMessage API</h3><p>The framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here’s an example showing how you’d make a reveal.js instance in the given window proceed to slide 2:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">window</span>&gt;.postMessage( <span class="built_in">JSON</span>.stringify(&#123; <span class="attr">method</span>: <span class="string">'slide'</span>, <span class="attr">args</span>: [ <span class="number">2</span> ] &#125;), <span class="string">'*'</span> );</span><br></pre></td></tr></table></figure><p>When reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here’s how you subscribe to them from the parent window:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener( <span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse( event.data );</span><br><span class="line"><span class="keyword">if</span>( data.namespace === <span class="string">'reveal'</span> &amp;&amp; data.eventName ===<span class="string">'slidechanged'</span> ) &#123;</span><br><span class="line"><span class="comment">// Slide changed, see data.state for slide number</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p>This cross-window messaging can be toggled on or off using configuration flags.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Exposes the reveal.js API through window.postMessage</span></span><br><span class="line">postMessage: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dispatches all reveal.js events to the parent window through postMessage</span></span><br><span class="line">postMessageEvents: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="PDF-Export"><a href="#PDF-Export" class="headerlink" title="PDF Export"></a>PDF Export</h2><p>Presentations can be exported to PDF via a special print stylesheet. This feature requires that you use <a href="http://google.com/chrome" target="_blank" rel="noopener">Google Chrome</a> or <a href="https://www.chromium.org/Home" target="_blank" rel="noopener">Chromium</a> and to be serving the presentation from a webserver.<br>Here’s an example of an exported presentation that’s been uploaded to SlideShare: <a href="http://www.slideshare.net/hakimel/revealjs-300" target="_blank" rel="noopener">http://www.slideshare.net/hakimel/revealjs-300</a>.</p><h3 id="Page-size"><a href="#Page-size" class="headerlink" title="Page size"></a>Page size</h3><p>Export dimensions are inferred from the configured <a href="#presentation-size">presentation size</a>. Slides that are too tall to fit within a single page will expand onto multiple pages. You can limit how many pages a slide may expand onto using the <code>pdfMaxPagesPerSlide</code> config option, for example <code>Reveal.configure({ pdfMaxPagesPerSlide: 1 })</code> ensures that no slide ever grows to more than one printed page.</p><h3 id="Print-stylesheet"><a href="#Print-stylesheet" class="headerlink" title="Print stylesheet"></a>Print stylesheet</h3><p>To enable the PDF print capability in your presentation, the special print stylesheet at <a href="https://github.com/hakimel/reveal.js/blob/master/css/print/pdf.css" target="_blank" rel="noopener">/css/print/pdf.css</a> must be loaded. The default index.html file handles this for you when <code>print-pdf</code> is included in the query string. If you’re using a different HTML template, you can add this to your HEAD:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> link = <span class="built_in">document</span>.createElement( <span class="string">'link'</span> );</span></span><br><span class="line"><span class="javascript">link.rel = <span class="string">'stylesheet'</span>;</span></span><br><span class="line"><span class="javascript">link.type = <span class="string">'text/css'</span>;</span></span><br><span class="line"><span class="javascript">link.href = <span class="built_in">window</span>.location.search.match( <span class="regexp">/print-pdf/gi</span> ) ? <span class="string">'css/print/pdf.css'</span> : <span class="string">'css/print/paper.css'</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementsByTagName( <span class="string">'head'</span> )[<span class="number">0</span>].appendChild( link );</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Instructions-1"><a href="#Instructions-1" class="headerlink" title="Instructions"></a>Instructions</h3><ol><li>Open your presentation with <code>print-pdf</code> included in the query string i.e. <a href="http://localhost:8000/?print-pdf" target="_blank" rel="noopener">http://localhost:8000/?print-pdf</a>. You can test this with <a href="http://revealjs.com?print-pdf" target="_blank" rel="noopener">revealjs.com?print-pdf</a>.<ul><li>If you want to include <a href="#speaker-notes">speaker notes</a> in your export, you can append <code>showNotes=true</code> to the query string: <a href="http://localhost:8000/?print-pdf&amp;showNotes=true" target="_blank" rel="noopener">http://localhost:8000/?print-pdf&amp;showNotes=true</a></li></ul></li><li>Open the in-browser print dialog (CTRL/CMD+P).</li><li>Change the <strong>Destination</strong> setting to <strong>Save as PDF</strong>.</li><li>Change the <strong>Layout</strong> to <strong>Landscape</strong>.</li><li>Change the <strong>Margins</strong> to <strong>None</strong>.</li><li>Enable the <strong>Background graphics</strong> option.</li><li>Click <strong>Save</strong>.</li></ol><p><img src="https://s3.amazonaws.com/hakim-static/reveal-js/pdf-print-settings-2.png" alt="Chrome Print Settings"></p><p>Alternatively you can use the <a href="https://github.com/astefanutti/decktape" target="_blank" rel="noopener">decktape</a> project.</p><h2 id="Theming"><a href="#Theming" class="headerlink" title="Theming"></a>Theming</h2><p>The framework comes with a few different themes included:</p><ul><li>black: Black background, white text, blue links (default theme)</li><li>white: White background, black text, blue links</li><li>league: Gray background, white text, blue links (default theme for reveal.js &lt; 3.0.0)</li><li>beige: Beige background, dark text, brown links</li><li>sky: Blue background, thin dark text, blue links</li><li>night: Black background, thick white text, orange links</li><li>serif: Cappuccino background, gray text, brown links</li><li>simple: White background, black text, blue links</li><li>solarized: Cream-colored background, dark green text, blue links</li></ul><p>Each theme is available as a separate stylesheet. To change theme you will need to replace <strong>black</strong> below with your desired theme name in index.html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/theme/black.css"</span> <span class="attr">id</span>=<span class="string">"theme"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you want to add a theme of your own see the instructions here: <a href="https://github.com/hakimel/reveal.js/blob/master/css/theme/README.md" target="_blank" rel="noopener">/css/theme/README.md</a>.</p><h2 id="Speaker-Notes"><a href="#Speaker-Notes" class="headerlink" title="Speaker Notes"></a>Speaker Notes</h2><p>reveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven’t written any notes. Press the »S« key on your keyboard to open the notes window.</p><p>A speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking/tapping on it.</p><p>Notes are defined by appending an <code>&lt;aside&gt;</code> element to a slide as seen below. You can add the <code>data-markdown</code> attribute to the aside element if you prefer writing notes using Markdown.</p><p>Alternatively you can add your notes in a <code>data-notes</code> attribute on the slide. Like <code>&lt;section data-notes=&quot;Something important&quot;&gt;&lt;/section&gt;</code>.</p><p>When used locally, this feature requires that reveal.js <a href="#full-setup">runs from a local web server</a>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Some Slide<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"notes"</span>&gt;</span></span><br><span class="line">Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit »S« on your keyboard).</span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you’re using the external Markdown plugin, you can add notes with the help of a special delimiter:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>=<span class="string">"example.md"</span> <span class="attr">data-separator</span>=<span class="string">"^\n\n\n"</span> <span class="attr">data-separator-vertical</span>=<span class="string">"^\n\n"</span> <span class="attr">data-separator-notes</span>=<span class="string">"^Note:"</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># Title</span><br><span class="line">## Sub-title</span><br><span class="line"></span><br><span class="line">Here is some content...</span><br><span class="line"></span><br><span class="line">Note:</span><br><span class="line">This will only display in the notes window.</span><br></pre></td></tr></table></figure><h4 id="Share-and-Print-Speaker-Notes"><a href="#Share-and-Print-Speaker-Notes" class="headerlink" title="Share and Print Speaker Notes"></a>Share and Print Speaker Notes</h4><p>Notes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the <code>showNotes</code> configuration value set to <code>true</code>. Notes will appear along the bottom of the presentations.</p><p>When <code>showNotes</code> is enabled notes are also included when you <a href="https://github.com/hakimel/reveal.js#pdf-export" target="_blank" rel="noopener">export to PDF</a>. By default, notes are printed in a semi-transparent box on top of the slide. If you’d rather print them on a separate page after the slide, set <code>showNotes: &quot;separate-page&quot;</code>.</p><h4 id="Speaker-notes-clock-and-timers"><a href="#Speaker-notes-clock-and-timers" class="headerlink" title="Speaker notes clock and timers"></a>Speaker notes clock and timers</h4><p>The speaker notes window will also show:</p><ul><li>Time elapsed since the beginning of the presentation.  If you hover the mouse above this section, a timer reset button will appear.</li><li>Current wall-clock time</li><li>(Optionally) a pacing timer which indicates whether the current pace of the presentation is on track for the right timing (shown in green), and if not, whether the presenter should speed up (shown in red) or has the luxury of slowing down (blue).</li></ul><p>The pacing timer can be enabled by configuring by the <code>defaultTiming</code> parameter in the <code>Reveal</code> configuration block, which specifies the number of seconds per slide.  120 can be a reasonable rule of thumb.  Timings can also be given per slide <code>&lt;section&gt;</code> by setting the <code>data-timing</code> attribute.  Both values are in numbers of seconds.</p><h2 id="Server-Side-Speaker-Notes"><a href="#Server-Side-Speaker-Notes" class="headerlink" title="Server Side Speaker Notes"></a>Server Side Speaker Notes</h2><p>In some cases it can be desirable to run notes on a separate device from the one you’re presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'socket.io/socket.io.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/notes-server/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Then:</p><ol><li>Install <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (4.0.0 or later)</li><li>Run <code>npm install</code></li><li>Run <code>node plugin/notes-server</code></li></ol><h2 id="Multiplexing"><a href="#Multiplexing" class="headerlink" title="Multiplexing"></a>Multiplexing</h2><p>The multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>.</p><p>The multiplex plugin needs the following 3 things to operate:</p><ol><li>Master presentation that has control</li><li>Client presentations that follow the master</li><li>Socket.io server to broadcast events from the master to the clients</li></ol><h4 id="Master-presentation"><a href="#Master-presentation" class="headerlink" title="Master presentation"></a>Master presentation</h4><p>Served from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter’s) computer. (It’s safer to run the master presentation from your own computer, so if the venue’s Internet goes down it doesn’t stop the show.) An example would be to execute the following commands in the directory of your master presentation:</p><ol><li><code>npm install node-static</code></li><li><code>static</code></li></ol><p>If you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute <code>node plugin/notes-server</code> in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes/static-file server.</p><p>You can then access your master presentation at <code>http://localhost:1947</code></p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="string">'13652805320794272084'</span>, <span class="comment">// Obtained from the socket.io server. Gives this (the master) control of the presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// Obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'https://reveal-js-multiplex-ccjbegmaii.now.sh'</span> <span class="comment">// Location of socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/master.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// and if you want speaker notes</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/notes-server/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Client-presentation"><a href="#Client-presentation" class="headerlink" title="Client presentation"></a>Client presentation</h4><p>Served from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via <code>http://example.com/path/to/presentation/client/index.html</code>, with the configuration below causing them to connect to the socket.io server as clients.</p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="literal">null</span>, <span class="comment">// null so the clients do not have control of the master presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// id, obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'https://reveal-js-multiplex-ccjbegmaii.now.sh'</span> <span class="comment">// Location of socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Socket-io-server"><a href="#Socket-io-server" class="headerlink" title="Socket.io server"></a>Socket.io server</h4><p>Server that receives the <code>slideChanged</code> events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands:</p><ol><li><code>npm install</code></li><li><code>node plugin/multiplex</code></li></ol><p>Or you can use the socket.io server at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>.</p><p>You’ll need to generate a unique secret and token pair for your master and client presentations. To do so, visit <code>http://example.com/token</code>, where <code>http://example.com</code> is the location of your socket.io server. Or if you’re going to use the socket.io server at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>, visit <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/token" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/token</a>.</p><p>You are very welcome to point your presentations at the Socket.io server running at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>, but availability and stability are not guaranteed.</p><p>For anything mission critical I recommend you run your own server. The easiest way to do this is by installing <a href="https://zeit.co/now" target="_blank" rel="noopener">now</a>. With that installed, deploying your own Multiplex server is as easy running the following command from the reveal.js folder: <code>now plugin/multiplex</code>.</p><h5 id="socket-io-server-as-file-static-server"><a href="#socket-io-server-as-file-static-server" class="headerlink" title="socket.io server as file static server"></a>socket.io server as file static server</h5><p>The socket.io server can play the role of static file server for your client presentation, as in the example at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>. (Open <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a> in two browsers. Navigate through the slides on one, and the other will update to match.)</p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="literal">null</span>, <span class="comment">// null so the clients do not have control of the master presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// id, obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'example.com:80'</span> <span class="comment">// Location of your socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>It can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don’t want to use speaker notes). (Open <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a> in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don’t want your audience to mess with your slides while you’re presenting. ;)</p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="string">'13652805320794272084'</span>, <span class="comment">// Obtained from the socket.io server. Gives this (the master) control of the presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// Obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'example.com:80'</span> <span class="comment">// Location of your socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/master.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h2><p>If you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the <a href="http://www.mathjax.org/" target="_blank" rel="noopener">MathJax</a> library. To use it you’ll need to include it as a reveal.js dependency, <a href="#dependencies">find our more about dependencies here</a>.</p><p>The plugin defaults to using <a href="http://en.wikipedia.org/wiki/LaTeX" target="_blank" rel="noopener">LaTeX</a> but that can be adjusted through the <code>math</code> configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you’ll need to download a copy of the library and adjust the <code>mathjax</code> configuration value.</p><p>Below is an example of how the plugin can be configured. If you don’t intend to change these values you do not need to include the <code>math</code> config object at all.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options ...</span></span><br><span class="line"></span><br><span class="line">math: &#123;</span><br><span class="line">mathjax: <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js'</span>,</span><br><span class="line">config: <span class="string">'TeX-AMS_HTML-full'</span>  <span class="comment">// See http://docs.mathjax.org/en/latest/config-files.html</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/math/math.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Read MathJax’s documentation if you need <a href="http://docs.mathjax.org/en/latest/start.html#secure-access-to-the-cdn" target="_blank" rel="noopener">HTTPS delivery</a> or serving of <a href="http://docs.mathjax.org/en/latest/configuration.html#loading-mathjax-from-the-cdn" target="_blank" rel="noopener">specific versions</a> for stability.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>The <strong>basic setup</strong> is for authoring presentations only. The <strong>full setup</strong> gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source.</p><h3 id="Basic-setup"><a href="#Basic-setup" class="headerlink" title="Basic setup"></a>Basic setup</h3><p>The core of reveal.js is very easy to install. You’ll simply need to download a copy of this repository and open the index.html file directly in your browser.</p><ol><li>Download the latest version of reveal.js from <a href="https://github.com/hakimel/reveal.js/releases" target="_blank" rel="noopener">https://github.com/hakimel/reveal.js/releases</a></li><li>Unzip and replace the example contents in index.html with your own</li><li>Open index.html in a browser to view it</li></ol><h3 id="Full-setup"><a href="#Full-setup" class="headerlink" title="Full setup"></a>Full setup</h3><p>Some reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code.</p><ol><li><p>Install <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (4.0.0 or later)</p></li><li><p>Clone the reveal.js repository</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/hakimel/reveal.js.git</span><br></pre></td></tr></table></figure></li><li><p>Navigate to the reveal.js folder</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> reveal.js</span><br></pre></td></tr></table></figure></li><li><p>Install dependencies</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>Serve the presentation and monitor source files for changes</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm start</span><br></pre></td></tr></table></figure></li><li><p>Open <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a> to view your presentation</p><p>You can change the port by using <code>npm start -- --port=8001</code>.</p></li></ol><h3 id="Folder-Structure"><a href="#Folder-Structure" class="headerlink" title="Folder Structure"></a>Folder Structure</h3><ul><li><strong>css/</strong> Core styles without which the project does not function</li><li><strong>js/</strong> Like above but for JavaScript</li><li><strong>plugin/</strong> Components that have been developed as extensions to reveal.js</li><li><strong>lib/</strong> All other third party assets (JavaScript, CSS, fonts)</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>MIT licensed</p><p>Copyright (C) 2017 Hakim El Hattab, <a href="http://hakim.se" target="_blank" rel="noopener">http://hakim.se</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;reveal-js&quot;&gt;&lt;a href=&quot;#reveal-js&quot; class=&quot;headerlink&quot; title=&quot;reveal.js  &quot;&gt;&lt;/a&gt;reveal.js &lt;a href=&quot;https://travis-ci.org/hakimel/reveal.j
      
    
    </summary>
    
      <category term="reveal.js" scheme="http://yoururl.com/categories/reveal-js/"/>
    
    
      <category term="reveal.js" scheme="http://yoururl.com/tags/reveal-js/"/>
    
  </entry>
  
  <entry>
    <title>python：对象引用、可变性（二）</title>
    <link href="http://yoururl.com/2018/04/18/python%EF%BC%9A%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E3%80%81%E5%8F%AF%E5%8F%98%E6%80%A7%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoururl.com/2018/04/18/python：对象引用、可变性（二）/</id>
    <published>2018-04-17T16:01:00.000Z</published>
    <updated>2018-04-18T17:25:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="函数参数引用"><a href="#函数参数引用" class="headerlink" title="函数参数引用"></a>函数参数引用</h3><p>python 唯一支持的参数传递模式是 <strong>共享传参</strong>。<br>共享传参： 指函数的各个形参获得实参中各个引用的副本。 也就是说，函数内部的形参是实参的别名。</p><p>因此，在函数中修改传入参数的可变对象， 会影响实参。 但对象的标识不会改变。</p><p>ex1. 函数可能会修改收到的任何可变对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    a += b</span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line">print(<span class="string">'f: '</span>, f(x, y))</span><br><span class="line">print(<span class="string">'x：'</span>, x)       <span class="comment"># 数字没变</span></span><br><span class="line">print(<span class="string">'y：'</span>, y)</span><br></pre></td></tr></table></figure><pre><code>f:  3x： 1y： 2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">b = [<span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">print(<span class="string">'f:'</span>, f(a, b))</span><br><span class="line">print(<span class="string">'a:'</span>, a)        <span class="comment"># 列表a变了</span></span><br><span class="line">print(<span class="string">'b:'</span>, b)</span><br></pre></td></tr></table></figure><pre><code>f: [1, 2, 3, 4]a: [1, 2, 3, 4]b: [3, 4]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">u = (<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">print(<span class="string">'f:'</span>, f(t, u))</span><br><span class="line">print(<span class="string">'t:'</span>, t)        <span class="comment"># 元组t没变</span></span><br><span class="line">print(<span class="string">'u:'</span>, u)</span><br></pre></td></tr></table></figure><pre><code>f: (1, 2, 3, 4)t: (1, 2)u: (3, 4)</code></pre><h4 id="不要使用可变类型作为参数默认值"><a href="#不要使用可变类型作为参数默认值" class="headerlink" title="不要使用可变类型作为参数默认值"></a>不要使用可变类型作为参数默认值</h4><p>ex2. 说明可变默认值的影响</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bus</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, passengers=[])</span>:</span>    <span class="comment"># 默认值为空列表</span></span><br><span class="line">        self.passengers = passengers</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pick</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.append(name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drop</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.remove(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bus1 = bus([<span class="string">'A'</span>, <span class="string">'B'</span>])</span><br><span class="line">bus1.passengers</span><br></pre></td></tr></table></figure><pre><code>[&apos;A&apos;, &apos;B&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bus1.pick(<span class="string">'C'</span>)</span><br><span class="line">bus1.drop(<span class="string">'A'</span>)</span><br><span class="line">bus1.passengers          <span class="comment"># bus1 未出现异常</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;B&apos;, &apos;C&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bus2 = bus()             <span class="comment"># 一开始bus2是空的，因此把默认的空列表赋值给self.passengers</span></span><br><span class="line">bus2.pick(<span class="string">'D'</span>)</span><br><span class="line">bus2.passengers</span><br></pre></td></tr></table></figure><pre><code>[&apos;D&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bus3 = bus()             <span class="comment"># 一开始bus3也是空的，因此把默认的空列表赋值给self.passengers</span></span><br><span class="line">bus3.passengers          <span class="comment"># 但是默认列表不为空， 登上bus2的D出现在bus3中</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;D&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bus3.pick(<span class="string">'E'</span>)</span><br><span class="line">bus2.passengers          <span class="comment"># 登上bus3的E出现在bus2中</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;D&apos;, &apos;E&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus2.passengers <span class="keyword">is</span> bus3.passengers</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><p>问题是，bus2.passengers 和 bus3.passengers 指代同一个列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus1.passengers <span class="keyword">is</span> bus2.passengers</span><br></pre></td></tr></table></figure><pre><code>False</code></pre><p>而bus1.passengers是另一个列表</p><p>问题在于： 没有指定初始乘客的bus实例会共享一个乘客列表。<br><strong>没有指定初始值的实例会共享一个对象。</strong></p><p>本例中，实例化bus时，如果传入乘客，会按预期运作。但不为bus指定乘客的话，会发生奇怪的事。<br>因为初始化时，self.passengers变成passengers参数默认值的别名。问题的根源在于，<strong>默认值在定义函数时计算（通常在加载模块时），因此默认值变成了函数对象的属性。如果默认值是可变对象，而且修改了它的值，那么后续的函数调用都会收到影响。</strong></p><p>我们可以审查bus.__init__对象，查看它的__defaults__属性中的乘客</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir(bus.__init__)</span><br></pre></td></tr></table></figure><pre><code>[&apos;__annotations__&apos;, &apos;__call__&apos;, &apos;__class__&apos;, &apos;__closure__&apos;, &apos;__code__&apos;, &apos;__defaults__&apos;, &apos;__delattr__&apos;, &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__get__&apos;, &apos;__getattribute__&apos;, &apos;__globals__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__kwdefaults__&apos;, &apos;__le__&apos;, &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__name__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__qualname__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus.__init__.__defaults__</span><br></pre></td></tr></table></figure><pre><code>([&apos;D&apos;, &apos;E&apos;],)</code></pre><p>最后，我们可以验证bus2.passenges是一个别名，它绑定到bus.__init__.__defaults__属性的第一个元素上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus.__init__.__defaults__[<span class="number">0</span>] <span class="keyword">is</span> bus2.passengers</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><p>这个问题说明了为什么通常使用None作为接受可变值参数的默认值。</p><h4 id="防御可变参数"><a href="#防御可变参数" class="headerlink" title="防御可变参数"></a>防御可变参数</h4><p>ex3. 接受可变参数的影响</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwilighBus</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, passengers=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> passengers <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            self.passengers = []</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.passengers = passengers      <span class="comment"># 赋值语句把self.passengers 变成passengers的别名， passengers 是传给__init__方法的实参的别名</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pick</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.append(name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drop</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.remove(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">team = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</span><br><span class="line">bus = TwilighBus(team)</span><br><span class="line">bus.drop(<span class="string">'A'</span>)</span><br><span class="line">bus.pick(<span class="string">'D'</span>)</span><br><span class="line">print(<span class="string">'self.passengers: '</span>,bus.passengers)     </span><br><span class="line">print(<span class="string">'team: '</span>,team)                          <span class="comment"># remove()和append()会修改传给构造方法的那个list</span></span><br></pre></td></tr></table></figure><pre><code>self.passengers:  [&apos;B&apos;, &apos;C&apos;, &apos;D&apos;]team:  [&apos;B&apos;, &apos;C&apos;, &apos;D&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(team), id(bus.passengers)                  <span class="comment"># 共享同一个对象</span></span><br></pre></td></tr></table></figure><pre><code>(2677046974216, 2677046974216)</code></pre><p>上述例子，类为传给构造方法的列表创建了别名，self.passengers 和 passengers 两个标识共享同一个 list。<br>正确的做法是，在__init__中，传入 passengers 参数时，应该把参数值的副本赋值给self.passengers，如下：<br>ex4. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwilighBus</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, passengers=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> passengers <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            self.passengers = []</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.passengers = list(passengers)    <span class="comment"># 把参数值的副本赋值给self.passengers</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pick</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.append(name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drop</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.remove(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">team = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</span><br><span class="line">bus = TwilighBus(team)</span><br><span class="line">bus.drop(<span class="string">'A'</span>)</span><br><span class="line">bus.pick(<span class="string">'D'</span>)</span><br><span class="line">print(<span class="string">'self.passengers: '</span>,bus.passengers)  </span><br><span class="line">print(<span class="string">'team: '</span>,team)                              <span class="comment"># 不改变初始化时传入的实参</span></span><br></pre></td></tr></table></figure><pre><code>self.passengers:  [&apos;B&apos;, &apos;C&apos;, &apos;D&apos;]team:  [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(team), id(bus.passengers)                      <span class="comment"># 不同对象的别名</span></span><br></pre></td></tr></table></figure><pre><code>(2677047040968, 2677046999688)</code></pre><p>除非确实想修改通过参数传入的对象，否则在类中直接把参数赋值给实例变量之前一定要考虑清楚，因为这样会为参数对象创建别名。如果不确定，就创建副本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;函数参数引用&quot;&gt;&lt;a href=&quot;#函数参数引用&quot; class=&quot;headerlink&quot; title=&quot;函数参数引用&quot;&gt;&lt;/a&gt;函数参数引用&lt;/h3&gt;&lt;p&gt;python 唯一支持的参数传递模式是 &lt;strong&gt;共享传参&lt;/strong&gt;。&lt;br&gt;共享传参： 指函
      
    
    </summary>
    
      <category term="python" scheme="http://yoururl.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoururl.com/tags/python/"/>
    
  </entry>
  
</feed>
