<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy_z &#39;s Blog</title>
  
  <subtitle>Coding - Thinking - Sharing - Deep learning</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoururl.com/"/>
  <updated>2019-01-26T05:27:24.729Z</updated>
  <id>http://yoururl.com/</id>
  
  <author>
    <name>Andy_z</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoururl.com/2019/01/26/%E6%96%B0%E5%BB%BA%E6%96%87%E6%9C%AC%E6%96%87%E6%A1%A3/"/>
    <id>http://yoururl.com/2019/01/26/新建文本文档/</id>
    <published>2019-01-26T05:24:09.554Z</published>
    <updated>2019-01-26T05:27:24.729Z</updated>
    
    <content type="html"><![CDATA[<h3 id="负样本生成"><a href="#负样本生成" class="headerlink" title="负样本生成"></a>负样本生成</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;负样本生成&quot;&gt;&lt;a href=&quot;#负样本生成&quot; class=&quot;headerlink&quot; title=&quot;负样本生成&quot;&gt;&lt;/a&gt;负样本生成&lt;/h3&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>复杂网络：网络测度之中心性</title>
    <link href="http://yoururl.com/2019/01/20/%E7%BD%91%E7%BB%9C%E5%BA%A6%E4%B8%8E%E4%B8%AD%E5%BF%83%E6%80%A7/"/>
    <id>http://yoururl.com/2019/01/20/网络度与中心性/</id>
    <published>2019-01-19T16:01:00.000Z</published>
    <updated>2019-01-26T04:58:27.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="度"><a href="#度" class="headerlink" title="度"></a>度</h2><ul><li><p>定义：<strong>与结点直接相连的边数目</strong></p></li><li><p>对于无向图：</p><ul><li><p>结点 $i$ 的度 可用邻接矩阵表示为  $k<em>i=\sum</em>{j=1}^n A_{ij}$  ;</p></li><li><p>无向图中，若边数量为 $m$ , 则边端点为 $2m$ , <strong>边的端点数与所有顶点度总和相等</strong> ， $2m=\sum_{i=1}^n k_i$  或</p><script type="math/tex; mode=display">m = \frac{1}{2} \sum_{i=1}^n k_i = \frac{1}{2} \sum_{ij} A_{ij}</script></li><li><p>顶点度均值 $c = \frac{1}{n} \sum_{i=1}^n k_i$ ;</p><script type="math/tex; mode=display">c=\frac{2m}{n}</script><blockquote><p>$cn=2m$ : 顶点度总和 == 无向边端点数</p></blockquote></li></ul></li><li><blockquote><p>简单图（无重边和自边）中，可能最大边数为 $\frac{1}{2}n(n-1)$ 个。</p><p><strong>连通度</strong>或<strong>密度</strong> $\rho$ : 图中实际出现的边数与边最大值的比值</p><script type="math/tex; mode=display">\rho = \frac{实际边数}{边最大值} = \frac{m}{\frac{n(n-1)}{2}} = \frac{c}{n-1}</script><p><em>网络规模足够大， 连通度可近似表示   $\rho=c\n$ </em> </p></blockquote></li></ul><ul><li><blockquote><p>根据 $\rho$  定义的网络疏密：</p><p>当 $n \rightarrow \infty $ 时：</p><ul><li><p>$\rho$ 趋于常数， 即度均值 $c\rightarrow \infty$ ，网络为密集的；</p><p>此类网络当网络规模扩大时，邻接矩阵中非零元的比例会保持常数；</p></li><li><p>$\rho \rightarrow 0$， 网络为稀疏的；</p><p>此类网络当网络规模扩大时，邻接矩阵中非零元的比例趋于零； </p></li></ul></blockquote></li><li><blockquote><p><strong>正则图</strong>： 所有结点的度相同；</p><p>$k-正则图$： 所有结点的度为$k$;</p></blockquote></li><li><p>对于有向图：</p><ul><li><p>每个结点有两个度:       考虑从结点$j$到$i$有一条边：</p><ul><li>入度：连接到该结点的入边数；   $k<em>i^{in}=\sum</em>{j=1}^n A_{ij}$ </li><li>出度：连接到该结点的出边数；   $k<em>j^{out}=\sum</em>{i=1}^n A_{ij}$ </li></ul></li><li><p>有向图中，边数目 $m$ 等于<strong>入边端点数总和</strong>，也等于<strong>出边端点数总和</strong>，有</p><script type="math/tex; mode=display">m = \sum_{i=1}^n k_i^{in} = \sum_{j=1}^n k_{j}^{out} = \sum_{ij} A_{ij}</script></li><li><p>有向图的入度均值 $c<em>{in}$ 等于出度均值 $c</em>{out}$ ,即</p><script type="math/tex; mode=display">c_{in} = \frac{1}{n}\sum_{i=1}^n k_i^{in} = \frac{1}{n}\sum_{j=1}^n k_j^{out} = c_{out}</script><script type="math/tex; mode=display">c=c_{in}=c_{out}=\frac{m}{n}</script></li></ul></li></ul><h2 id="中心性"><a href="#中心性" class="headerlink" title="中心性"></a>中心性</h2><p>中心性(Centrality)是社交网络分析中用以表达社交网络中结点在整个网络中所在中心的程度。</p><h3 id="度中心性"><a href="#度中心性" class="headerlink" title="度中心性"></a>度中心性</h3><ul><li>定义： 刻画结点中心性的连接中心度， 一个结点与其他点直接链接的总和（度$d$）；</li><li>无向图的结点$v_i$中心性 $C_d$ ： $C_d(v_i) = d_i$ ;                            </li><li>有向图的结点度中心性：<ul><li>入度： 刻画结点受欢迎程度，表示结点的突出性(prominence)或声望(prestige),   $C_d(v_i) = d_i^{in} （声望）$</li><li>出度：表示结点的合群性(gregariousness), $C_d(v_i) = d_i^{out} （合群性）$</li><li>结合入度出度： $C_d(v_i)=d_i^{in} + d_i^{out}$ ;</li></ul></li></ul><blockquote><p>度中心性度量方法不能用于比较不同网络中的中心性值，需要归一化；</p></blockquote><h3 id="度中心性的归一化"><a href="#度中心性的归一化" class="headerlink" title="度中心性的归一化"></a>度中心性的归一化</h3><ul><li>使用最大可能度数：<script type="math/tex; mode=display">C_d^{norm}(v_i)=\frac{度中心度}{最大可能度数}=\frac{d_i}{n-1}</script></li></ul><ul><li>使用最大度数：<script type="math/tex; mode=display">C_d^{max}(v_i) = \frac{度中心度}{最大度数} = \frac{d_i}{\max_jd_j}</script></li></ul><ul><li>使用度数和：<script type="math/tex; mode=display">C_d^{sum}(v_i)=\frac{度中心度}{度数和}=\frac{d_i}{\sum_jd_j} = \frac{d_i}{2m}</script></li></ul><h3 id="特征向量中心性"><a href="#特征向量中心性" class="headerlink" title="特征向量中心性"></a>特征向量中心性</h3><p>在度中心性度量中，认为具有较多连接的结点更为重要。但在社交网络中，拥有更多的邻居结点并不能确保该结点就是重要的，拥有更多重要的邻居结点才能提供更有力的信息。因为很多情况下，一个结点会由于连接到一些很重要的结点从而使得自身的重要性得到提升。</p><p>特征向量中心性通过结合<strong>无向图的邻居节点</strong>（或<strong>有向图的输入邻居结点</strong>）的重要性来概括度中心性。</p><p>对于每个结点$i$,令其的中心性为$x_i$。 计算$i$的所有邻居结点的中心性之和： </p><script type="math/tex; mode=display">x_i' = \sum_i A_{ij} x_j   \\     \Longrightarrow   \\  \bf x' = Ax    (矩阵形式)</script><p>重复估算过程，得到中心性计算公式：</p><script type="math/tex; mode=display">\bf x(t) = A^tx(0)</script><blockquote><p>$\bf x(0)$  为邻接矩阵特征向量$\bf v_i$的线性组合， 即  $\bf x(0) = \sum_i c_i v_i$ ;</p><p>根据特征值的定义： $Av_i = \lambda v_i$ </p></blockquote><p>最终得：</p><script type="math/tex; mode=display">\bf x{(t)} = A^t\sum_i c_i v_i = \sum_i c_i\lambda_i^tv_i = \lambda_1^t \sum_i c_i[\frac{\lambda_i}{\lambda_1}]^t v_i</script><p>其中， $\lambda_i$ 为 $\bf A$ 的 特征值， $\lambda_1$ 为其中最大的特征值。</p><blockquote><p>当 $i\neq 1$ 时，对于所有 $i$ ，$\frac{\lambda_i}{\lambda_1}&lt;1$ 。当 $t$ 增大时， 除第一项外其他项都呈指数级下降，当$t \rightarrow \infty$ 时， $\bf x(t) \rightarrow c_1\lambda_1^t v_t$  。<strong>中心性向量的极限与邻接矩阵中的主特征向量成正比</strong>， 因此可等价认为中心性$\bf x$满足: $\bf Ax=\lambda_1 x$</p></blockquote><p>由此可得出，<strong>结点$i$的中心性与该结点邻居节点的中心性之和成正比</strong> ： </p><script type="math/tex; mode=display">x_i = \frac{1}{\lambda_i} \sum_j A_{ij} x_j</script><blockquote><p>该公式赋予特征向量中心性的性质：使得它的值会随两方面因素变大：</p><ul><li>该结点具有多个邻居结点；</li><li>该结点的邻居节点中有重要的结点；</li></ul></blockquote><h4 id="Perron-Frobenius-Theorem"><a href="#Perron-Frobenius-Theorem" class="headerlink" title="Perron-Frobenius Theorem:"></a>Perron-Frobenius Theorem:</h4><p>假设$A\in \Bbb R^{n \times n}$ 时[强]连通图的邻接矩阵，或者 $A:A<em>{i,j} &gt;0$ （即一个正的$n\times n$的矩阵）。 存在一个正实数（Perron-Frobenius特征值）$\lambda</em>{max}$，满足$\lambda<em>{max}$ 是矩阵$\bf A$的特征值，并且$\bf A $的其余特征值均严格小于$\lambda</em>{max}$。 $\lambda_{max}$ 所对应的特征向量为$v=(v_1,v_2,v_3,…,v_n)$，满足$\forall v_i&gt;0$ 。</p><p>根据该定理，我们可以<strong>通过求解矩阵$A$ 的特征值得到正的中心性值，选取其中最大的特征值 $\lambda_{max}$ ,其对应特征向量为 $x_i$，该特征向量的所有部分均为正值，并且其分量对应于各结点的特征向量中心性，其中特征向量中最大分量对应的结点考虑为最中心的结点</strong></p><blockquote><p>寻找最中心结点：</p><ul><li>计算邻接矩阵的特征值；</li><li>选择最大的特征值，计算对应的特征向量；</li><li>特征向量最大分量对应的结点有最大的特征向量中心性，考虑为最中心的结点。</li></ul></blockquote><p>理论上讲，特征向量中心性对于有向和无向网络都适用，但在有向网络中存在一些问题。</p><ul><li><p>有向网络对应的邻接矩阵通常非对称，意味着有两类特征向量，即左特征向量和右特征向量。左特征向量对应该结点指向的结点（出），右特征向量对应指向该结点的结点（入）。中心性主要由指向该结点的结点赋予，因此选择<strong>右特征向量</strong>。</p><p>在有向网络中结点$i$的特征中心性的正确定义为：<strong>结点的特征向量中心性与指向该结点的所有结点的中心性之和成正比。</strong></p></li><li><p>如果有向网络中结点$B$的所有入边都来源于特征向量中心性为0的邻居结点，则结点$B$的特征向量中心性也为0。</p></li></ul><h3 id="Katz中心性"><a href="#Katz中心性" class="headerlink" title="Katz中心性"></a>Katz中心性</h3><p>Katz中心性是特征向量中心性的变体，解决上述有向网络中零特征向量中心性传递带来的问题。</p><ul><li><p>定义：为网络中的每个结点赋予少量的中心性，不考虑该结点在网络中的具体位置或者其邻居节点的中心性。</p><script type="math/tex; mode=display">x_i = \alpha \sum_i A_{ij} x_j + \beta</script><p>偏差项$\beta$ 用来解决中心性值为0 的问题；</p><p>矩阵表示上述公式，$\beta$ 作为整体因子其取值并不重要，通常设定为1：</p><script type="math/tex; mode=display">\bf x=\alpha Ax+\beta 1  \\ \Longrightarrow  \beta=1 \Longrightarrow \\x=(I-\alpha A)^{-1} 1</script></li><li><p>自由参数$\alpha$ 负责调节特征向量与常数项之间的平衡。</p><ul><li><p>当$\alpha=0$ 时， 式（14）只剩下常数项，所有结点赋予相同的中心性$\beta$;</p></li><li><p>当$\alpha$ 变大时，中心性不断提高，$\beta$ 的影响将减小，最终达到一个点，在该点中心性发散。该情况出现在$\bf det(A-\alpha^{-1}I)=0$ 的那一点；</p><blockquote><p>该公式为特征方程，当$\alpha =\lambda_{max}^{-1}$时，行列式第一次经过零点；因此应选择一个小于该值的$\alpha$ 值，保证中心性收敛。</p><p>很多研究中，将$\alpha$ 设为稍小于最大值$\lambda_{max}^{-1}$的值，这样可以使公式中特征向量项权值最大，而使常数项权值最小。</p></blockquote></li></ul></li></ul><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><p>对于增加的常数项，根据结点的不同赋予不同的值，可以定义一种更加通用的中心性：</p><script type="math/tex; mode=display">x_i = \alpha \sum_j A_{ij} x_j + \beta_i</script><p>其中$\beta_i$是每一个结点与网络无关的固有中心性。因此中心性向量$\bf x$可描述为</p><script type="math/tex; mode=display">\bf x=(I-\alpha A)^{-1} \beta</script><h3 id="PageRank"><a href="#PageRank" class="headerlink" title="PageRank"></a>PageRank</h3><p>Katz中心性的不足之处在于，Katz中心性较高的结点会向它指向的结点传递其高中心性，这是不可取的，因为该高中心性结点指向的结点数量可能很大，但并不是每一个被指向的结点都具有很高的中心性。因此，<strong>被有重要影响的结点指向的结点，其从重要节点获得的中心性会因为与其他结点共享而被稀释。</strong></p><ul><li>定义：从网络邻居结点获得的中心性与邻居结点的中心性除以它们的出度成正比。</li></ul><script type="math/tex; mode=display">x_i = \alpha \sum_i A_{ij} \frac{x_j}{k_j^{out}} + \beta</script><blockquote><p>对于网络中出度$k<em>j^{out}=0$的结点 ，会产生0/0的结果（因为对于所有$i$，$A</em>{ij}=0$）。</p><p>解决此问题： 没有出度的结点对其他结点的中心性贡献为0，因此将这些结点的出度设定为1；实际可将$k_j^{out}$ 设定为任何一个非零值。</p></blockquote><p>​    表示为矩阵形式，同样将$\beta$设定为1</p><script type="math/tex; mode=display">\bf x=\alpha AD^{-1}x+\beta1    \\  \Longrightarrow \beta=1 \Longrightarrow \\  x=(I-\alpha AD^{-1})^{-1} 1=D(D-\alpha A)^{-1} 1</script><p>​    其中， $\bf D$ 为对角矩阵，其元素为 $D_{ii}=\max(k_i^{out},1)$</p><blockquote><p>与katz中心性类似，$\alpha$ 的值应小于$AD^{-1}$的最大特征值的倒数，即$\frac{1}{\lambda_{max}}$ ;</p><p>对于无向网络，其最大特征值为1，因此 $\alpha$ 应选择小于1的值；</p><p>对于有向网络，通常主特征值实际取值近似1；</p></blockquote><h4 id="拓展-1"><a href="#拓展-1" class="headerlink" title="拓展"></a>拓展</h4><p>PageRank推广，使得常数项$\beta$ 对不同顶点取不同的值：</p><script type="math/tex; mode=display">x_i = \alpha \sum_i A_{ij} \frac{x_j}{k_j^{out}} + \beta_i</script><p>矩阵形式为：</p><script type="math/tex; mode=display">\bf x=D(D-\alpha A)^{-1} \beta</script><blockquote><p>利用该公式对网页进行排序时，其中$\beta_i$的值可以基于网页与查询条件的文本相似性给出。</p><h4 id="四种中心性测度"><a href="#四种中心性测度" class="headerlink" title="四种中心性测度"></a>四种中心性测度</h4><div class="table-container"><table><thead><tr><th></th><th>带常数项</th><th>不带常数项</th></tr></thead><tbody><tr><td>除以出度</td><td>$\bf x=D(D-\alpha A)^{-1}1$       RageRank</td><td>$\bf x = AD^{-1}x$     度中心性</td></tr><tr><td>不做任何除法</td><td>$\bf x=(I-\alpha A)^{-1} 1$             Katz中心性</td><td>$\bf x=\lambda_1^{-1}Ax$      特征向量中心性</td></tr></tbody></table></div></blockquote><h3 id="针对引文网络的中心性"><a href="#针对引文网络的中心性" class="headerlink" title="针对引文网络的中心性"></a>针对引文网络的中心性</h3><h4 id="核心结点与权威结点"><a href="#核心结点与权威结点" class="headerlink" title="核心结点与权威结点"></a>核心结点与权威结点</h4><ul><li>权威结点（authority）: 包含所关注主题有用的信息的结点；</li><li>核心结点（hub)：指向权威结点的结点，说明到哪能找到最合适的权威结点；</li></ul><p>核心结点与权威结点只存在于有向网络中，在有向网络中可以定义两种中心性，</p><ul><li><p>权威中心性</p><p>与指向该结点的核心中心性之和成正比；</p><script type="math/tex; mode=display">x_i=\alpha \sum_j A_{ij}y_j</script></li><li><p>核心中心性</p><p>与该结点指向的结点的权威中心性之和成正比；</p><script type="math/tex; mode=display">y_i =\beta \sum_j A_{ji}x_j</script><p>矩阵表示：</p><script type="math/tex; mode=display">\bf x=\alpha Ay  ,    y=\beta A^Tx    \\ \LongrightarrowAA^Tx=\lambda x,   A^TAy=\lambda y</script><p>其中，$\lambda=(\alpha \beta)^{-1}$</p><blockquote><p>权威中心性与核心中心性分别由具有相同特征值的矩阵$AA^T$和$A^TA$对应的特征向量决定。</p><p>因此矩阵$AA^T$和$A^TA$ 有相同的主特征值$\lambda$ ：</p><p>若 $\bf AA^Tx=\lambda x$ , 公式两边都乘以 $A^T$ , 可以得到 $\bf A^TA(A^Tx)=\lambda(A^Tx)$。因此$A^Tx$ 也是矩阵$A^TA$ 的特征值为$\lambda$ 的特征向量， 即$\bf y=A^Tx$ 。 </p><ul><li>$AA^T$ 是共引矩阵，权威中心性可以粗略的认为是共引网络的特征向量中心性；</li><li>$A^TA$ 是文献耦合矩阵，核心中心性就是文献耦合网络的特征向量中心性；</li></ul></blockquote></li></ul><h3 id="接近度中心性"><a href="#接近度中心性" class="headerlink" title="接近度中心性"></a>接近度中心性</h3><p>接近中心性不同于其他中心性测度，度量了一个结点到其他结点的平均距离。接近中心性的思想是结点越趋于中心，越能快速到达其他结点。形象化的描述为，这些结点满足与其他结点之间有最小平均最短路径。</p><ul><li>定义：平均测地距离的倒数<script type="math/tex; mode=display">C_i=\frac{1}{\ell_i}    \\\ell_i = \frac{1}{n}\sum_j d_{ij}    \\  or \\\ell_i = \frac{1}{n-1} \sum_{j(\neq i)} d_{ij}</script></li></ul><blockquote><ul><li><p>问题1：接近中心性最大最小值之间的动态变化范围很小。大部分网络中，顶点之间的测地距离$d_{ij}$ 一般很小，随网络规模增长呈对数级速度增长。而且最短测地距离与最长测地距离确定了平均距离$\ell_i$的上下限，因此$\ell_i$和$C_i$的取值范围都较小。结点接近中心性的密集意味着网络结构的微小变化就会引起接近度中心性值排序的显著变化。</p></li><li><p>问题2：若将不同分支中的结点间的测地距离定义为无穷大，那么假设任何一个多于一个分支的网络中所有结点$i$的$\ell_i$ 都为无穷大，则$C_i$ 为零。</p></li><li>解决方法之一是<strong>只计算在同一分支内部的结点的平均测地距离</strong>，但仍然存在固有缺陷：小规模分支内部结点间的距离普遍偏小，与大规模分支中的结点相比，其$\ell_i$较小，$C_i$更大。产生不理想的结果：<strong>大多数情况下，小规模分支中结点之间的连通程度比大规模分支中要低，因此应赋予较低的中心性</strong>。</li></ul></blockquote><p>重定义接近中心性，使用结点之间的<strong>调和平均测地距离</strong>：</p><script type="math/tex; mode=display">C_i'= \frac{1}{n-1}\sum_{j(\neq i)} \frac{1}{d_{ij}}</script><ul><li><p>网络平均测地距离：</p><ul><li>对于只有一个分支的网络，所有结点对之间的平均距离为</li></ul><script type="math/tex; mode=display">\ell = \frac{1}{n^2}\sum_{ij}d_{ij} = \frac{1}{n}\sum_i \ell_i</script><p>​    即所有结点的平均测地距离$\ell_i$的平均值。</p><ul><li><p>对于多分支网络，<em>只计算同一分支内部结点之间路径的平均长度</em>。令${ {\scr C}_m }$表示网络中分支的集合，定义：</p><script type="math/tex; mode=display">\ell = \frac{\sum_m \sum_{ij\in {\scr C}_m} d_{ij}}{\sum_m n_m^2}</script><p>其中，$n_m$为分支$\scr C_m$中的结点数。</p><p>另一中定义方式为定义一个调和平均距离$\ell ’$ ：</p><script type="math/tex; mode=display">\frac{1}{\ell '} = \frac{1}{n(n-1)} \sum_{i \neq j} \frac{1}{d_{ij}}=\frac{1}{n}\sum_i C_i'    \\  \Longleftrightarrow \\\ell ' = \frac{n}{\sum_i C_i'}</script></li></ul></li></ul><h3 id="介数中心性"><a href="#介数中心性" class="headerlink" title="介数中心性"></a>介数中心性</h3><p>考虑结点在连接其他结点时表现的”中介“次数，即其他结点间通过结点$v_i$的最短路径的数目。</p><p><strong>介数中心性衡量某个结点对其他结点对之间信息流动的影响力。</strong> </p><ul><li><p>定义：</p><script type="math/tex; mode=display">C_b(v_i) = \sum_{s \neq t \neq v_i} \frac{s到t经过v_i的最短路径数目}{s到t的最短路径数目} =\sum_{s \neq t \neq v_i} \frac{\sigma_{st}(v_i)}{\sigma_{st}}</script></li><li><p>归一化：</p><ul><li><p>最大值：当结点$v<em>i$出现在连接任意结点对$(s,t)$的所有最短路径中时，该结点的中间中心性对应最大值1，即$\forall (s,t), s \neq t \neq v_i , \frac{\sigma</em>{st} (v<em>i)}{\sigma</em>{st}} = 1$。 因此，最大值为：</p><script type="math/tex; mode=display">C_b(v_i)=\sum_{s \neq t \neq v_i} \frac{\sigma_{st}(v_i)}{\sigma_{st}}=\sum_{s \neq t \neq v_i} 1 = 2 \begin{pmatrix}n-1 \\2\\\end{pmatrix} = (n-1)(n-2)</script></li><li></li></ul><script type="math/tex; mode=display">C_b^{norm}(v_i) = \frac{C_b(v_i)}{2\begin{pmatrix}n-1 \\2\\\end{pmatrix}}</script></li></ul><h4 id="另一种表述"><a href="#另一种表述" class="headerlink" title="另一种表述"></a>另一种表述</h4><p>表示一般性网络的介数，定义$n<em>{st}^i$为从$s$到$t$经过$i$的测地路径数量，定义$g</em>{st}$为从$s$到$t$的测地路径总数。那么结点$i$的介数中心性可以表示为</p><script type="math/tex; mode=display">x_i = \sum_{st} \frac{n_{st}^i}{g_{st}}</script><p>介数中心性主要是度量一个结点“介于”其他结点的程度。</p><blockquote><p>一个结点的度可以很低，与其相连的结点的度也很低，与其他结点之间的平均距离很长，但仍有较高的介数。</p><p><img src="images/1548337276217.png" alt="1548337276217"></p><p>如图，结点A是网络中两个结点群组之间的桥梁，由于两个群组结点之间的任何最短路径都必须经过结点A，因此A获得了很高的介数。结点A对于其他结点间信息流动起到控制作用，此类结点在社会学文献中称为”<strong>中间人</strong>“。</p></blockquote><ul><li><p>归一化：（考虑自环）</p><ul><li>基于结点对：<script type="math/tex; mode=display">x_i= \frac{1}{n^2}\sum_{st} \frac{n_{st}^i}{g_{st}}</script></li></ul></li></ul><ul><li>基于介数最大可能值：<script type="math/tex; mode=display">x_i = \frac{1}{n^2-n+1} \sum_{st}\frac{n_{st}^i}{g_{st}}</script></li></ul><h3 id="群体中心性"><a href="#群体中心性" class="headerlink" title="群体中心性"></a>群体中心性</h3><p>考虑如何将度中心性、接近中心性以及中间中心性应用到一组结点上。</p><p>假设$S$表示需要求解群体中心性的结点集，$V-S$表示上述集合之外的结点集。</p><h4 id="群体度中心性"><a href="#群体度中心性" class="headerlink" title="群体度中心性"></a>群体度中心性</h4><p>群体度中心性是群体外部结点连接到群体内部结点的数目。形式化的定义为：</p><script type="math/tex; mode=display">C_d^{group}(S)=|\{v_i \in V-S| v_i连接到v_j \in S\}|</script><p>与度中心性相似，可以利用有向图中的入度或出度。同时该值可以进行归一化。</p><p>最理想的情况为，群体中的结点均连接到群体外的所有结点上，此时$C_d^{group}(S)$的最大值为$V-S$。使用群体度中心性除以$|V-S|$进行归一化处理。</p><h4 id="群体介数中心性"><a href="#群体介数中心性" class="headerlink" title="群体介数中心性"></a>群体介数中心性</h4><p>群体介数中心性被定义为：</p><script type="math/tex; mode=display">C_b^{group}(S) = \sum_{s\neq t, s\notin S, t \notin S}  \frac{\sigma_{st}(S)}{\sigma_{st}}</script><p>其中，$\sigma_{st}(S)$ 表示从$s$到$t$经过集合$S$中元素的最短路径的数目。</p><p>最理想的情况下，从$s$到$t$的所有的最短路径均经过集合$S$中的元素，因此，$C_b^{group}(S)$的最大值为${2\begin{pmatrix}  |V-S| \ 2\  \end{pmatrix}}$。</p><p>和介数中心性相似，使用介数中心性除以最大值进行归一化处理。</p><h4 id="群体接近中心性"><a href="#群体接近中心性" class="headerlink" title="群体接近中心性"></a>群体接近中心性</h4><p>群体接近中心性被定义为：</p><script type="math/tex; mode=display">C_c^{group}(S)=\frac{1}{\bar l_S^{group}}</script><p>其中，$\bar l <em>S^{group} = \frac{1}{|V-S|}\sum</em>{v<em>j \notin S} l</em>{S,v<em>j}$，$l</em>{S,v_j}$是群体$S$与群体之外的元素$v_j \in V-S$的最短路径的长度。该长度可以以多种方式定义，一种方法是寻找$S$中距离$v_j$最近的成员元素：</p><script type="math/tex; mode=display">l_{S,v_j} = \min_{v_i \in S}l_{v_i,v_j}</script><p>另一种是使用最大距离或者平均距离。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;度&quot;&gt;&lt;a href=&quot;#度&quot; class=&quot;headerlink&quot; title=&quot;度&quot;&gt;&lt;/a&gt;度&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;定义：&lt;strong&gt;与结点直接相连的边数目&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于无向图：&lt;/p&gt;
&lt;ul&gt;

      
    
    </summary>
    
      <category term="复杂网络" scheme="http://yoururl.com/categories/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Networks" scheme="http://yoururl.com/tags/Networks/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow环境 人脸识别 FaceNet 应用（一）:FaceNet安装与验证测试集</title>
    <link href="http://yoururl.com/2018/07/15/windows%E4%B8%8Bpython3.5%E5%AE%89%E8%A3%85facenet/"/>
    <id>http://yoururl.com/2018/07/15/windows下python3.5安装facenet/</id>
    <published>2018-07-15T02:15:33.025Z</published>
    <updated>2018-03-20T08:07:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy_z<br>文献：<a href="https://arxiv.org/abs/1503.03832" target="_blank" rel="noopener">FaceNet: A Unified Embedding for Face Recognition and Clustering</a><br><a href="https://pan.baidu.com/s/1R70SWpSmF7SoZB5vkHdfpw" target="_blank" rel="noopener">数据集及模型下载通道</a>：(密码：3wty)</p></blockquote><h2 id="一、前提条件"><a href="#一、前提条件" class="headerlink" title="一、前提条件"></a>一、前提条件</h2><h3 id="1-emsp-已安装Tensorflow"><a href="#1-emsp-已安装Tensorflow" class="headerlink" title="1.&emsp;已安装Tensorflow"></a>1.&emsp;已安装Tensorflow</h3><h3 id="2-emsp-已在安装下列包-二选一"><a href="#2-emsp-已在安装下列包-二选一" class="headerlink" title="2.&emsp;已在安装下列包(二选一):"></a>2.&emsp;已在安装下列包(二选一):</h3><p>&emsp;&emsp;a.&emsp;python下安装scipy, scikit-learn, opencv-python, h5py, matplotlib, Pillow, requests, psutil</p><p>&emsp;&emsp;b.&emsp;安装Anaconda集成环境</p><h3 id="3-emsp-已更新Sklearn至最新版本-二选一"><a href="#3-emsp-已更新Sklearn至最新版本-二选一" class="headerlink" title="3.&emsp;已更新Sklearn至最新版本(二选一):"></a>3.&emsp;已更新Sklearn至最新版本(二选一):</h3><p>&emsp;&emsp;a.&emsp;可在propmt下”conda update conda “</p><p>&emsp;&emsp;b.&emsp;直接在cmd命令行下”pip install -U scikit-learn”</p><h3 id="4-emsp-已安装git"><a href="#4-emsp-已安装git" class="headerlink" title="4.&emsp;已安装git"></a>4.&emsp;已安装git</h3><blockquote><p>备注:如果没有完成以上的第3点,之后执行align时,可能会出现”no module named facenet”,”no module named align”,”no module named scikit-learn”等情况</p></blockquote><h2 id="二、安装和配置FaceNet"><a href="#二、安装和配置FaceNet" class="headerlink" title="二、安装和配置FaceNet"></a>二、安装和配置FaceNet</h2><p>&emsp;&emsp;1.&emsp;在cmd命令行，定位到自己想下载的文件夹,用git下载FaceNet源代码工程:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive https://github.com/davidsandberg/facenet.git</span><br></pre></td></tr></table></figure><blockquote><p>建议：最好定位在&emsp;&emsp;Anaconda3\Lib\site-packages&emsp;&emsp;下安装。因为FaceNet也相当于一个python库。</p></blockquote><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/23373226.jpg" alt=""></p><p>&emsp;&emsp;2.&emsp;下载数据集LFW。LFW数据集是由美国马萨诸塞大学阿姆斯特分校计算机视觉实验室整理的。下载地址：<a href="http://vis-www.cs.umass.edu/lfw/lfw.tgz" target="_blank" rel="noopener">http://vis-www.cs.umass.edu/lfw/lfw.tgz</a>, 下载完成后，把数据解压到目录 ..facenet\data\lfw\raw  下面,新建一个空文件夹命名为”lfw_160”。可以看到数据集中每张图像的分辩率是250*250。</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/8023931.jpg" alt=""></p><p>&emsp;&emsp;3.&emsp;设置环境变量,以下方法二选一:</p><p>&emsp;&emsp;a.&emsp;在cmd命令行键入：set PYTHONPATH=…\facenet\src, 例如笔者的是:set PYTHONPATH=D:\Anaconda2\envs\py3.6\Lib\site-packages\facenet\src</p><p>&emsp;&emsp;b.&emsp;在 计算机—&gt;属性—&gt;高级系统设置—&gt;环境变量中,新建PYTHONPATH,键入 D:\Anaconda2\envs\py3.6\Lib\site-packages\facenet\src</p><p>检验:在cmd命令行下面，键入set，查看设置情况</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/66907272.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/56240084.jpg" alt=""></p><h2 id="三、图像数据预处理"><a href="#三、图像数据预处理" class="headerlink" title="三、图像数据预处理"></a>三、图像数据预处理</h2><blockquote><p>也可直接使用下载的已处理数据集</p></blockquote><p>&emsp;&emsp;我们需要将待检测所使用的数据集校准为和预训练模型所使用的数据集大小一致。</p><p>&emsp;&emsp;1.&emsp;使用&emsp;facenet\src\align\align_dataset_mtcnn.py&emsp;进行校准,校准后的图片存在&emsp;..facenet\data\lfw\lfw_160&emsp;下面。在cmd命令行 或者 对应语言版本的propmt下，定位到facenet所在位置，键入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src\align\align_dataset_mtcnn.py data/lfw/raw data/lfw/lfw_160</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;官方Wiki说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/align/align_dataset_mtcnn.py ~/datasets/casia/CASIA-maxpy-clean/ ~/datasets/casia/casia_maxpy_mtcnnpy_182 --image_size 182 --margin 44</span><br></pre></td></tr></table></figure><blockquote><p>上述命令生成的脸部缩略图是182x182像素。</p></blockquote><p>&emsp;&emsp;2.&emsp;校准后发现图像大小变了</p><h2 id="四、评估谷歌预训练模型在数据集的准确率"><a href="#四、评估谷歌预训练模型在数据集的准确率" class="headerlink" title="四、评估谷歌预训练模型在数据集的准确率"></a>四、评估谷歌预训练模型在数据集的准确率</h2><p>&emsp;&emsp;1.&emsp;下载预训练的模型。把下载的文件解压到src\models\目录下面。</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/34564036.jpg" alt=""></p><p>&emsp;&emsp;2.&emsp;程序下载好了,测试数据集LFW也有了,模型也有了,接下来就可以评估模型在数据集的准确率了。在cmd命令行或者propmt下定位到facenet文件夹下，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src\validate_on_lfw.py data\lfw\lfw_160 src\models\20170512-110547</span><br></pre></td></tr></table></figure><p>紧接着,预测中,结果如图：</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-15/47530520.jpg" alt=""></p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><h3 id="5-1-对比"><a href="#5-1-对比" class="headerlink" title="5.1 对比"></a>5.1 对比</h3><p>&emsp;&emsp;facenet可以直接比对两个人脸经过它的网络映射之后的欧氏距离，运行程序为facenet-master\src\compare.py。<br>-1、在compare.py所在目录下放入要比对的文件1.jpg和2.jpg，打开cmd命令行窗口<br>-2、cd到compare.py所在路径<br>-3、输入 python compare.py models/20170512-110547 1.png 2.png</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-16/42045957.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy_z&lt;br&gt;文献：&lt;a href=&quot;https://arxiv.org/abs/1503.03832&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FaceNet: A Unified Embedding for F
      
    
    </summary>
    
      <category term="人脸识别" scheme="http://yoururl.com/categories/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="Summary" scheme="http://yoururl.com/tags/Summary/"/>
    
      <category term="facenet" scheme="http://yoururl.com/tags/facenet/"/>
    
      <category term="face recognition" scheme="http://yoururl.com/tags/face-recognition/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter notebook: How to create a slideshow</title>
    <link href="http://yoururl.com/2018/07/15/Jupyter%20notebook%EF%BC%9AHow%20to%20create%20a%20slideshow/"/>
    <id>http://yoururl.com/2018/07/15/Jupyter notebook：How to create a slideshow/</id>
    <published>2018-07-15T02:15:32.933Z</published>
    <updated>2018-04-25T17:54:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用Jupyter-notebook-制作PPT"><a href="#利用Jupyter-notebook-制作PPT" class="headerlink" title="利用Jupyter notebook 制作PPT"></a>利用Jupyter notebook 制作PPT</h1><p>使用 Jupyter notebook 作为 slide 主要优点：  </p><ul><li>运行 notebook 可以播放幻灯片  </li><li>导出 slides.html 格式的幻灯片，方便在浏览器打开播放</li></ul><h2 id="工具依赖"><a href="#工具依赖" class="headerlink" title="工具依赖"></a>工具依赖</h2><ul><li>RISE</li><li>reveal.js </li></ul><h3 id="RISE"><a href="#RISE" class="headerlink" title="RISE"></a>RISE</h3><p>RISE allows you to instantly turn your Jupyter Notebooks into a slideshow. No out-of-band conversion is needed, switch from jupyter notebook to a live reveal.js-based slideshow in a single keystroke, and back.</p><h4 id="Install-RISE"><a href="#Install-RISE" class="headerlink" title="Install RISE"></a>Install RISE</h4><h4 id="Option-1-Using-conda"><a href="#Option-1-Using-conda" class="headerlink" title="Option 1 - Using conda :"></a>Option 1 - Using conda :</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c damianavila82 rise</span><br></pre></td></tr></table></figure><h4 id="Option-2-Using-pip"><a href="#Option-2-Using-pip" class="headerlink" title="Option 2 - Using pip::"></a>Option 2 - Using pip::</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install RISE</span><br></pre></td></tr></table></figure><p>and then two more steps to install the JS and CSS in the proper places:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-nbextension install rise --py --sys-prefix</span><br></pre></td></tr></table></figure><p>and enable the nbextension:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-nbextension enable rise --py --sys-prefix</span><br></pre></td></tr></table></figure><h3 id="reveal-js"><a href="#reveal-js" class="headerlink" title="reveal.js"></a>reveal.js</h3><p>A framework for easily creating beautiful presentations using HTML. <a href="https://revealjs.com/#/" target="_blank" rel="noopener">Check out the live demo.</a></p><p>reveal.js comes with a broad range of features including nested slides, Markdown contents, PDF export, speaker notes and a JavaScript API. There’s also a fully featured visual editor and platform for sharing reveal.js presentations at slides.com.  </p><p>Reveal.js 是一个使用 HTML 语言制作演示文稿的 Web 框架，支持插入多种格式的内容，并以类似 PPT 的形式呈现。  </p><p>Reveal.js 具有许多优势：</p><ul><li>制作灵活、不限应用，只需修改 HTML 文件</li><li>发布灵活、不限平台，只需打开 HTML 文件</li><li>丰富的特性，支持过渡动画、代码高亮、视频背景、Markdown 语法、导出 PDF 等</li><li>极度轻量，占用空间和内存少</li></ul><p>配置流程：  </p><ul><li>在 notebook 文件目录（包含 .ipnb 文件）下， clone <a href="https://github.com/hakimel/reveal.js.git" target="_blank" rel="noopener">reveal.js</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/hakimel/reveal.js.git</span><br></pre></td></tr></table></figure><h2 id="slide-设置"><a href="#slide-设置" class="headerlink" title="slide 设置"></a>slide 设置</h2><p>这里有一个幻灯片<a href="http://www.slideviper.oquanta.info/tutorial/slideshow_tutorial_slides.html#/" target="_blank" rel="noopener">示例</a>供参考，其制作风格简洁明晰。</p><p>那么如何用 Jupyter Notebook 制作幻灯片呢？<br>首先在 notebook 的菜单栏选择 View &gt; Cell Toolbar &gt; Slideshow，这时在文档的每个单元右上角显示了 Slide Type 的选项。通过设置不同的类型，来控制幻灯片的格式。有如下5中类型：</p><ul><li>Slide：主页面，通过按左右方向键进行切换。</li><li>Sub-Slide：副页面，通过按上下方向键进行切换。</li><li>Fragment：一开始是隐藏的，按空格键或方向键后显示，实现动态效果。</li><li>Skip：在幻灯片中不显示的单元。</li><li>Notes：作为演讲者的备忘笔记，也不在幻灯片中显示。</li></ul><h2 id="生成幻灯片"><a href="#生成幻灯片" class="headerlink" title="生成幻灯片"></a>生成幻灯片</h2><p>在notebook中设置cell 的slide属性，确认后保存，例如 notebook.ipynb<br>使用nbconvert 来将notebook文件转换为HTML  </p><pre><code class="lang-python">jupyter nbconvert --to slides notebook.ipynb --reveal-prefix=reveal.js</code></pre><p>生成文件： notebook.slides.html , 直接用浏览器打开即可播放幻灯片</p><p>有时候不想要input cell显示在slide上面，这个时候可以使用下面的设置：  </p><pre><code class="lang-python">jupyter nbconvert RainStromNetworkAnalysis.ipynb --to slides --TemplateExporter.exclude_input=True</code></pre><p>同样的使用下面的命令虽然可以隐藏input cell但是不能生成slide只能生成html文件：  </p><pre><code class="lang-python">jupyter nbconvert --template=nbextensions --to=slides RainStromNetworkAnalysis.ipynb</code></pre><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>Reveal.js 支持 Markdown 语法，我们得以直接在 Markdown 编辑器里做 PPT。以上只是制作了最简单的 PPT，我们后续还可以添加各种动画效果、背景、图表等内容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;利用Jupyter-notebook-制作PPT&quot;&gt;&lt;a href=&quot;#利用Jupyter-notebook-制作PPT&quot; class=&quot;headerlink&quot; title=&quot;利用Jupyter notebook 制作PPT&quot;&gt;&lt;/a&gt;利用Jupyter note
      
    
    </summary>
    
      <category term="Jupyter" scheme="http://yoururl.com/categories/Jupyter/"/>
    
    
      <category term="Jupyter" scheme="http://yoururl.com/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow环境 人脸识别 FaceNet 应用（二）:FaceNet官方WiKi解读</title>
    <link href="http://yoururl.com/2018/07/15/FaceNet%20%E5%AE%98%E6%96%B9WiKi%E8%A7%A3%E8%AF%BB/"/>
    <id>http://yoururl.com/2018/07/15/FaceNet 官方WiKi解读/</id>
    <published>2018-07-15T02:15:32.918Z</published>
    <updated>2018-03-23T08:27:53.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy_z<br>文献：<a href="https://github.com/davidsandberg/facenet/wiki" target="_blank" rel="noopener">官方WiKi</a></p></blockquote><h2 id="一、分类器训练"><a href="#一、分类器训练" class="headerlink" title="一、分类器训练"></a>一、分类器训练</h2><h3 id="1-1-运行-train-softmax-py-文件训练"><a href="#1-1-运行-train-softmax-py-文件训练" class="headerlink" title="1.1 运行 train_softmax.py 文件训练"></a>1.1 运行 train_softmax.py 文件训练</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">python src/train_softmax.py</span><br><span class="line">--logs_base_dir ~/logs/facenet/</span><br><span class="line">--models_base_dir ~/models/facenet/</span><br><span class="line">--data_dir ~/datasets/casia/casia_maxpy_mtcnnalign_182</span><br><span class="line">--image_size 160</span><br><span class="line">--model_def models.inception_resnet_v1</span><br><span class="line">--lfw_dir /home/david/datasets/lfw/lfw_mtcnnalign_160</span><br><span class="line">--optimizer RMSPROP</span><br><span class="line">--learning_rate -1</span><br><span class="line">--max_nrof_epochs 80</span><br><span class="line">--keep_probability 0.8</span><br><span class="line">--random_crop</span><br><span class="line">--random_flip</span><br><span class="line">--learning_rate_schedule_file data/learning_rate_schedule_classifier_casia.txt</span><br><span class="line">--weight_decay 5e-5</span><br><span class="line">--center_loss_factor 1e-2</span><br><span class="line">--center_loss_alfa 0.9</span><br></pre></td></tr></table></figure><ul><li><strong>log_base_dir</strong>:<br><strong>models_base_dir</strong>:<br>训练开始时，以数据/时间训练开始的训练会话的子目录以yyyymmdd-hhmm的格式在以上两个目录中创建。  </li><li><strong>data_dir</strong>：  用于指出训练数据集的位置，可以通过用冒号分隔路径来使用几个数据集的联合。<br>model_def： 给出推理网络的描述符，上述样例中  models.inception_resnet_v1 指向models包中的<br>inception_resnet_v1模块。 该模块定义一个函数 inference(images, …)，images是输入图像的占位符(Inception-ResNet-v1的尺寸&lt;?, 160,160,3&gt;),并返回一个embeddings变量的引用。  </li><li><strong>lfw_dir</strong>：如果将参数lfw_dir设置为指向LFW数据集的基本目录，那么每1000个批次将在LFW上对该模型进行评估。有关如何在LFW上评估现有模型的信息，请参阅 Validate-on-LFW 页面。 如果在训练期间不需要对LFW进行评估，则可以将lfw_dir参数留空。 但请注意，此处使用的LFW数据集应与训练数据集一致。  </li><li><strong>max_nrof_epochs</strong>：最大训练周期。  </li><li><strong>learning_rate_schedule_file</strong>：为了改善最终模型的性能，当训练开始收敛时，学习速率降低10倍。 这是通过在参数learning_rate_schedule_file指向的文本文件中定义的学习速率时间表来完成的，同时还将参数learning_rate设置为负值。 为了简单起见，本例中data / learning_rate_schedule_classifier_casia.txt中使用的学习率也包括在库中。</li></ul><blockquote><p>注：train_tripletloss.py和train_softmax.py的区别：这是作者对论文做出的一个延伸，除了使用facenet里提到的train_tripletloss三元组损失函数来训练，还实现了用softmax的训练方法来训练。当然，在样本量很小的情况下，用softmax训练会更容易收敛。但是，当训练集中包含大量的不同个体(超过10万)时，最后一层的softmax输出数量就会变得非常大，但是使用train_tripletloss的训练仍然可以正常工作。</p></blockquote><h3 id="1-2-运行-train-softmax-py-文件训练"><a href="#1-2-运行-train-softmax-py-文件训练" class="headerlink" title="1.2 运行 train_softmax.py 文件训练"></a>1.2 运行 train_softmax.py 文件训练</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">python src/train_tripletloss.py</span><br><span class="line">--logs_base_dir ~/logs/facenet/</span><br><span class="line">--models_base_dir ~/models/facenet/</span><br><span class="line">--data_dir ~/datasets/casia/casia_maxpy_mtcnnalign_182_160</span><br><span class="line">--image_size 160</span><br><span class="line">--model_def models.inception_resnet_v1</span><br><span class="line">--lfw_dir ~/datasets/lfw/lfw_mtcnnalign_160</span><br><span class="line">--optimizer RMSPROP</span><br><span class="line">--learning_rate 0.01</span><br><span class="line">--weight_decay 1e-4</span><br><span class="line">--max_nrof_epochs 500</span><br></pre></td></tr></table></figure><h2 id="二、可视化TensorBoard"><a href="#二、可视化TensorBoard" class="headerlink" title="二、可视化TensorBoard"></a>二、可视化TensorBoard</h2><p>&emsp;&emsp;监视训练过程，使用TensorBoard:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir=~/logs/facenet --port 6006</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;打开浏览器：<a href="http://localhost:6006/" target="_blank" rel="noopener">http://localhost:6006/</a></p><h2 id="三、用自己的图像训练分类器"><a href="#三、用自己的图像训练分类器" class="headerlink" title="三、用自己的图像训练分类器"></a>三、用自己的图像训练分类器</h2><h3 id="3-1-在LFW上训练分类器"><a href="#3-1-在LFW上训练分类器" class="headerlink" title="3.1 在LFW上训练分类器"></a>3.1 在LFW上训练分类器</h3><p>&emsp;&emsp;对于这个实验，我们使用LFW图像的子集来训练分类器。 LFW数据集分为训练和测试集。 然后加载预训练模型，然后使用此模型为选定图像生成特征。 预训练模型通常在更大的数据集上进行训练以提供良好的性能（本例中为MS-Celeb-1M数据集的一个子集）。</p><ul><li>将数据集分解为训练和测试集</li><li>加载预训练模型进行特征提取</li><li>计算数据集中图像的嵌入</li><li><p>模式= TRAIN：</p><ul><li>使用来自数据集的训练部分的嵌入来训练分类器  </li><li>将训练好的分类模型保存为python pickle</li></ul></li><li><p>模式= CLASSIFY：</p><ul><li>加载分类模型</li><li>使用来自数据集测试部分的嵌入来测试分类器  </li></ul></li></ul><blockquote><p>classifier.py定义参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">def parse_arguments(argv):</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">    parser.add_argument(&apos;mode&apos;, type=str, choices=[&apos;TRAIN&apos;, &apos;CLASSIFY&apos;],</span><br><span class="line">        help=&apos;Indicates if a new classifier should be trained or a classification &apos; +</span><br><span class="line">        &apos;model should be used for classification&apos;, default=&apos;CLASSIFY&apos;)</span><br><span class="line">    parser.add_argument(&apos;data_dir&apos;, type=str,</span><br><span class="line">        help=&apos;Path to the data directory containing aligned LFW face patches.&apos;)</span><br><span class="line">    parser.add_argument(&apos;model&apos;, type=str,</span><br><span class="line">        help=&apos;Could be either a directory containing the meta_file and ckpt_file or a model protobuf (.pb) file&apos;)</span><br><span class="line">    parser.add_argument(&apos;classifier_filename&apos;,</span><br><span class="line">        help=&apos;Classifier model file name as a pickle (.pkl) file. &apos; +</span><br><span class="line">        &apos;For training this is the output and for classification this is an input.&apos;)</span><br><span class="line">    parser.add_argument(&apos;--use_split_dataset&apos;,</span><br><span class="line">        help=&apos;Indicates that the dataset specified by data_dir should be split into a training and test set. &apos; +  </span><br><span class="line">        &apos;Otherwise a separate test set can be specified using the test_data_dir option.&apos;, action=&apos;store_true&apos;)</span><br><span class="line">    parser.add_argument(&apos;--test_data_dir&apos;, type=str,</span><br><span class="line">        help=&apos;Path to the test data directory containing aligned images used for testing.&apos;)</span><br><span class="line">    parser.add_argument(&apos;--batch_size&apos;, type=int,</span><br><span class="line">        help=&apos;Number of images to process in a batch.&apos;, default=90)</span><br><span class="line">    parser.add_argument(&apos;--image_size&apos;, type=int,</span><br><span class="line">        help=&apos;Image size (height, width) in pixels.&apos;, default=160)</span><br><span class="line">    parser.add_argument(&apos;--seed&apos;, type=int,</span><br><span class="line">        help=&apos;Random seed.&apos;, default=666)</span><br><span class="line">    parser.add_argument(&apos;--min_nrof_images_per_class&apos;, type=int,</span><br><span class="line">        help=&apos;Only include classes with at least this number of images in the dataset&apos;, default=20)</span><br><span class="line">    parser.add_argument(&apos;--nrof_train_images_per_class&apos;, type=int,</span><br><span class="line">        help=&apos;Use this number of images from each class for training and the rest for testing&apos;, default=10)</span><br><span class="line"></span><br><span class="line">    return parser.parse_args(argv)</span><br></pre></td></tr></table></figure></p></blockquote><ul><li><strong>mode</strong>：  指示训练新分类器还是进行分类测试集。’TRAIN’,    ‘CLASSIFY’</li><li><strong>data_dir</strong>：  包含对齐的LFW面部补丁的数据目录路径。</li><li><strong>model</strong>：  可能是包含meta_file和ckpt_file或模型protobuf(.pb)文件的目录</li><li><strong>classifier_filename</strong>：  分类器模型文件名称作pickle（.pkl）文件，对于训练过程，这是输出；对于分类过程，这是输入。</li><li><strong>use_split_dataset</strong>：  指示由data_dir指定的数据集应该分为训练集和测试集。 否则可以使用test_data_dir选项指定单独的测试集。</li><li><strong>test_data_dir</strong>：  包含用于测试的对齐图像的测试数据目录的路径。</li><li><strong>batch_size</strong>：  一个批次的图像运行数量。</li><li><strong>image_size</strong> ：  图像的像素尺寸。</li><li><strong>seed</strong>:   随机seed。</li><li><strong>min_nrof_images_per_class</strong>：  仅包含数据集中至少包含这些数量的图像的类。</li><li><strong>nrof_train_images_per_class</strong>：  从每个类中使用这个数量的图像进行训练，其余的进行测试。</li></ul><p>&emsp;&emsp;在数据集的训练集部分训练分类器的步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py</span><br><span class="line">TRAIN</span><br><span class="line">data/lfw/lfw_align_mtcnnpy_160/</span><br><span class="line">src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">src/models/lfw_classifier.pkl</span><br><span class="line">--batch_size 1000</span><br><span class="line">--min_nrof_images_per_class 40</span><br><span class="line">--nrof_train_images_per_class 35</span><br><span class="line">--use_split_dataset</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py TRAIN data/lfw/lfw_align_mtcnnpy_160/ src/models/20170512-110547/20170512-110547.pb src/models/lfw_classifier.pkl --batch_size 1000 --min_nrof_images_per_class 40 --nrof_train_images_per_class 35 --use_split_dataset</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;训练输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Number of classes: 19</span><br><span class="line">Number of images: 665</span><br><span class="line">Loading feature extraction model</span><br><span class="line">Model filename: src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">Calculating features for images</span><br><span class="line">Training classifier</span><br><span class="line">Saved classifier model to file &quot;src/models/lfw_classifier.pkl&quot;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;训练好的分类器可以稍后用于使用测试集进行分类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py</span><br><span class="line">CLASSIFY</span><br><span class="line">data/lfw/lfw_align_mtcnnpy_160/</span><br><span class="line">src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">src/models/lfw_classifier.pkl</span><br><span class="line">--batch_size 1000</span><br><span class="line">--min_nrof_images_per_class 40</span><br><span class="line">--nrof_train_images_per_class 35</span><br><span class="line">--use_split_dataset</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py CLASSIFY data/lfw/lfw_align_mtcnnpy_160/ src/models/20170512-110547/20170512-110547.pb src/models/lfw_classifier.pkl --batch_size 1000 --min_nrof_images_per_class 40 --nrof_train_images_per_class 35 --use_split_dataset</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;单独指定测试集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python src/classifier.py CLASSIFY data/lfw/test_lfw src/models/20170512-110547/20170512-110547.pb src/models/lfw_classifier.pkl --batch_size 1000 --min_nrof_images_per_class 40 --nrof_train_images_per_class 35 --test_data_dir data/lfw/test_lfw</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里使用数据集的测试集部分进行分类，并显示分类结果和分类概率。 该子集的分类准确度为〜0.98。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Number of classes: 19</span><br><span class="line">Number of images: 1202</span><br><span class="line">Loading feature extraction model</span><br><span class="line">Model filename: src/models/20170512-110547/20170512-110547.pb</span><br><span class="line">Calculating features for images</span><br><span class="line">Testing classifier</span><br><span class="line">Loaded classifier model from file &quot;src/models/lfw_classifier.pkl&quot;</span><br><span class="line">   0  Ariel Sharon: 0.712</span><br><span class="line">   1  Ariel Sharon: 0.771</span><br><span class="line">   2  Ariel Sharon: 0.807</span><br><span class="line">   3  Ariel Sharon: 0.785</span><br><span class="line">   4  Ariel Sharon: 0.750</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">1197  Vladimir Putin: 0.536</span><br><span class="line">1198  Vladimir Putin: 0.723</span><br><span class="line">1199  Vladimir Putin: 0.715</span><br><span class="line">1200  Vladimir Putin: 0.663</span><br><span class="line">1201  Vladimir Putin: 0.732</span><br><span class="line">Accuracy: 0.999</span><br></pre></td></tr></table></figure></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-21/53475149.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-21/76473615.jpg" alt=""></p><h2 id="四、基于mtcnn与facenet的人脸识别（单张图像识别分类）"><a href="#四、基于mtcnn与facenet的人脸识别（单张图像识别分类）" class="headerlink" title="四、基于mtcnn与facenet的人脸识别（单张图像识别分类）"></a>四、基于mtcnn与facenet的人脸识别（单张图像识别分类）</h2><p>&emsp;&emsp;代码：facenet/contributed/predict.py  </p><p>&emsp;&emsp;主要功能：</p><ul><li><p>① 使用mtcnn进行人脸检测并对齐与裁剪</p></li><li><p>② 对裁剪的人脸使用facenet进行embedding</p></li><li><p>③ 执行predict.py进行人脸识别（需要训练好的svm模型）</p></li></ul><p>&emsp;&emsp;参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">def parse_arguments(argv):</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(&apos;image_files&apos;, type=str, nargs=&apos;+&apos;, help=&apos;Path(s) of the image(s)&apos;)</span><br><span class="line">    parser.add_argument(&apos;model&apos;, type=str,</span><br><span class="line">        help=&apos;Could be either a directory containing the meta_file and ckpt_file or a model protobuf (.pb) file&apos;)</span><br><span class="line">    parser.add_argument(&apos;classifier_filename&apos;,</span><br><span class="line">        help=&apos;Classifier model file name as a pickle (.pkl) file. &apos; +</span><br><span class="line">        &apos;For training this is the output and for classification this is an input.&apos;)</span><br><span class="line">    parser.add_argument(&apos;--image_size&apos;, type=int,</span><br><span class="line">        help=&apos;Image size (height, width) in pixels.&apos;, default=160)</span><br><span class="line">    parser.add_argument(&apos;--seed&apos;, type=int,</span><br><span class="line">        help=&apos;Random seed.&apos;, default=666)</span><br><span class="line">    parser.add_argument(&apos;--margin&apos;, type=int,</span><br><span class="line">        help=&apos;Margin for the crop around the bounding box (height, width) in pixels.&apos;, default=44)</span><br><span class="line">    parser.add_argument(&apos;--gpu_memory_fraction&apos;, type=float,</span><br><span class="line">        help=&apos;Upper bound on the amount of GPU memory that will be used by the process.&apos;, default=1.0)</span><br><span class="line">    return parser.parse_args(argv)</span><br></pre></td></tr></table></figure></p><ul><li><strong>image_files</strong>： 被识别图像路径</li><li><strong>model</strong>：包含meta_file和ckpt_file或模型protobuf（.pb）文件的目录</li><li><strong>classifier_filename</strong>：分类器模型文件名称作为pickle（.pkl）文件</li></ul><p>&emsp;&emsp;测试：用三中生成的lfw_classifier.pkl作为分类器模型进行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python predict.py d:/Anaconda3/Lib/site-packages/facenet/data/images/3.png D:/Anaconda3/Lib/site-packages/facenet/src/models/20170512-110547 D:/Anaconda3/Lib/site-packages/facenet/src/models/lfw_classifier.pkl</span><br></pre></td></tr></table></figure><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-22/3119407.jpg" alt=""></p><p>python contributed/predict.py data/images/2.png src/models/20170512-110547 src/models/lfw_classifier_whole.pkl</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy_z&lt;br&gt;文献：&lt;a href=&quot;https://github.com/davidsandberg/facenet/wiki&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方WiKi&lt;/a&gt;&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="人脸识别" scheme="http://yoururl.com/categories/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="Summary" scheme="http://yoururl.com/tags/Summary/"/>
    
      <category term="facenet" scheme="http://yoururl.com/tags/facenet/"/>
    
      <category term="face recognition" scheme="http://yoururl.com/tags/face-recognition/"/>
    
  </entry>
  
  <entry>
    <title>DeepFool</title>
    <link href="http://yoururl.com/2018/07/15/Deep%20Fool/"/>
    <id>http://yoururl.com/2018/07/15/Deep Fool/</id>
    <published>2018-07-15T02:15:32.911Z</published>
    <updated>2018-03-14T07:20:13.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy<em>z<br>翻译文献：<a href="https://arxiv.org/abs/1511.04599" target="_blank" rel="noopener">DeepFool: a simple and accurate method to fool deep neural networks</a><br>^</em>^: 红色小字为作者自己的小白理解，如有错误，请谅解。欢迎纠正！</p></blockquote><p><sup><a href="#fn__^" id="reffn__^">_^</a></sup></p><h1 id="符号说明"><a href="#符号说明" class="headerlink" title="符号说明"></a>符号说明</h1><div class="table-container"><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>$x$</td><td>原始图像</td></tr><tr><td>$r$</td><td>扰动</td></tr><tr><td>$\hat{k}(x)$</td><td>预测标签</td></tr><tr><td>$Δ(x;\hat{k})$</td><td>$\hat{k}$ 在点 $x$ 处的鲁棒性</td></tr><tr><td>$\mathbb{E}_x$</td><td>数据分布期望</td></tr></tbody></table></div><p>&emsp;&emsp;对于给定分类器，定义对抗扰动:</p><script type="math/tex; mode=display">∆(x;\hat{k}) := \min_r ||r||_2 \;\; s.t.\; \hat{k}(x + r) ≠ \hat{k}(x),\tag{1}</script><p>&emsp;&emsp;分类器的鲁棒性定义为：</p><script type="math/tex; mode=display">ρ_{adv}(\hat{k}) = \mathbb{E}_x \,\frac{∆(x;\hat{k})}{ ||x||_2},\tag{2}</script><h1 id="对于二分类器的DeepFool"><a href="#对于二分类器的DeepFool" class="headerlink" title="对于二分类器的DeepFool"></a>对于二分类器的DeepFool</h1><p>&emsp;&emsp;多分类器可以看作是二值分类器的集合，因此先研究二分类器算法。</p><ul><li><p>我们假设 $\hat{k}(x) = sign(f(x))$ ，其中 $f$ 是一个任意的标量值图像分类函数，$f:\mathbb{R}^n \rightarrow \mathbb{R}$ 。<br>用 ${\scr F}=^\Delta={x:f(x)=0}$ 表示 $f$ 的零水平集。<br>首先分析当 $f$ 是一个<a href="https://baike.baidu.com/item/%E4%BB%BF%E5%B0%84%E5%87%BD%E6%95%B0/9276178?fr=aladdin" target="_blank" rel="noopener">仿射</a>分类器 $f(x)=w^Tx+b$ ，然后推导出一般算法，该算法可应用于任何可微二值分类器 $f$。</p></li><li><p>当 $f$ 是仿射的分类器时，$f$ 在 $x_0$ 点处的鲁棒性: $\Delta (x_0;f)$ ，等于从 $x_0$ 到分离仿射超平面 ${\scr F}={x:w^Tx+b=0}$ 的距离（见图2），</p></li></ul><blockquote><p>之后，我们通过 $f$ 或其相应的离散映射 $\hat{k}$ 来引用分类器。 因此，$ρ<em>{adv}(\hat{k})=ρ</em>{adv}(f) 和 Δ(x; \hat{k})=Δ(x; f)$。</p></blockquote><center><font color="#0099ff" size="2" face="黑体">图2：线性二值分类器的对抗样本 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/76583305.jpg" alt=""></p><ul><li>改变分类器决策的最小扰动对应于 $x_0$ 到 ${\scr F}$ 上的正交投影。  由下列封闭式公式给出：<script type="math/tex; mode=display">r_∗(x_0) := arg \min ||r||_2   \;\;s.t. \;sign(f(x_0 + r))  \not= sign(f(x_0))= −\frac{f(x_0)}{\sideset{}{^2_2}{||w||}}w,\tag{3}</script></li></ul><blockquote><font color="#FF0000" size="2" face="黑体">[^_^]:推导参考支持向量机概念。</font></blockquote><ul><li>现在假设 $f$ 是一般的二元可微分类器，我们采用迭代过程来估计鲁棒性 $\Delta (x_0;f)$ ，具体而言，在每次迭代中，$f$ 围绕当前点 $x_i$线性化，并且线性化分类器的最小扰动被计算为:<script type="math/tex; mode=display">arg \min_{r_i} ||r_i||_2 \;\;s.t.\; f(x_i) + ∇f(x_i)^Tr_i = 0,\tag{4}</script></li></ul><blockquote><font color="#FF0000" size="2" face="黑体">[^_^]:梯度方向即为垂直超平面的方向，也就是超平面的法线上方向，可以最快达到分类边界。</font></blockquote><ul><li>算法的迭代 $i$ 中的扰动 $r<em>i$ 是使用方程（3）中的封闭形式解来计算的，并且在下一个迭代 $x</em>{i + 1}$ 被更新。当 $x_{i + 1}$ 改变分类器的符号时，该算法停止。</li></ul><center><font color="#0099ff" size="2" face="黑体">算法1：二值分类器的DeepFool算法 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/47575515.jpg" alt=""></p><center><font color="#0099ff" size="2" face="黑体">图3：算法1的几何图示 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/85167736.jpg" alt=""></p><blockquote><p>  当 $n=2$ 时，假设 $x_0∈ \mathbb{R}^n$ 。 绿色平面是 $x→f(x_0)+∇f(x_0)^T(x−x_0)$ 的图形，与分类器函数 $x→f(x)$ 相切。橙色线表示 $f(x_0) + ∇f(x_0)^T(x-x_0) = 0$ ， $x_0$ 投影到 $\mathbb{R}^n$ 的橙色超平面进一步得到 $x_1$ 。</p></blockquote><p>&emsp;&emsp;以上算法经常能收敛到零水平集 ${\scr F}$ 。但为了到达分类边界的另一边，最后的扰动向量 $\hat{r}$ 需要乘 $1+η$，且 $η≪1$ 。在后续实验中 $η=0.02$ 。</p><h1 id="对于多分类器的DeepFool"><a href="#对于多分类器的DeepFool" class="headerlink" title="对于多分类器的DeepFool"></a>对于多分类器的DeepFool</h1><p>&emsp;&emsp;将DeepFool方法推广到多分类器。多分类器最常用的方法是 <a href="http://blog.csdn.net/u013082989/article/details/53001746" target="_blank" rel="noopener">one-vs-all</a>(一对多)。因此基于该分类方案提出方法。</p><ul><li>在该方案中，分类器有 $c$ 类输出， 因此分类器能被定义为 $f: \mathbb{R}^n \rightarrow \mathbb{R}^c$  。分类是通过以下映射完成的：<script type="math/tex; mode=display">\hat{k}(x)=arg\max_k \;f_k(x),\tag{5}</script>&emsp;&emsp;&emsp; $f_k(x)$ 是 $f(x)$ 对应于第 $k$ 类的输出。</li></ul><p>&emsp;&emsp;与二分类情况类似，我们首先提出了线性情况的建议方法，然后将其推广到其他分类器。</p><h2 id="仿射多分类器"><a href="#仿射多分类器" class="headerlink" title="仿射多分类器"></a>仿射多分类器</h2><ul><li>$f(x)$ 是仿射分类器，$f(x)=W^T+b$ 。映射 $\hat{k}$ 是“one-vs-all”分类方案的结果。欺骗分类器的最小扰动表示如下：<script type="math/tex; mode=display">arg \min_r||r||_2 \;\;s.t.\;∃k : \sideset{}{^T_k}w(x_0+r)+b_k ≥ \sideset{}{^T_{\hat{k}(x_0)}}w(x_0 + r)+b_{\hat{k}(x_0)},\tag{6}</script></li></ul><blockquote><font color="#FF0000" size="2" face="黑体">[^_^]:计算最小扰动，首先要保证分类与原始点产生变化(即扰动导致分类结果变化)，那么约束条件就是，存在一类，使得这一类的分类置信度大于 原始预测的置信度</font></blockquote><p>&emsp;&emsp;&emsp; $w_k$ 是 $W$ 的第 $k$ 列。从几何上看，上述问题对应于计算 $x_0$ 和 凸多面体 $P$ 的补集的距离：</p><script type="math/tex; mode=display">P=\bigcap_{k=1}^{c}\{x:f_{\hat{k}(x_0)}(x)≥ f_k(x)\},\tag{7}</script><p>&emsp;&emsp;&emsp;其中， $x_0$ 落在 $P$ 内部。距离用 $dist(x_0,P^c)$ 表示。 多面体 $P$ 定义了 $f$ 输出标签 $\hat{k}(x_0)$ 的范围。 设置如图4所示：</p><center><font color="#0099ff" size="2" face="黑体">图4：仿射多分类器输出标签空间区域 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/35279198.jpg" alt=""></p><blockquote><p>若 $x_0$ 属于类别4，令 ${\scr F}_k={x:f_k(x)-f_4(x)=0}$ 。这些超平面用实线表示，P的边界用绿色虚线表示。</p></blockquote><ul><li>定义 $\hat{l}(x_0)$ 为离 $P$ 的边界最近的超平面(如图4中的 $\hat{l}(x_0)=3$)。 $\hat{l}(x_0)$ 计算如下：</li></ul><script type="math/tex; mode=display">\hat{l}(x_0)=arg \min_{k\not={\hat{k}(x_0)}}\frac{|f_k(x_0)-f_{\hat{k}(x_0)}(x_0)|}{||w_k-w_{\hat{k}(x_0)}||_2}.\tag{8}</script><p>&emsp;&emsp;&emsp;最小扰动 $r_*(x_0)$ 是把 $x_0$ 投影到超平面的向量：</p><script type="math/tex; mode=display">r_*(x_0)=\frac{|f_{\hat{l}(x_0)}(x_0)-f_{\hat{k}(x_0)}(x_0)|}{\sideset{}{^2_2}{||w_{\hat{l}(x_0)}-w_{\hat{k}(x_0)}||}}(w_{\hat{l}(x_0)}-w_{\hat{k}(x_0)}).\tag{9}</script><p>&emsp;&emsp;&emsp;换句话说，我们在 $P$ 的面上发现了 $x_0$ 的最近投影。</p><h2 id="一般多分类器"><a href="#一般多分类器" class="headerlink" title="一般多分类器"></a>一般多分类器</h2><p>&emsp;&emsp;现在将DeepFool算法扩展到一般的多分类器。</p><ul><li>对于一般的非线性分类器，式(7)中的集合 $P$ 描述的分类器输出标签 $\hat{k}(x_0)$ 的区域空间不再是一个多面体。在二分类情况下解释迭代的线性过程，我们用一个多面体 $\tilde{P}_i$ 在迭代次数 $i$ 下近似集合 $P$ 。<script type="math/tex; mode=display">\tilde{P}_i= \bigcap_{k=1}^{c}\{x:f_k(x_i)-f_{\hat{k}(x_0)}(x_i) + ∇f_k(x_i)^Tx-∇f_{\hat{k}(x_0)}(x_i)^Tx≤0\}.\tag{10}</script></li></ul><center><font color="#0099ff" size="2" face="黑体">图5：非线性多分类器输出标签区域空间 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/81096955.jpg" alt=""></p><ul><li><p>随后用 $dist(x_i,\sideset{}{_i^c}{\tilde{P}})$ 在迭代次数 $i$ 下近似 $x_i$ 到 $P$ 补集的距离。算法的每次迭代中，到达多面体 $\tilde{P}_i$ 边界的扰动向量被计算，当前预测更新。</p><p>该算法在算法2中给出。应该注意，所提出的算法以<a href="http://www.52ml.net/10359.html" target="_blank" rel="noopener">贪心</a>方式运行，并且不能保证收敛于(1)中的最佳扰动。 然而，我们在实践中观察到，我们的算法产生非常小的扰动，这被认为是最小扰动的良好近似。</p></li></ul><center><font color="#0099ff" size="2" face="黑体">算法2：多分类器的DeepFool算法</font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/66140912.jpg" alt=""></p><p>&emsp;&emsp;应该指出的是，DeepFool的优化策略与现有的优化技术密切相关。 在二分类情况下，它可以看作牛顿迭代算法，用于在欠定情况下找到非线性方程组的根。 这种算法被称为正常流量法。 我们在二分类情况下的算法可以被看作是梯度下降算法，具有在每次迭代时自动选择的自适应步长。 算法2中的线性化也类似于序列凸规划，其中约束在每一步被线性化。</p><h2 id="拓展到-L-p-范数"><a href="#拓展到-L-p-范数" class="headerlink" title="拓展到 $L_p$ 范数"></a>拓展到 $L_p$ 范数</h2><p>&emsp;&emsp;我们已经用 $L_2$ 范数计算了扰动。我们的框架不限制选择，提出的算法可以调节，用任何 $L_p$ 范数  $(p∈[1,∞])$ 来寻找最小对抗扰动。</p><ul><li>为此，算法2中第10行和第11行的更新步骤必须分别由以下更新代替：</li></ul><script type="math/tex; mode=display">\hat{l}\leftarrow arg\min_{k\not=\hat{k}(x_0)}\frac{|f'_k|}{||w'_k||_q},\tag{11}</script><script type="math/tex; mode=display">r_i\leftarrow\frac{|f'_{\hat{l}}|}{\sideset{}{^q_q}{||w'_{\hat{l}}||}}|w'_{\hat{l}}|^{q-1}\bigodot sign(w'_{\hat{l}}),\tag{12}</script><p>&emsp;&emsp;&emsp; $\bigodot$ 是逐点乘积，$q=\frac{p}{p-1}$ 。当 $p=∞$ 时(即 $l_∞$ 范数)， 更新步骤变成：</p><script type="math/tex; mode=display">\hat{l}\leftarrow arg\min_{k\not=\hat{k}(x_0)}\frac{|f'_k|}{||w'_k||_1},\tag{13}</script><script type="math/tex; mode=display">r_i\leftarrow\frac{|f'_{\hat{l}}|}{||w'_{\hat{l}}||_1} sign(w'_{\hat{l}}),\tag{14}</script><h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>&emsp;&emsp;我们现在在应用于MNIST，CIFAR-10和ImageNet图像分类数据集的深度卷积神经网络架构上测试我们的DeepFool算法。 我们考虑以下深度神经网络架构：</p><ul><li><p><strong>MNIST</strong>：一个双层全连接网络和一个双层LeNet卷积神经网络结构。 这两个网络都是使用MatConvNet包通过SGD进行训练。</p></li><li><p><strong>CIFAR-10</strong>：我们训练了三层LeNet架构，以及网络网络（NIN）架构。</p></li><li><p><strong>ILSVRC 2012</strong>：我们使用了CaffeNet 和GoogLeNet预训练模型</p></li></ul><p>&emsp;&emsp;为了评估分类器 $f$ 的对抗扰动的鲁棒性， 定义平均鲁棒性 $\hat{ρ}_{adv}(f)$ :</p><script type="math/tex; mode=display">\hat{ρ}_{adv}(f)=\frac{1}{|{\scr D}|}\sum_{x∈{\scr D}}\frac{||\hat{r}(x)||_2}{||x||_2},\tag{15}</script><p>其中，$\hat{r}(x)$ 是使用DeepFool得到的预测最小扰动 ， ${\scr D}$ 代表测试集。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>&emsp;&emsp;我们在表1中呈现了使用不同方法计算的每个分类器的准确度和平均鲁棒性 $\hatρ_{adv}$ 。 我们还显示了每种方法计算一个对抗样本所需的运行时间。 可以看出，DeepFool估计的扰动比使用竞争方法计算的扰动更小（因此更接近于(1)中定义的最小扰动）。 例如，使用DeepFool获得的平均扰动比FGSM估计的平均扰动低5倍。 在ILSVRC2012挑战数据集上，平均扰动比FGSM小一个数量级。 此外，与<a href="https://arxiv.org/abs/1312.6199" target="_blank" rel="noopener">18</a>中的方法相比，所提出的方法也产生更小的扰动矢量， 所提出的方法因此在检测可能欺骗神经网络的方向上更精确。 因此，DeepFool可以用作精确评估分类器鲁棒性的有用工具。</p><center><font color="#0099ff" size="2" face="黑体">表一：不同分类器在不同数据集的对抗鲁棒性 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/44616336.jpg" alt=""></p><blockquote><p>每个方法计算一个样本所需的时间在时间栏中给出。 时间是在2015年中的MacBook Pro上计算的，无需CUDA支持。 星号标记表示使用GTX 750 Ti GPU计算的值。[4]:FGSM</p></blockquote><p>&emsp;&emsp;在复杂性方面，所提出的方法比[18]中提出的标准方法快得多。事实上，虽然[18]方法涉及到一系列目标函数的代价最小化，但我们经验性地观察到，DeepFool在少数迭代（即小于3）中收敛于愚弄分类器的扰动向量。因此，与现有技术方法相比，所提出的方法达到更精确的扰动矢量，同时在计算上是有效的。这使得它很容易被用作基线方法来估计大规模数据集上非常深的神经网络的鲁棒性。在这种情况下，我们首先对大规模ImageNet数据集上最先进的分类器的鲁棒性进行量化评估。可以看出，尽管测试精度非常高，但这些方法对对抗扰动极不稳定：幅度比原始图像小1000倍的扰动足以欺骗最先进的深度神经网络。</p><center><font color="#0099ff" size="2" face="黑体">图6：对抗扰动的样本对比 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-13/11841802.jpg" alt=""></p><p>&emsp;&emsp;第一行：被分类为 $\hat{k}(x)=$ “鲸鱼”的原始图像 $x$ 。<br>&emsp;&emsp;第二行：被分类为 $\hat{k}(x+r)=$ “乌龟”的图像 $x + r$ 以及由DeepFool计算出的相应扰动 $r$ 。<br>&emsp;&emsp;第三行：被分类为“乌龟”的图像以及由FGSM计算出的相应扰动。 DeepFool导致更小的扰动。</p><p>&emsp;&emsp;可以观察到，DeepFool 产生难以察觉的对抗扰动，而FGSM输出具有更高范数的扰动图像。</p><ul><li>注意到，当扰动用最大范数计算时，上述结论依然成立： DeepFool 较其他方法生成更小的对抗扰动。</li></ul><center><font color="#0099ff" size="2" face="黑体">表2：对抗扰动的最大范数鲁棒性 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/22804987.jpg" alt=""></p><blockquote><p>分别基于DeepFool(最小的 $l<em>∞$ 扰动)和FGSM的四个不同网络的 $\sideset{}{^∞</em>{adv}}{\hat{ρ}}$ 值， 错误分类率达到90%</p></blockquote><script type="math/tex; mode=display">\sideset{}{^∞_{adv}}{\hat{ρ}}(f)=\frac{1}{|{\scr D}|} \sum_{x\in{\scr D}}\frac{||\hat{r}(x)||_∞}{||x||_∞},</script><p>&emsp;&emsp;其中  $\hat{r}(x)$  分别使用DeepFool( $p =∞$ ，参见3.3节)和快速梯度符号法计算。</p><h3 id="使用对抗样本进行微调"><a href="#使用对抗样本进行微调" class="headerlink" title="使用对抗样本进行微调"></a>使用对抗样本进行微调</h3><p>&emsp;&emsp;在本节中，我们对表1中的对抗样本所用的网络进行微调，为MNIST和CIFAR-10任务构建更鲁棒的分类器。具体来说，对于每个网络，我们进行了两个实验：<br>&emsp;&emsp;(1)在DeepFool的对抗样本中微调网络，<br>&emsp;&emsp;(2)在快速梯度符号对抗样本上微调网络。<br>我们通过执行另外5个训练周期对网络进行微调，仅在扰动的训练集上减少了50％的学习速率。对于每个实验，所有5个额外的周期使用相同的训练数据。为了完整性，我们还对原始数据执行了5个额外的周期。图7a至图7d显示了不同微调策略的 $\hat{ρ}<em>{adv}$ 的演变，其中鲁棒性 $\hat{ρ}</em>{adv}$ 是使用DeepFool估算的，因为这是最准确的方法，如表1所示。观察到即使在一个额外周期之后，对DeepFool对抗样本的微调也增强了网络对对抗扰动的鲁棒性。例如，MNIST网络的鲁棒性提高了50％，NIN的鲁棒性提高了约40％。  </p><center><font color="#0099ff" size="2" face="黑体">图7：微调效果 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/88045331.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/19503473.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/15536386.jpg" alt=""></p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/98947187.jpg" alt=""></p><p>&emsp;&emsp;另一方面，令人惊讶的是，FGSM可能会导致网络的对抗扰动鲁棒性下降。我们推测这种行为是由于使用FGSM估计的扰动远远大于最小对抗扰动。用过度扰动的图像微调网络会降低网络对对抗扰动的鲁棒性。为了验证这个假设，我们在图8中比较了一个网络的对抗鲁棒性，这个网络用DeepFool获得的对抗样本进行了微调，其中扰动的范数被故意乘以 $α= 1,2,3$ 。</p><center><font color="#0099ff" size="2" face="黑体">图8：调整扰动范数对鲁棒性的影响 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/47701062.jpg" alt=""></p><p>&emsp;&emsp;有趣的是，我们看到通过放大对抗性扰动的范数，微调网络的鲁棒性降低。这可以解释为什么过度扰动的图像会降低MNIST网络的鲁棒性：这些扰动可能真的改变数据的类别，因此基于这些样本进行的微调可能导致鲁棒性的下降（有关说明，请参见图9） 。这证实了我们的假设，并进一步显示了设计精确方法来计算最小扰动的重要性。</p><center><font color="#0099ff" size="2" face="黑体">图9：不同 α 值带来的图片数字识别类型的改变</font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/9476430.jpg" alt=""></p><blockquote><p>原始图像被识别为 “1”，DeepFool 扰动图像被识别为”7”。</p></blockquote><p>&emsp;&emsp;表3列出了微调网络的精度。 可以看出，使用DeepFool进行微调可以提高网络的准确性。 相反，使用FGSM进行微调导致了我们所有实验中测试精度的降低。 这证实了FGSM输出一些不太可能出现在测试数据中的过度扰动图像。 因此，它降低了该方法的性能，因为它充当正则化器而不代表原始数据的分布。 这种效应类似于几何数据增强方案，其中原始样本的大变换对泛化具有相反的效果。</p><center><font color="#0099ff" size="2" face="黑体">表3：微调网络精度 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/96929609.jpg" alt=""></p><blockquote><p>微调后的网络测试错误率（五个周期后）。 每列对应于不同类型的增强扰动。</p></blockquote><p>&emsp;&emsp;为了强调对最小扰动的正确估计的重要性，我们现在表明使用近似方法可能导致关于网络的对抗鲁棒性的错误结论。 我们对快速梯度符号对抗样本中的NIN分类器进行了微调。 我们遵循前面描述的程序，但是这次我们将学习率降低了90％。 我们已经使用DeepFool和FGSM评估了此网络在不同额外周期的对抗鲁棒性。 如图10所示，红线 夸大了训练对对抗样本的影响。 此外，它不足以证明在第一个额外周期失去鲁棒性。</p><center><font color="#0099ff" size="2" face="黑体">图10：正则化的鲁棒性 </font></center><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-14/82983733.jpg" alt=""></p><blockquote><p>如何用不同的方法判断对抗鲁棒性。 这些值通过原始网络的相应 $\hat{ρ}_{adv}$ 进行归一化。</p></blockquote><p>&emsp;&emsp;这些观察结果证实，使用准确的工具来衡量分类器的鲁棒性对于得出有关网络鲁棒性的结论是至关重要的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy&lt;em&gt;z&lt;br&gt;翻译文献：&lt;a href=&quot;https://arxiv.org/abs/1511.04599&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DeepFool: a simple and accura
      
    
    </summary>
    
      <category term="对抗攻击" scheme="http://yoururl.com/categories/%E5%AF%B9%E6%8A%97%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Adversarial attack" scheme="http://yoururl.com/tags/Adversarial-attack/"/>
    
      <category term="Translation" scheme="http://yoururl.com/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>前端-html基础</title>
    <link href="http://yoururl.com/2018/07/15/01-HTML/"/>
    <id>http://yoururl.com/2018/07/15/01-HTML/</id>
    <published>2018-07-14T16:00:00.000Z</published>
    <updated>2018-07-15T04:26:02.980Z</updated>
    
    <content type="html"><![CDATA[<hr><p> 学习目标:</p><ul><li>了解常用浏览器</li><li>掌握WEB标准</li><li>理解标签语义化</li><li>掌握常用的排版标签</li><li>掌握常用的文本格式化图像链接等标签</li><li>掌握三种列表标签</li><li>掌握表格标签</li><li>掌握表格标签</li><li>掌握表单标签<br>typora-copy-images-to: media</li></ul><hr><h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><p>传智讲师   刘晓强     江湖人称  强哥  </p><p>但是不是</p><p><img src="media/qq.jpg"></p><p>也不是：</p><p><img src="media/lk.jpg"></p><p>其实这是我：</p><p><img src="media/gt.jpg"></p><p>前端基础  html +css    基础班        html 2 +css  7天    9 天 传统布局    +  3天 html 5 +css3 基础</p><p>就业班   js     移动web       php + 项目  15      node      vue     框架  微信 …  大前端    </p><h1 id="HTML-第一天目标"><a href="#HTML-第一天目标" class="headerlink" title="HTML 第一天目标"></a>HTML 第一天目标</h1><p>能够写出基本的页面（里面包含图片、各种标签和链接）</p><h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><p>我们主要用的 开发工具有   chrome  、  sublime 、  photoshop</p><h2 id="浏览器（显示）"><a href="#浏览器（显示）" class="headerlink" title="浏览器（显示）"></a>浏览器（显示）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器是网页显示、运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。</span><br></pre></td></tr></table></figure><p><img src="media/b.png"></p><h3 id="查看浏览器占有的市场份额（知晓）"><a href="#查看浏览器占有的市场份额（知晓）" class="headerlink" title="查看浏览器占有的市场份额（知晓）"></a>查看浏览器占有的市场份额（知晓）</h3><p>查看网站： <a href="http://tongji.baidu.com/data/browser" target="_blank">http://tongji.baidu.com/data/browser</a></p><p><img src="media/count.png"></p><p> 这些工具你认识几个？</p><h2 id="sublime（书写）"><a href="#sublime（书写）" class="headerlink" title="sublime（书写）"></a>sublime（书写）</h2><p> <img src="media/s.png"></p><p>  普通青年    Dreamweaver</p><p>  文艺青年    sublime</p><p>  高手和傻子  用记事本</p><p>  其实。。。。</p><p>  <img src="media/node.png"></p><h2 id="Photoshop-协助"><a href="#Photoshop-协助" class="headerlink" title="Photoshop(协助)"></a>Photoshop(协助)</h2><p><img src="media/1498465020015.png" alt="1498465020015"></p><p>PS 工具是我们使用频率比较高的软件之一， 我们学习PS目的不是为了设计海报做电商和UI的，而是要求：</p><ol><li><strong>熟练的切图</strong></li><li>能和网站美工美眉有共同话题。。。。。</li></ol><h1 id="认识网页"><a href="#认识网页" class="headerlink" title="认识网页"></a>认识网页</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及Flash等。</span><br></pre></td></tr></table></figure><p><img src="media/mi.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">思考：  网页是如何形成的呢?</span><br></pre></td></tr></table></figure><p><img src="media/web.png"></p><h1 id="常见浏览器内核介绍"><a href="#常见浏览器内核介绍" class="headerlink" title="常见浏览器内核介绍"></a>常见浏览器内核介绍</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器是网页运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。</span><br></pre></td></tr></table></figure><p><img src="media/b.png"></p><h2 id="浏览器内核（理解）"><a href="#浏览器内核（理解）" class="headerlink" title="浏览器内核（理解）"></a>浏览器内核（理解）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">浏览器内核又可以分成两部分：渲染引擎(layout engineer 或者 Rendering Engine)和 JS 引擎。</span><br><span class="line">渲染引擎 它负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。</span><br><span class="line">JS 引擎 则是解析 Javascript 语言，执行 javascript语言来实现网页的动态效果。</span><br><span class="line"></span><br><span class="line">最开始渲染引擎和 JS 引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。有一个网页标准计划小组制作了一个 ACID 来测试引擎的兼容性和性能。内核的种类很多，如加上没什么人使用的非商业的免费内核，可能会有10多种，但是常见的浏览器内核可以分这四种：Trident、Gecko、Blink、Webkit。</span><br></pre></td></tr></table></figure><p>（1）Trident(IE内核) </p><p>国内很多的双核浏览器的其中一核便是 Trident，美其名曰 “兼容模式”。</p><p>代表： IE、傲游、世界之窗浏览器、Avant、腾讯TT、猎豹安全浏览器、360极速浏览器、百度浏览器等。</p><p>Window10 发布后，IE 将其内置浏览器命名为 Edge，Edge 最显著的特点就是新内核 EdgeHTML。</p><p>（2）Gecko(firefox) </p><p>Gecko(Firefox 内核)： Mozilla FireFox(火狐浏览器) 采用该内核，Gecko 的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。 可惜这几年已经没落了， 比如 打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</p><p>（3） webkit(Safari)  </p><p> Safari 是苹果公司开发的浏览器，所用浏览器内核的名称是大名鼎鼎的 WebKit。</p><p> 现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了），苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。</p><p> 代表浏览器：傲游浏览器3、 Apple Safari (Win/Mac/iPhone/iPad)、Symbian手机浏览器、Android 默认浏览器，</p><p>（4） Chromium/Blink(chrome) </p><p>   在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。 </p><p>​     大部分国产浏览器最新版都采用Blink内核。二次开发</p><p>（5） Presto(Opera) </p><p>  Presto（已经废弃） 是挪威产浏览器 opera 的 “前任” 内核，为何说是 “前任”，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌怀抱了。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">了解一点：</span><br></pre></td></tr></table></figure><p>移动端的浏览器内核主要说的是系统内置浏览器的内核。</p><p>Android手机而言，使用率最高的就是Webkit内核，大部分国产浏览器宣称的自己的内核，基本上也是属于webkit二次开发。</p><p>iOS以及WP7平台上，由于系统原因，系统大部分自带浏览器内核，一般是Safari或者IE内核Trident的</p><h1 id="Web标准（重点）"><a href="#Web标准（重点）" class="headerlink" title="Web标准（重点）"></a>Web标准（重点）</h1><p>通过以上浏览器的内核不同，我们知道他们工作原理、解析肯定不同，显示就会有差别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">问：  哪个语言再全国基本都可以听得懂？</span><br></pre></td></tr></table></figure><p><img src="media/bz.png"></p><h2 id="Web-标准的好处"><a href="#Web-标准的好处" class="headerlink" title="Web 标准的好处"></a>Web 标准的好处</h2><p><em>1</em>、让Web的发展前景更广阔<br><em>2</em>、内容能被更广泛的设备访问<br><em>3</em>、更容易被搜寻引擎搜索<br><em>4</em>、降低网站流量费用<br><em>5</em>、使网站更易于维护<br><em>6</em>、提高页面浏览速度</p><h2 id="Web-标准构成"><a href="#Web-标准构成" class="headerlink" title="Web 标准构成"></a>Web 标准构成</h2><p> Web标准不是某一个标准，而是由W3C和其他标准化组织制定的一系列标准的集合。</p><p>主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结构标准：结构用于对网页元素进行整理和分类，咱们主要学的是HTML。 最重要</span><br><span class="line">表现标准：表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS。</span><br><span class="line">行为标准：行为是指网页模型的定义及交互的编写，咱们主要学的是 Javascript</span><br></pre></td></tr></table></figure><p>理想状态我们的源码： .HTML    .css   .js </p><p>直观感受：</p><p><img src="media/gx.png"></p><p>总结WEB标准：</p><p>结构标准：   <img src="media/hb1.png">  决定你是否有个好天然身体 </p><p>表现标准：   <img src="media/hb2.png">  决定你是否打扮的美丽外观</p><p>行为标准：   <img src="media/hb3.jpg" width="420">  决定你是否有吸引人的行为</p><h2 id="课堂一练："><a href="#课堂一练：" class="headerlink" title="课堂一练："></a>课堂一练：</h2><p><strong>1.关于WEB标准下列说法正确的是: </strong></p><p>A html决定页面的行为，css决定页面的样式，js决定页面的结构</p><p>B html决定页面的样式，css决定页面的结构，js决定页面的行为</p><p>C html决定页面的结构，css决定页面的样式，js决定页面的行为</p><p>D 以上都不正确</p><p>2 <strong>web 标准里边规定三层分离不包括哪部分</strong></p><p>A．HTML</p><p>B．CSS</p><p>C．JavaScript</p><p>D．PHP</p><p>3.<strong>关于WEB标准下列说法正确的是</strong></p><p>A．html相当于人的动作行为，CSS相当于人的穿着打扮，javascript相当于人的骨架结构；</p><p>B．html相当于人的骨架结构，CSS相当于人的穿着打扮，javascript相当于人的动作行为；</p><p>C．html相当于人的穿着打扮，CSS相当于人的骨架结构，javascript相当于人的动作行为；</p><p>D．html相当于人的骨架结构，CSS相当于人的动作行为，javascript相当于人的穿着打扮；</p><h1 id="HTML-初识"><a href="#HTML-初识" class="headerlink" title="HTML 初识"></a>HTML 初识</h1><p>一般先学习HTML+CSS， 这里我们先定一个小目标，先学HTML,后学习CSS。</p><p>HTML（英文Hyper Text Markup Language的缩写）中文译为“超文本标签语言”。是用来描述网页的一种语言。</p><p>所谓超文本，因为它可以加入图片、声音、动画、多媒体等内容，不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 我是一个大标题 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   注意：   体会 文本    标签    语言   几个词语</p><ul><li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)</li><li>HTML 不是一种编程语言，而是一种标记语言 (markup language)</li><li>标记语言是一套标记标签 (markup tag)</li></ul><p>总结： HTML 作用就是用标记标签来描述网页，把网页内容在浏览器中展示出来。 </p><p>用文字来描述网页标签</p><h2 id="HTML骨架格式"><a href="#HTML骨架格式" class="headerlink" title="HTML骨架格式"></a>HTML骨架格式</h2><p>日常生活的书信，我们要遵循共同的约定。 </p><p><img src="media/mess.png" alt=""></p><p>同理：HTML 有自己的语言语法骨架格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure><p>课堂练习1：    书写我们的第一个HTML 页面！</p><ol><li>新建一个demo 的 TXT 文件。</li><li>里面写入刚才的HTML 骨架。月薪过万 你我之间  黑马洗练  一飞冲天</li><li>把后缀名改为 .HTML。</li><li>右击—谷歌浏览器打开。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1 HTML标签：</span><br><span class="line"></span><br><span class="line">作用所有HTML中标签的一个根节点。 最大的标签   根标签</span><br><span class="line"></span><br><span class="line">2 head标签： 文档的头部</span><br><span class="line"></span><br><span class="line">文档的头部描述了文档的各种属性和信息，包括文档的标题、在 Web 中的位置以及和其他文档的关系等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</span><br><span class="line"></span><br><span class="line">注意在head标签中我们必须要设置的标签是title</span><br><span class="line"></span><br><span class="line">3.title标签： 文档的标题</span><br><span class="line"></span><br><span class="line">作用：让页面拥有一个属于自己的标题。</span><br><span class="line"></span><br><span class="line">4.body标签：文档的主体  以后我们的页面内容 基本都是放到body里面的</span><br><span class="line"></span><br><span class="line">body 元素包含文档的所有内容（比如文本、超链接、图像、表格和列表等等。）</span><br></pre></td></tr></table></figure><p>为了便于记忆，我们请出刚才要辞职回家养猪的二师兄来帮忙， 我称之为  猪八戒记忆法</p><p><img src="media/pig.png"></p><h2 id="HTML标签分类"><a href="#HTML标签分类" class="headerlink" title="HTML标签分类"></a>HTML标签分类</h2><p>  在HTML页面中，带有“&lt; &gt;”符号的元素被称为HTML标签，如上面提到的 &lt;HTML&gt;、&lt;head&gt;、&lt;body&gt;都是HTML骨架结构标签。所谓标签就是放在“&lt; &gt;” 标签符中表示某个功能的编码命令，也称为HTML标签或 HTML元素</p><p>1.双标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span>&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该语法中“&lt;标签名&gt;”表示该标签的作用开始，一般称为“开始标签（start tag）”，“&lt;/标签名&gt;” 表示该标签的作用结束，一般称为“结束标签（end tag）”。和开始标签相比，结束标签只是在前面加了一个关闭符“/”。</p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 比如 <span class="tag">&lt;<span class="name">body</span>&gt;</span>我是文字  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>2.单标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>  单标签也称空标签，是指用一个标签符号即可完整地描述某个功能的标签。</p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 比如  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="HTML标签关系"><a href="#HTML标签关系" class="headerlink" title="HTML标签关系"></a>HTML标签关系</h2><p>标签的相互关系就分为两种：</p><p>1.嵌套关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  <span class="tag">&lt;<span class="name">title</span>&gt;</span> <span class="tag">&lt;/<span class="name">title</span>&gt;</span>  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/father.jpg"></p><p>2.并列关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/xiong.jpg"></p><p>倡议： 如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位。如果是并列关系，最好上下对齐。</p><h2 id="课堂一练"><a href="#课堂一练" class="headerlink" title="课堂一练"></a>课堂一练</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请问下列哪个标签是错误的？</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A  &lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B  &lt;strong&gt;&lt;div&gt;&lt;/div&gt;&lt;/strong&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C  &lt;head&gt;&lt;title&gt;&lt;/head&gt;&lt;/title&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D  &lt;body&gt;&lt;div&gt;&lt;/div&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>  <a href="key.HTML" target="_blank">sublime 一些常用快捷键  点我查看 </a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">再页面中输入 以下2个单词</span><br><span class="line">1.  html: 5   </span><br><span class="line">2.  !</span><br><span class="line">   在sublime里面然后按下tab键盘即可生成HTML骨架</span><br></pre></td></tr></table></figure><h1 id="文档类型-lt-DOCTYPE-gt"><a href="#文档类型-lt-DOCTYPE-gt" class="headerlink" title="文档类型&lt;!DOCTYPE&gt;"></a>文档类型&lt;!DOCTYPE&gt;</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure><p>同学你用啥手机？你咋回答？  </p><p>这句话就是告诉我们使用哪个html版本？  我们使用的是 html 5 的版本。  html有很多版本，那我们应该告诉用户和浏览器我们使用的版本号。</p><p>&lt;!DOCTYPE&gt; 标签位于文档的最前面，用于向浏览器说明当前文档使用哪种 HTML 或 XHTML 标准规范，必需在开头处使用&lt;!DOCTYPE&gt;标签为所有的XHTML文档指定XHTML版本和类型，只有这样浏览器才能按指定的文档类型进行解析。</p><p>注意：  一些老网站可能用的还是老版本的文档类型比如 XHTML之类的，但是我们学的是HTML5,而且HTML5的文档类型兼容很好(向下兼容的原则)，所以大家放心的使用HTML5的文档类型就好了。</p><h1 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h1><meta charset="UTF-8"><p>utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。</p><p>gb2312 简单中文  包括6763个汉字</p><p>BIG5   繁体中文 港澳台等用</p><p>GBK包含全部中文字符    是GB2312的扩展，加入对繁体字的支持，兼容GB2312</p><p>UTF-8则包含全世界所有国家需要用到的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记住一点，以后我们统统使用UTF-8 字符集, 这样就避免出现字符集不统一而引起乱码的情况了。</span><br></pre></td></tr></table></figure><h1 id="HTML标签的语义化"><a href="#HTML标签的语义化" class="headerlink" title="HTML标签的语义化"></a>HTML标签的语义化</h1><p>白话： 所谓标签语义化，就是指标签的含义。</p><h2 id="为什么要有语义化标签"><a href="#为什么要有语义化标签" class="headerlink" title="为什么要有语义化标签"></a>为什么要有语义化标签</h2><ol><li><p>方便代码的阅读和维护</p></li><li><p>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容 </p></li><li><p>使用语义化标签会具有更好地搜索引擎优化 </p></li></ol><p>核心：合适的地方给一个最为合理的标签。</p><p>语义是否良好： 当我们去掉CSS之后，网页结构依然组织有序，并且有良好的可读性。</p><p>白话，一眼看去，就知道那个是重点，结构是什么，知道每块的内容是干啥的。</p><p>遵循的原则：先确定语义的HTML ，再选合适的CSS。</p><h1 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h1><p> 首先 HTML和CSS是两种完全不同的语言，我们学的是结构，就只写HTML标签，认识标签就可以了。 不会再给结构标签指定样式了。</p><p> HTML标签有很多，这里我们学习最为常用的，后面有些较少用的，我们可以查下手册就可以了。 </p><h2 id="排版标签"><a href="#排版标签" class="headerlink" title="排版标签"></a>排版标签</h2><p>排版标签主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p><h3 id="标题标签-熟记"><a href="#标题标签-熟记" class="headerlink" title="标题标签 (熟记)"></a>标题标签 (熟记)</h3><p> 单词缩写：  head   头部. 标题     title  文档标题</p><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签，HTML提供了6个等级的标题，即</p><p> </p><h1>、<h2>、<h3>、<h4>、<h5>和<h6><p></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标题标签语义：  作为标题使用，并且依据重要性递减</span><br></pre></td></tr></table></figure><p>其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hn</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">hn</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：  h1 标签因为重要，尽量少用，不要动不动就向你扔了一个h1。 一般h1 都是给logo使用，或者页面中最重要标题信息。</p></blockquote><p>  <img src="media/dog.gif"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">传智播客学前端，</span><br><span class="line">　　前端学院四十班。</span><br><span class="line">　　新班强哥讲台站，</span><br><span class="line">　　又带新颜技术钻。</span><br><span class="line">　　标题一共六级选，</span><br><span class="line">　　具体效果刷新见。</span><br><span class="line">　　        ------强哥</span><br></pre></td></tr></table></figure><h3 id="段落标签-熟记"><a href="#段落标签-熟记" class="headerlink" title="段落标签( 熟记)"></a>段落标签( 熟记)</h3><p>单词缩写：  paragraph  段落  [ˈpærəgræf]    无须记这个单词</p><p> 在网页中要把文字有条理地显示出来，离不开段落标签，就如同我们平常写文章一样，整个网页也可以分为若干个段落，而段落的标签就是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>  文本内容  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。</p><h3 id="水平线标签-认识"><a href="#水平线标签-认识" class="headerlink" title="水平线标签(认识)"></a>水平线标签(认识)</h3><p>单词缩写：  horizontal  横线    [ˌhɔrəˈzɑntl]    同上</p><p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，<hr>就是创建横跨网页水平线的标签。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>是单标签</span><br></pre></td></tr></table></figure><p> 在网页中显示默认样式的水平线。</p><p>课堂练习2：    新闻页面 </p><p><img src="media/sh.png"> </p><h3 id="换行标签-熟记"><a href="#换行标签-熟记" class="headerlink" title="换行标签(熟记)"></a>换行标签(熟记)</h3><p>单词缩写：  break   打断 ,换行</p><p>在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这时如果还像在word中直接敲回车键换行就不起作用了。</p><h2 id="课堂一练-1"><a href="#课堂一练-1" class="headerlink" title="课堂一练"></a>课堂一练</h2><p>关于标签下列说法正确的是 </p><p>(A) P1是段落标签</p><p>(B) H1 是标题标签</p><p>(C) Hr是换行标签</p><p>(D) Br 是一条直线</p><p> 2 关于标签下列说法不正确的是</p><p>(A) H标签有6个等级分别是</p><h1> <h2> <h3> <h4> <h5>和<h6><p></p><p>(B) h1到h6 文字从小到大 </p><p>(C) p标签一行只能放一个</p><p>(D) P是段落标签会给文字加上段落的语义</p><h3 id="div-span标签-重点"><a href="#div-span标签-重点" class="headerlink" title="div span标签(重点)"></a>div span标签(重点)</h3><p>div  span    是没有语义的     是我们网页布局主要的2个盒子     css+div</p><p>div 就是  division  的缩写   分割， 分区的意思  其实有很多div 来组合网页。</p><p>span, 跨度，跨距；范围    </p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> 这是头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    <span class="tag">&lt;<span class="name">span</span>&gt;</span>今日价格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本格式化标签-熟记"><a href="#文本格式化标签-熟记" class="headerlink" title="文本格式化标签(熟记)"></a>文本格式化标签(熟记)</h2><p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><p><img src="media/tab.png"></p><p>  b  i  s  u   只有使用 没有 强调的意思       strong   em  del   ins  语义更强烈</p><h2 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h2><p><img src="media/ttt.jpg" width="300"></p><p>属性就是特性 比如 手机的颜色 手机的尺寸 ，总结就是手机的。。</p><p>手机的颜色是黑色   手机的尺寸是 8寸</p><p>水平线的长度是 200  </p><p>图片的宽度 是  300    键  值对</p><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> 属性<span class="attr">1</span>=<span class="string">"属性值1"</span> 属性<span class="attr">2</span>=<span class="string">"属性值2"</span> …&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的语法中，</p><p>1.标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</p><p>2.属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</p><p>3.任何标签的属性都有默认值，省略该属性则取默认值。</p><p>采取  键值对 的格式   key=”value”  的格式  </p><p>比如:  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">"400"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>属性  是 宽度  </p><p>值    是 400 </p><p>提倡：   尽量不使用 样式属性。   <img src="media/sm.jpg"> </p><h2 id="图像标签img-重点"><a href="#图像标签img-重点" class="headerlink" title="图像标签img (重点)"></a>图像标签img (重点)</h2><p>单词缩写：   image  图像</p><p>HTML网页中任何元素的实现都要依靠HTML标签，要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签<img>以及和他相关的属性。其基本语法格式如下：</p><p>该语法中src属性用于指定图像文件的路径和文件名，他是img标签的必需属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图像URL"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/img.png"></p><p><strong>当网页显示图片时,鼠标滑上图片显示文字描述是以下哪个属性<em>**</em></strong></p><p>(A) 设置alt属性</p><p>(B) 设置title属性</p><p>(C) 设置href 属性</p><p>(D) 设置src 属性</p><p><strong>2  在HTML中，使用<img>标签插入图像，下列选项关于<img>的src属性说法正确的是 </strong></p><p>(A) 用来设置图片的格式</p><p>(B) 用来设置图片的所在位置</p><p>(C) 用来设置鼠标指向图片时显示的文字</p><p>(D) 用来设置图片是否能正确显示 </p><h2 id="链接标签-重点"><a href="#链接标签-重点" class="headerlink" title="链接标签(重点)"></a>链接标签(重点)</h2><p>单词缩写：  anchor 的缩写  [ˈæŋkə(r)] 。基本解释 锚, 铁锚 的</p><p>在HTML中创建超链接非常简单，只需用标签环绕需要被链接的对象即可，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"跳转目标"</span> <span class="attr">target</span>=<span class="string">"目标窗口的弹出方式"</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>href：用于指定链接目标的url地址，当为标签应用href属性时，它就具有了超链接的功能。  Hypertext Reference的缩写。意思是超文本引用</p><p>target：用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。</p><p>注意：</p><p>1.外部链接 需要添加 http:// www.baidu.com</p><p>2.内部链接 直接链接内部页面名称即可 比如 &lt; a href=”index.html”&gt; 首页 &lt;/a &gt;    </p><p>3.如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=”#”)，表示该链接暂时为一个空链接。</p><p>4.不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</p><h3 id="锚点定位-（难点）"><a href="#锚点定位-（难点）" class="headerlink" title="锚点定位 （难点）"></a>锚点定位 （难点）</h3><p>通过创建锚点链接，用户能够快速定位到目标内容。<br>创建锚点链接分为两步：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.使用“a href=”#id名&gt;“链接文本"<span class="tag">&lt;/<span class="name">a</span>&gt;</span>创建链接文本（被点击的）</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#two"</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line">2.使用相应的id名标注跳转目标的位置。</span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>第2集<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="base-标签-基本的"><a href="#base-标签-基本的" class="headerlink" title="base 标签   基本的"></a>base 标签   基本的</h3><p>base 可以设置整体链接的打开状态   </p><p>base 写到  <head>  </head>  之间   </p><p>把所有的连接 都默认添加 target=”_blank”</p><p> <img src="media/base.png"></p><h2 id="课堂一练-2"><a href="#课堂一练-2" class="headerlink" title="课堂一练"></a>课堂一练</h2><p> 1在HTML中，关于a标签说法不正确的是（）</p><p>(A) a标签可以通过href属性跳转到另外一个页面</p><p>(B) a标签可以通过targer属性设置在是否在新窗口中打开</p><p>(C) a标签只能在当前页面设置锚点链接，让用户能够快速定位到目标内</p><p>(D) a标签可以通过href=”#”设置一个空链接</p><p>2如果想跳转到当前页面里名为show的锚点，下列写法是正确的</p><p>A  &lt; a href=”.show”&gt;跳转&lt;/a&gt;</p><p>B &lt; a href=”#show”&gt;跳转&lt;/a&gt;</p><p>C &lt; a href=” show”&gt;跳转&lt;/a&gt;</p><p>D &lt; a src=” #show”&gt;跳转&lt;/a&gt;</p><p>3如果想跳转到同目录下的名为success.html文件里名为show的锚点，下列写法是正确的</p><p>(A) &lt; a href=”success.html#show”&gt;跳转&lt;/a&gt;</p><p>(B)  &lt; a href=”#show”&gt;跳转&lt;/a&gt; </p><p>(C)  &lt; a href=”success#show”&gt;跳转&lt;/a&gt;<br>(D) &lt; a src=”success.html#show”&gt;跳转&lt;/a&gt;</p><h2 id="特殊字符标签-（理解）"><a href="#特殊字符标签-（理解）" class="headerlink" title="特殊字符标签 （理解）"></a>特殊字符标签 （理解）</h2><p> <img src="media/zifu.png"></p><h2 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h2><p>在HTML中还有一种特殊的标签——注释标签。如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。其基本语法格式如下：<br>​        </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span>   ctrl + /       或者 ctrl +shift + /</span><br></pre></td></tr></table></figure><p>注释内容不会显示在浏览器窗口中，但是作为HTML文档内容的一部分，也会被下载到用户的计算机上，查看源代码时就可以看到。</p><p>注释重要性：</p><p><img src="media/zs.png"></p><h1 id="路径-重点、难点"><a href="#路径-重点、难点" class="headerlink" title="路径(重点、难点)"></a>路径(重点、难点)</h1><p><img src="media/dt.png" width="400"></p><p><img src="media/lj.png"></p><p>实际工作中，通常新建一个文件夹专门用于存放图像文件，这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。</p><p>根目录  当前目录 </p><p>路径可以分为： 相对路径和绝对路径</p><h2 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h2><p>以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。</p><ol><li>图像文件和HTML文件位于同一文件夹：只需输入图像文件的名称即可，如&lt;img src=”logo.gif” /&gt;。</li><li>图像文件位于HTML文件的下一级文件夹：输入文件夹名和文件名，之间用“/”隔开，如&lt;img src=”img/img01/logo.gif” /&gt;。</li><li>图像文件位于HTML文件的上一级文件夹：在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，如&lt;img src=”../logo.gif” /&gt;。</li></ol><h2 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h2><p>绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的</p><p>“D:\web\img\logo.gif”，或完整的网络地址，例如“<a href="http://www.itcast.cn/images/logo.gif”。" target="_blank" rel="noopener">http://www.itcast.cn/images/logo.gif”。</a></p><h2 id="课堂一练-3"><a href="#课堂一练-3" class="headerlink" title="课堂一练"></a>课堂一练</h2><p>1.<strong>在下面结构中，哪种写法可以在index页面中有输出img.gif</strong></p><p><img src="media/1512226080266.png" alt="1512226080266"></p><p>(A) <img src="”../image/img.gif”">         </p><p>(B) <img src="”image/img.gif”"> </p><p>(C) <img src="”image../img.gif”">    </p><p>(D) <img src="”img.gif/image”"></p><p><strong>2在下面结构中，哪种写法可以在index页面中有输出1.jpg</strong></p><p><img src="media/1512226099480.png" alt="1512226099480"></p><p>(A) <img src="”../1/2/1.jpg”">        </p><p>(B) <img src="”/1/2/1.jpg”"></p><p>(C) <img src="”1/2/1.jpg”">    </p><p>(D) <img src="”1.jpg”"></p><p>3在下面结构中哪种写法可以在index页面中有输出img.gif</p><p><img src="media/1512226121609.png" alt="1512226121609"></p><p>(A) <img src="”demo/image/img.gif”">     </p><p>(B) <img src="”image/img.gif”"> </p><p>(C) <img src="”image../img.gif”">    </p><p>(D) <img src="”img.gif/image/demo”"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  每一天都有一个主题 我们HTML第一天的主题就是 &lt;认识标签&gt;</p><p>学HTML 之前 觉得 很神秘  </p><p><img src="media/z.png"></p><p>等你学完之后忽然发现</p><p><img src="media/rh.jpg" width="615"></p><p>总结今天的思路贯穿线：</p><p><img src="media/a.png" width="1000"></p><h1 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h1><p>什么是列表？</p><p><img src="media/list.png"></p><p>把…制成表,以表显示</p><p>容器里面装载着文字或图表的一种形式，叫列表。</p><p>列表最大的特点就是  整齐 、整洁、 有序</p><h2 id="无序列表-ul-（重点）"><a href="#无序列表-ul-（重点）" class="headerlink" title="无序列表 ul （重点）"></a>无序列表 ul （重点）</h2><p>无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>比如下面这些，新闻是没有顺序的，不用排队，先到先得，后发布先显示。</p><p><img src="media/ul.png"></p><p>脚下留心：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</span><br><span class="line">2. &lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。</span><br><span class="line">3. 无序列表会带有自己样式属性，放下那个样式，一会让CSS来！</span><br></pre></td></tr></table></figure><h2 id="有序列表-ol-（了解）"><a href="#有序列表-ol-（了解）" class="headerlink" title="有序列表 ol （了解）"></a>有序列表 ol （了解）</h2><p><img src="media/gold.png"></p><p>有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  所有特性基本与ul 一致。  </p><p>  但是实际工作中， 较少用 ol img src=”media/1.jpg” /&gt;</p><h2 id="自定义列表（理解）"><a href="#自定义列表（理解）" class="headerlink" title="自定义列表（理解）"></a>自定义列表（理解）</h2><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <img src="media/2.jpg"> </p><p>用的还可以：</p><p><img src="media/mix.png"></p><h1 id="表格-table-会使用"><a href="#表格-table-会使用" class="headerlink" title="表格 table(会使用)"></a>表格 table(会使用)</h1><p><img src="http://zcr4.ncfstatic.com/attachment/201403/27/10/5333888008f05_thumb_670x0.jpg" alt="img"></p><p>存在即是合理的。  表格的现在还是较为常用的一种标签，但不是用来布局，常见处理、显示表格式数据。</p><p><img src="media/table.png"></p><p>ps:  这些地方用表格，你会觉得生活还是那么美好。。。。忍不住想说  PPAP i hava a pen  </p><h2 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a>创建表格</h2><p>在HTML网页中，要想创建表格，就需要使用表格相关的标签。创建表格的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的语法中包含三对HTML标签，分别为 &lt;table&gt;&lt;/table&gt;、&lt;tr&gt;&lt;/tr&gt;、&lt;td&gt;&lt;/td&gt;，他们是创建表格的基本标签，缺一不可，下面对他们进行具体地解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.table用于定义一个表格。</span><br><span class="line"></span><br><span class="line">2.tr 用于定义表格中的一行，必须嵌套在 table标签中，在 table中包含几对 tr，就有几行表格。</span><br><span class="line"></span><br><span class="line">3.td /td：用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中，一对 &lt;tr&gt; &lt;/tr&gt;中包含几对&lt;td&gt;&lt;/td&gt;，就表示该行中有多少列（或多少个单元格）。</span><br></pre></td></tr></table></figure><p>注意：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;tr&gt;&lt;/tr&gt;中只能嵌套&lt;td&gt;&lt;/td&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. &lt;td&gt;&lt;/td&gt;标签，他就像一个容器，可以容纳所有的元素</span><br></pre></td></tr></table></figure><h2 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h2><p><img src="media/tt.png"></p><h2 id="表头标签"><a href="#表头标签" class="headerlink" title="表头标签"></a>表头标签</h2><p>表头一般位于表格的第一行或第一列，其文本加粗居中，如下图所示，即为设置了表头的表格。设置表头非常简单，只需用表头标签&lt;th&gt;&lt;/th&gt;替代相应的单元格标签&lt;td&gt;&lt;/td&gt;即可。</p><p> <img src="media/th.png"></p><h2 id="表格结构（了解）"><a href="#表格结构（了解）" class="headerlink" title="表格结构（了解）"></a>表格结构（了解）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">在使用表格进行布局时，可以将表格划分为头部、主体和页脚（页脚因为有兼容性问题，我们不在赘述），具体 如下所示：</span><br><span class="line"></span><br><span class="line">&lt;thead&gt;&lt;/thead&gt;：用于定义表格的头部。</span><br><span class="line"></span><br><span class="line">必须位于&lt;table&gt;&lt;/table&gt; 标签中，一般包含网页的logo和导航等头部信息。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;tbody&gt;&lt;/tbody&gt;：用于定义表格的主体。</span><br><span class="line"></span><br><span class="line">位于&lt;table&gt;&lt;/table&gt;标签中，一般包含网页中除头部和底部之外的其他内容。</span><br></pre></td></tr></table></figure><p><img src="media/thead.png"></p><h2 id="表格标题"><a href="#表格标题" class="headerlink" title="表格标题"></a>表格标题</h2><p><strong>表格的标题： caption</strong></p><p><strong>定义和用法</strong></p><p>caption 元素定义表格标题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>caption 标签必须紧随 table 标签之后。您只能对每个表格定义一个标题。通常这个标题会被居中于表格之上。</p><h2 id="合并单元格-难点"><a href="#合并单元格-难点" class="headerlink" title="合并单元格(难点)"></a>合并单元格(难点)</h2><p>跨行合并：rowspan    跨列合并：colspan</p><p>合并单元格的思想：</p><p>​     将多个内容合并的时候，就会有多余的东西，把它删除。    例如 把 3个 td 合并成一个， 那就多余了2个，需要删除。</p><p>​     公式：  删除的个数  =  合并的个数  - 1   </p><p>   合并的顺序 先上   先左 </p><h2 id="总结表格"><a href="#总结表格" class="headerlink" title="总结表格"></a>总结表格</h2><ol><li><p>表格提供了HTML 中定义表格式数据的方法。</p></li><li><p>表格中由行中的单元格组成。</p></li><li><p>表格中没有列元素，列的个数取决于行的单元格个数。</p></li><li><p>表格不要纠结于外观，那是CSS 的作用。</p><p>​</p><p><strong>表格的学习要求：  能手写表格结构，并且能合并单元格。</strong></p></li></ol><h1 id="表单标签-掌握"><a href="#表单标签-掌握" class="headerlink" title="表单标签(掌握)"></a>表单标签(掌握)</h1><p>现实中的表单，类似我们去银行办理信用卡填写的单子。 如下图</p><p><img src="media/car.jpg" width="500"></p><p>目的是为了收集用户信息。</p><p>在我们网页中， 我们也需要跟用户进行交互，收集用户资料，此时也需要表单。</p><p>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。</p><p><img src="media/bd.png"></p><p>  表单控件：</p><p>​       包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><p>  提示信息：</p><p>​        一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><p>  表单域：  </p><p>​      他相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h2 id="input-控件-重点"><a href="#input-控件-重点" class="headerlink" title="input 控件(重点)"></a>input 控件(重点)</h2><p>在上面的语法中，&lt;input /&gt;标签为单标签，type属性为其最基本的属性，其取值有多种，用于指定不同的控件类型。除了type属性之外，&lt;input /&gt;标签还可以定义很多其他的属性，其常用属性如下表所示。</p><p><img src="media/input.png"></p><h2 id="label标签-理解"><a href="#label标签-理解" class="headerlink" title="label标签(理解)"></a>label标签(理解)</h2><p>label 标签为 input 元素定义标注（标签）。</p><p>作用：  用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点</p><p>如何绑定元素呢？</p><p>for 属性规定 label 与哪个表单元素绑定。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="textarea控件-文本域"><a href="#textarea控件-文本域" class="headerlink" title="textarea控件(文本域)"></a>textarea控件(文本域)</h2><p>如果需要输入大量的信息，就需要用到&lt;textarea&gt;&lt;/textarea&gt;标签。通过textarea控件可以轻松地创建多行文本输入框，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"每行中的字符数"</span> <span class="attr">rows</span>=<span class="string">"显示的行数"</span>&gt;</span></span><br><span class="line">  文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="media/textarea.png"></p><h2 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h2><p>使用select控件定义下拉菜单的基本语法格式如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><ol><li>&lt;select&gt;&lt;/select&gt;中至少应包含一对&lt;option&gt;&lt;/option&gt;。</li><li>在option 中定义selected =” selected “时，当前项即为默认选中项。</li></ol><h2 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h2><p>在HTML中，form标签被用于定义表单域，即创建一个表单，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。创建表单的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url地址"</span> <span class="attr">method</span>=<span class="string">"提交方式"</span> <span class="attr">name</span>=<span class="string">"表单名称"</span>&gt;</span></span><br><span class="line">  各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常用属性：</p><ol><li>Action<br>在表单收集到信息后，需要将信息传递给服务器进行处理，action属性用于指定接收并处理表单数据的服务器程序的url地址。</li><li>method<br>用于设置表单数据的提交方式，其取值为get或post。</li><li>name<br>用于指定表单的名称，以区分同一个页面中的多个表单。</li></ol><p>注意：  每个表单都应该有自己表单域。</p><h1 id="查文档"><a href="#查文档" class="headerlink" title="查文档"></a>查文档</h1><p>经常查阅文档是一个非常好的学习习惯。</p><p>W3C :  <a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">http://www.w3school.com.cn/</a></p><p>MDN: <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/</a></p></h6></h5></h4></h3></h2></h1></h6></h5></h4></h3></h2></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt; 学习目标:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解常用浏览器&lt;/li&gt;
&lt;li&gt;掌握WEB标准&lt;/li&gt;
&lt;li&gt;理解标签语义化&lt;/li&gt;
&lt;li&gt;掌握常用的排版标签&lt;/li&gt;
&lt;li&gt;掌握常用的文本格式化图像链接等标签&lt;/li&gt;
&lt;li&gt;掌握三种列表标签&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="html" scheme="http://yoururl.com/categories/html/"/>
    
    
      <category term="html" scheme="http://yoururl.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow 基础（八）： 神经网络优化</title>
    <link href="http://yoururl.com/2018/05/01/Tensorflow%20%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AB%EF%BC%89%EF%BC%9A%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96/"/>
    <id>http://yoururl.com/2018/05/01/Tensorflow 基础（八）：神经网络优化/</id>
    <published>2018-04-30T16:00:00.000Z</published>
    <updated>2018-05-01T08:07:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="神经网络优化"><a href="#神经网络优化" class="headerlink" title="神经网络优化"></a>神经网络优化</h1><ul><li>学习率设置  </li><li>过拟合问题  </li><li>滑动平均模型</li></ul><h2 id="学习率设置"><a href="#学习率设置" class="headerlink" title="学习率设置"></a>学习率设置</h2><p>在梯度下降算法中，对于参数 $\theta$，其梯度为 $\frac{\partial}{\partial \theta}J(\theta)$ 。还需要定义一个学习率 $\eta$ (learning rate)来定义每次参数更新的幅度。通过参数的梯度和学习率，参数更新公式为：  </p><script type="math/tex; mode=display">\theta _{n+1} =\theta _n - \eta \frac{\partial}{\partial \theta _n} J(\theta _n)</script><p>如果学习率过大，可能会导致参数在极优值两侧来回移动；如果学习率过小，虽然能保证收敛性，但会大大降低优化速度。<br>为解决学习率的问题，Tensorflow 提供了一种更加灵活的学习率设置方法—-指数衰减法。通过这个函数可以使用较大的学习率快速得到一个较优的解，然后随着迭代的继续逐步减小学习率，使得模型在训练后期更加稳定。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tf.train.exponential_decay(</span><br><span class="line">    learning_rate,          <span class="comment"># 初始学习率</span></span><br><span class="line">    global_step,            <span class="comment"># </span></span><br><span class="line">    decay_steps,            <span class="comment"># 衰减速度， 完整使用一边训练数据所需要的迭代轮数，  decay_steps =  dataset_size / batch_size</span></span><br><span class="line">    decay_rate,             <span class="comment"># 衰减系数</span></span><br><span class="line">    staircase=<span class="keyword">False</span>,        <span class="comment"># True：阶梯衰减（global_step / decay_steps 为整数）； False：连续衰减</span></span><br><span class="line">    name=<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该函数会指数级的减小学习率，实现了以下代码功能</span></span><br><span class="line">decayed_learning_rate = learning_rate * decay_rate ^ (global_step / decay_steps)</span><br></pre></td></tr></table></figure><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-4-29/64880644.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">global_step = tf.Variable(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 生成学习率</span></span><br><span class="line">learning_rate = tf.train.exponential_decay(learning_rate=<span class="number">0.1</span>, global_step=global_step, decay_steps=<span class="number">100</span>, decay_rate=<span class="number">0.96</span>, staircase=<span class="keyword">True</span>)</span><br><span class="line"><span class="comment"># 使用指数衰减的学习率，在minimize函数中传入global_step将自动更新该参数，从而使得学习率得到相应更新</span></span><br><span class="line">learning_step = tf.train.GradientDescentOptimizer(learning_rate).minimize(...my loss..., global_step=global_step)</span><br></pre></td></tr></table></figure><h2 id="过拟合问题"><a href="#过拟合问题" class="headerlink" title="过拟合问题"></a>过拟合问题</h2><p>过拟合指的是模型对于训练数据拟合程度过度的情况。</p><p>当某个模型过度的学习训练数据中的细节和噪音，以至于模型在新的数据上表现很差，我们称发生了<strong>过拟合</strong>。这意味着训练数据中的噪音或者随机波动也被当做概念被模型学习了,这会<strong>导致模型比较复杂</strong>。而问题就在于这些概念不适用于新的数据，从而导致模型<strong>泛化性能变差</strong>。  </p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-4-30/788202.jpg" alt="">  </p><p>为了防止过拟合，我们需要用到一些方法，如：early stopping、数据集扩增（Data augmentation）、正则化（Regularization）、Dropout等。</p><h3 id="Early-stopping"><a href="#Early-stopping" class="headerlink" title="Early stopping"></a>Early stopping</h3><p>对模型进行训练的过程即是对模型的参数进行学习更新的过程，这个参数学习的过程往往会用到一些迭代方法，如梯度下降（Gradient descent）学习算法。Early stopping便是一种<strong>迭代次数截断</strong>的方法来防止过拟合，即在模型对训练数据集迭代收敛之前停止迭代来防止过拟合。  </p><p>Early stopping方法的具体做法是：  </p><ul><li>在每一个Epoch结束时（一个Epoch集为对所有的训练数据的一轮遍历）计算验证集的 accuracy，    </li><li>在训练的过程中，记录到目前为止最好的 validation accuracy，当连续10次 Epoch（或者更多次）没达到最佳 accuracy 时，则可以认为 accuracy 不再提高了。此时便可以停止迭代了（Early Stopping）。<br>这种策略也称为“No-improvement-in-n”， n 即 Epoch 的次数，可以根据实际情况取，如10、20、30……  </li></ul><h3 id="数据集扩增（Data-augmentation）"><a href="#数据集扩增（Data-augmentation）" class="headerlink" title="数据集扩增（Data augmentation）"></a>数据集扩增（Data augmentation）</h3><p>在数据挖掘领域流行着这样的一句话，“有时候往往拥有更多的数据胜过一个好的模型”。因为我们在使用训练数据训练模型，通过这个模型对将来的数据进行拟合，前提是，<strong>训练数据与测试数据是独立同分布的</strong>。更多的数据往往使估计与模拟更准确。<br>通俗得讲，数据集扩增即需要得到更多的符合要求的数据，即和已有的数据是独立同分布的，或者近似独立同分布的。一般有以下方法：  </p><ul><li>从数据源采集更多数据  </li><li>复制原有数据加噪声  </li><li>重采样  </li><li>根据当前数据集估计数据分布参数，使用该分布产生更多数据等</li></ul><h3 id="正则化-（regularization）"><a href="#正则化-（regularization）" class="headerlink" title="正则化 （regularization）"></a>正则化 （regularization）</h3><p>正则化的本质：<strong>约束（限制）要优化的参数</strong>。<br>正则化中我们将保留所有的特征变量，但是会减小特征变量的数量级（参数数值的大小 $\theta (j)$ ）。</p><p>这个方法非常有效，当我们有很多特征变量时，其中每一个变量都能对预测产生一点影响。正如我们在房价预测的例子中看到的那样，我们可以有很多特征变量，其中每一个变量都是有用的，因此我们不希望把它们删掉，这就导致了正则化概念的发生。</p><p><a href="https://jjzhou012.github.io/2017/08/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%AD%A3%E5%88%99%E5%8C%96/" target="_blank" rel="noopener">正则化</a>  </p><ul><li>L1正则化可以产生稀疏权值矩阵，即产生一个稀疏模型，可以用于特征选择。  </li><li>L2正则化可以防止模型过拟合（overfitting）；一定程度上，L1也可以防止过拟合。<br>实践中，可以将L1，L2正则化同时使用：  </li></ul><script type="math/tex; mode=display">R(w)=\sum_i \alpha \left|w_i \right|+(1-\alpha)w_i^2</script><p>Tensorflow 可以优化带正则化的损失函数。以下给出一个简单的带L2正则化的损失函数定义：    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">w = tf.Variable(tf.random_normal([<span class="number">2</span>, <span class="number">1</span>], stddev=<span class="number">1</span>, seed=<span class="number">1</span>))</span><br><span class="line">y = tf.matmul(x, w)</span><br><span class="line"><span class="comment"># loss 由两部分组成，第一部分为均方误差损失函数，刻画了模型在训练数据上的表现；  </span></span><br><span class="line"><span class="comment"># 第二部分为正则化，防止模型过度模拟训练数据中的随机噪声</span></span><br><span class="line"><span class="comment"># lambda 为正则化项的权重，w为需要计算正则化损失的参数</span></span><br><span class="line">loss = tf.reduce_mean(tf.square(y_ - y)) + tf.contrib.layers.l2_regularizer(<span class="keyword">lambda</span>)(w)</span><br></pre></td></tr></table></figure><p>Tensorflow 提供了一些正则化函数：<br><img src="http://p5bxip6n0.bkt.clouddn.com/18-5-1/6239431.jpg" alt=""><br>以下是一些使用样例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">w = tf.constant([[<span class="number">1.0</span>, <span class="number">-2.0</span>], [<span class="number">-3.0</span>, <span class="number">4.0</span>]])  </span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    <span class="comment"># L1正则化，输出为（|1|+|-2|+|-3|+|4|）* 0.5=5</span></span><br><span class="line">    print(sess.run(tf.contrib.layers.l1_regularizer(<span class="number">0.5</span>)(w)))</span><br><span class="line">    <span class="comment"># L2正则化， 输出为（1^2 + (-2)^2 + (-3)^2 + 4^2）/ 2 * 0.5 = 7.5</span></span><br><span class="line">    <span class="comment"># Tensorflow 会将L2正则化损失值除以2使得求导得到的结果更加简洁</span></span><br><span class="line">    print(sess.run(tf.contrib.layers.l2_regularizer(<span class="number">0.5</span>)(w)))</span><br><span class="line">    <span class="comment"># L1,L2同时使用</span></span><br><span class="line">    print(sess.run(tf.contrib.layers.l1_l2_regularizer(<span class="number">0.5</span>, <span class="number">0.5</span>)(w)))</span><br></pre></td></tr></table></figure><pre><code>5.07.512.5</code></pre><p>在简单的神经网络中，这样的方式可以很好的计算带正则化的损失函数了。但当神经网络的参数增多之后，这样的方式可能导致损失函数loss的定义很长，可读性差且容易出错。更主要的是，当网络结构复杂之后定义网络结构的部分和计算损失函数的部分可能不在同一函数中，这样通过变量这样的方式计算损失函数就不方便了，为解决这个问题，可以使用 Tensorflow 中提供的集合（collection），它可以在一个计算图中保留一组实体。<br>下面代码给出了通过集合计算一个5层神经网络带L2正则化的损失函数的计算方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取一层神经网络边上的权重，并将这个权重的L2正则化损失加入名为‘losses’的集合中</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_weight</span><span class="params">(shape, lambda)</span>:</span></span><br><span class="line">    <span class="comment"># 生成一个变量</span></span><br><span class="line">    var = tf.Variable(tf.random_normal(shape), dtype=tf.float32)</span><br><span class="line">    <span class="comment"># add_to_collection函数将这个新生成变量的L2正则化损失项加入集合。</span></span><br><span class="line">    <span class="comment"># 这个函数的第一参数‘los''ses’是集合的名字，第二个参数是要加入集合的内容</span></span><br><span class="line">    tf.add_to_collection(<span class="string">'losses'</span>, tf.contrib.layers.l2_regularizer(<span class="keyword">lambda</span>)(var))</span><br><span class="line">    <span class="comment"># 返回生成的变量</span></span><br><span class="line">    <span class="keyword">return</span> var</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义输入输出</span></span><br><span class="line">x = tf.placeholder(dtype=tf.float32, shape=(<span class="keyword">None</span>, <span class="number">2</span>))</span><br><span class="line">y_ = tf.placeholder(dtype=tf.float32, shape=(<span class="keyword">None</span>, <span class="number">1</span>))</span><br><span class="line">batch_size = <span class="number">8</span></span><br><span class="line"><span class="comment"># 定义每一层网络的节点个数</span></span><br><span class="line">lay_dim = [<span class="number">2</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">1</span>]</span><br><span class="line"><span class="comment"># 神经网络层数</span></span><br><span class="line">n_layers = len(lay_dim)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个变量维护前向传播时最深层的节点，开始为输入层。</span></span><br><span class="line">cur_layer = x</span><br><span class="line"><span class="comment"># 当前层的节点个数, 开始为输入层</span></span><br><span class="line">in_dim = lay_dim[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过一个循环来生成5层全连接的神经网络结构</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n_layers):</span><br><span class="line">    <span class="comment"># 下一层的节点个数</span></span><br><span class="line">    out_dim = lay_dim[i]</span><br><span class="line">    <span class="comment"># 生成当前层中的权重变量，并将这个变量的L2正则化损失加入计算图上的集合</span></span><br><span class="line">    w = get_weight(shape=[in_dim, out_dim], <span class="number">0.001</span>)</span><br><span class="line">    bias = tf.Variable(tf.constant(<span class="number">0.1</span>, shape=[out_dim]))</span><br><span class="line">    <span class="comment"># 使用ReLU激活函数</span></span><br><span class="line">    cur_layer = tf.nn.relu(tf.matmul(cur_layer, w) + bias) </span><br><span class="line">    <span class="comment"># 进入下一层之前更新节点个数</span></span><br><span class="line">    in_dim = lay_dim[i]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在定义神经网络前向传播的同时已经将所有L2正则化损失加入了图上的集合  </span></span><br><span class="line"><span class="comment"># 这里只需要计算刻画模型在训练数据上表现的损失函数</span></span><br><span class="line">mse_loss = tf.reduce_mean(tf.square(y_ - cur_layer))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将均方误差损失函数加入损失集合</span></span><br><span class="line">tf.add_to_collection(<span class="string">'losses'</span>, mse_loss)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get_collection 得到一个列表，这个列表是所有这个集合中的元素，在这个样例中，</span></span><br><span class="line"><span class="comment"># 这些元素就是损失函数的不同部分，将它们加起来就可以得到最终的损失函数</span></span><br><span class="line">loss = tf.add_n(tf.get_collection(<span class="string">'losses'</span>))</span><br></pre></td></tr></table></figure><p>通过以上代码可以看出，通过使用集合的方法在网络结构比较复杂的情况下可以使代码可读性更高。</p><h3 id="Dropout"><a href="#Dropout" class="headerlink" title="Dropout"></a>Dropout</h3><p>Dropout是指在模型训练时随机让网络某些隐含层节点的权重不工作，不工作的那些节点可以暂时认为不是网络结构的一部分，但是它的权重得保留下来（只是暂时不更新而已），因为下次样本输入时它可能又得工作了。<br>DNNs是以概率 $p$ 舍弃部分神经元，其它神经元以概率 $q=1-p$ 被保留，舍去的神经元的输出都被设置为零。<br><img src="http://p5bxip6n0.bkt.clouddn.com/18-5-1/96305551.jpg" alt=""><br>上图为Dropout的可视化表示，左边是应用Dropout之前的网络，右边是应用了Dropout的同一个网络。  </p><p>dropout函数实现：引用keras的dropout实现源码  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dropout</span><span class="params">(x, level)</span>:</span></span><br><span class="line">    <span class="comment"># level是概率值，必须在0~1之间  </span></span><br><span class="line">    <span class="keyword">if</span> level &lt; <span class="number">0</span> <span class="keyword">or</span> level &gt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">'Dropout level must be in interval [0, 1].'</span>)</span><br><span class="line">    retain_pron = <span class="number">1.</span> - level</span><br><span class="line">    <span class="comment"># 通过binomial函数，生成与x一样的维数向量。binomial函数就像抛硬币一样，我们可以把每个神经元当做抛硬币一样  </span></span><br><span class="line">    <span class="comment"># 硬币正面的概率为p，n表示每个神经元试验的次数  </span></span><br><span class="line">    <span class="comment"># 因为我们每个神经元只需要抛一次就可以了所以n=1，size参数是神经元数量。  </span></span><br><span class="line">    <span class="comment"># 生成一个0，1分布的向量，0表示神经元被屏蔽，也就是dropout</span></span><br><span class="line">    sample = np.random.binomial(n=<span class="number">1</span>, p=retain_pron, size=x.shape)</span><br><span class="line">    print(sample)</span><br><span class="line">    <span class="comment"># 输入屏蔽部分神经元</span></span><br><span class="line">    x *=sample</span><br><span class="line">    print(x)</span><br><span class="line">    <span class="comment"># dropout后进行scale</span></span><br><span class="line">    x /= retain_pron</span><br><span class="line">    print(x)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试dropout， 输入向量x，经过dropout的结果</span></span><br><span class="line">x = np.asarray([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>], dtype=np.float32)</span><br><span class="line">dropout(x, <span class="number">0.4</span>)</span><br></pre></td></tr></table></figure><pre><code>[0 1 0 1 1 1 1 0 1 1 0][0. 1. 0. 3. 4. 5. 6. 0. 8. 9. 0.][ 0.         1.6666666  0.         5.         6.6666665  8.333333 10.         0.        13.333333  14.999999   0.       ]array([ 0.       ,  1.6666666,  0.       ,  5.       ,  6.6666665,        8.333333 , 10.       ,  0.       , 13.333333 , 14.999999 ,        0.       ], dtype=float32)</code></pre><p>为什么要进行rescale？<br>这被称为inverted dropout。当模型使用了dropout layer，训练的时候只有占比为 $p$ 的隐藏层单元参与训练，那么在预测的时候，如果所有的隐藏层单元都需要参与进来，则得到的结果相比训练时平均要大 $p$ ，为了避免这种情况，就需要测试的时候将输出结果乘以 $\frac{1}{p}$ 使下一层的输入规模保持不变。而利用inverted dropout，我们可以在训练的时候直接将dropout后留下的权重扩大 $\frac{1}{p}$ 倍，这样就可以使结果的scale保持不变，而在预测的时候也不用做额外的操作了，更方便一些。</p><p>Tensorflow 中的 dropout：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line">keep_prob = tf.placeholder(tf.float32)</span><br><span class="line">x = tf.Variable(tf.ones(shape=[<span class="number">10</span>], dtype=tf.float32))</span><br><span class="line">y = tf.nn.dropout(x, keep_prob=keep_prob)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    init_op = tf.global_variables_initializer()</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    </span><br><span class="line">    print(sess.run(y, feed_dict=&#123;keep_prob : <span class="number">0.4</span>&#125;))</span><br></pre></td></tr></table></figure><pre><code>[0.  2.5 2.5 0.  0.  2.5 0.  0.  2.5 0. ]</code></pre><h2 id="滑动平均模型"><a href="#滑动平均模型" class="headerlink" title="滑动平均模型"></a>滑动平均模型</h2><p>滑动平均模型，它可以使得模型在测试数据上更鲁棒，在使用随机梯度下降算法训练神经网络时，通过滑动平均模型可以在一定程度上提高最终模型在测试数据上的表现。其实滑动平均模型，主要是通过控制衰减率来控制参数更新前后之间的差距，从而达到减缓参数的变化值（如，参数更新前是5，更新后的值是4，通过滑动平均模型之后，参数的值会在4到5之间），如果参数更新前后的值保持不变，通过滑动平均模型之后，参数的值仍然保持不变。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tf.train.ExponentialMovingAverage(</span><br><span class="line">    decay,                              <span class="comment"># 衰减率</span></span><br><span class="line">    num_updates=<span class="keyword">None</span>,                   <span class="comment"># 动态设置decay参数</span></span><br><span class="line">    zero_debias=<span class="keyword">False</span>, </span><br><span class="line">    name=<span class="string">'ExponentialMovingAverage'</span>)</span><br></pre></td></tr></table></figure><ul><li>为了使得模型在训练的初始阶段更新得更快，ExponentialMovingAverage 还提供了 num_updates 参数来动态设置 decay 的大小，设置 num_updates 参数后，每次使用的衰减率为：   <script type="math/tex; mode=display">decay= \min \left\{decay,\  \frac{1 + num\_updates}{10 + num\_updates} \right\}</script>在 num_step 还比较小的时候，min() 会取到右边比较小的部分，也就是有一个比较小的 decay，这个时候模型更新会很快，当 step 增大时，模型更新速度会逐渐降低。</li><li>该函数对每一个待更新的变量（variable）都会维护一个影子变量（shadow variable）。影子变量的初始值就是这个变量的初始值，每次运行变量更新时，影子变量的值会更新为：  <script type="math/tex; mode=display">shadow\_variable = decay * shadow\_variable + (1 - decay) * variable</script>从公式可以看出，decay 决定了模型更新速度，decay 越大，模型越趋于稳定。实际运用中，decay 一般会设置为十分接近 1 的常数（0.999或0.9999）。  </li></ul><p>通过一段代码解释 ExponentialMovingAverage 是如何被使用的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个变量用于计算滑动平均，变量初始值为0。因为所有需要计算滑动平均的变量必须是实数型，所以指定变量类型为tf.float32</span></span><br><span class="line">v1 = tf.Variable(<span class="number">0</span>, dtype=tf.float32)</span><br><span class="line"><span class="comment"># step 变量模拟神经网络迭代轮数，用于动态控制衰减率  ， 即 num_updates 参数</span></span><br><span class="line">step = tf.Variable(<span class="number">0</span>, trainable=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个滑动平均类。初始化时给定衰减率decay和控制衰减率的变量step。</span></span><br><span class="line">ema = tf.train.ExponentialMovingAverage(decay=<span class="number">0.99</span>, num_updates=step)</span><br><span class="line"><span class="comment"># 定义一个更新变量滑动平均的操作。这里定义一个列表，每次执行该操作，列表中的变量会被更新。  </span></span><br><span class="line">maintain_averages_op = ema.apply([v1])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    init_op = tf.global_variables_initializer()</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 通过ema.average(v1)获取滑动平均之后变量的取值。</span></span><br><span class="line">    <span class="comment"># 初始化之后变量v1的值和v1的滑动平均都为0</span></span><br><span class="line">    print(<span class="string">'初始化变量和滑动平均值'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 更新变量v1的值到5</span></span><br><span class="line">    sess.run(tf.assign(v1, <span class="number">5</span>))</span><br><span class="line">    <span class="comment"># 更新v1的滑动平均值。衰减率为 min&#123;0.99 + (1+step)/(10+step)=0.1&#125;=0.1</span></span><br><span class="line">    <span class="comment"># 所以v1的滑动平均会被更新为0.1*0+0.9*5 =4.5</span></span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(<span class="string">'更新变量v1=5，滑动平均值'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 更新step的值为10000</span></span><br><span class="line">    sess.run(tf.assign(step, <span class="number">10000</span>))</span><br><span class="line">    <span class="comment"># 更新变量v1的值到10</span></span><br><span class="line">    sess.run(tf.assign(v1, <span class="number">10</span>))</span><br><span class="line">    <span class="comment"># 更新v1的滑动平均值。衰减率为 min&#123;0.99 + (1+step)/(10+step)=0.999&#125;=0.99</span></span><br><span class="line">    <span class="comment"># 所以v1的滑动平均会被更新为0.99*4.5+0.01*10 =4.555</span></span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(<span class="string">'更新v1=10,更新step=10000, 滑动平均值'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 再次更新滑动平均值，得到新的滑动平均值 0.99*4.555+0.01*10=4.60945</span></span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(<span class="string">'再次更新'</span>)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br></pre></td></tr></table></figure><pre><code>初始化变量和滑动平均值[0.0, 0.0]更新变量v1=5，滑动平均值[5.0, 4.5]更新v1=10,更新step=10000, 滑动平均值[10.0, 4.555]再次更新[10.0, 4.60945]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;神经网络优化&quot;&gt;&lt;a href=&quot;#神经网络优化&quot; class=&quot;headerlink&quot; title=&quot;神经网络优化&quot;&gt;&lt;/a&gt;神经网络优化&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;学习率设置  &lt;/li&gt;
&lt;li&gt;过拟合问题  &lt;/li&gt;
&lt;li&gt;滑动平均模型&lt;/li&gt;
&lt;/
      
    
    </summary>
    
      <category term="Tensorflow" scheme="http://yoururl.com/categories/Tensorflow/"/>
    
    
      <category term="Tensorflow" scheme="http://yoururl.com/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>reveal.js</title>
    <link href="http://yoururl.com/2018/04/25/reveal.js/"/>
    <id>http://yoururl.com/2018/04/25/reveal.js/</id>
    <published>2018-04-24T16:00:00.000Z</published>
    <updated>2018-04-25T17:20:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="reveal-js"><a href="#reveal-js" class="headerlink" title="reveal.js  "></a>reveal.js <a href="https://travis-ci.org/hakimel/reveal.js" target="_blank" rel="noopener"><img src="https://travis-ci.org/hakimel/reveal.js.svg?branch=master" alt="Build Status"></a> <a href="https://slides.com?ref=github" target="_blank" rel="noopener"><img src="https://s3.amazonaws.com/static.slid.es/images/slides-github-banner-320x40.png?1" alt="Slides" width="160" height="20"></a></h1><p>A framework for easily creating beautiful presentations using HTML. <a href="http://revealjs.com/" target="_blank" rel="noopener">Check out the live demo</a>.</p><p>reveal.js comes with a broad range of features including <a href="https://github.com/hakimel/reveal.js#markup" target="_blank" rel="noopener">nested slides</a>, <a href="https://github.com/hakimel/reveal.js#markdown" target="_blank" rel="noopener">Markdown contents</a>, <a href="https://github.com/hakimel/reveal.js#pdf-export" target="_blank" rel="noopener">PDF export</a>, <a href="https://github.com/hakimel/reveal.js#speaker-notes" target="_blank" rel="noopener">speaker notes</a> and a <a href="https://github.com/hakimel/reveal.js#api" target="_blank" rel="noopener">JavaScript API</a>. There’s also a fully featured visual editor and platform for sharing reveal.js presentations at <a href="https://slides.com?ref=github" target="_blank" rel="noopener">slides.com</a>.</p><h2 id="Table-of-contents"><a href="#Table-of-contents" class="headerlink" title="Table of contents"></a>Table of contents</h2><ul><li><a href="#online-editor">Online Editor</a></li><li><a href="#instructions">Instructions</a><ul><li><a href="#markup">Markup</a></li><li><a href="#markdown">Markdown</a></li><li><a href="#element-attributes">Element Attributes</a></li><li><a href="#slide-attributes">Slide Attributes</a></li></ul></li><li><a href="#configuration">Configuration</a></li><li><a href="#presentation-size">Presentation Size</a></li><li><a href="#dependencies">Dependencies</a></li><li><a href="#ready-event">Ready Event</a></li><li><a href="#auto-sliding">Auto-sliding</a></li><li><a href="#keyboard-bindings">Keyboard Bindings</a></li><li><a href="#touch-navigation">Touch Navigation</a></li><li><a href="#lazy-loading">Lazy Loading</a></li><li><a href="#api">API</a><ul><li><a href="#slide-changed-event">Slide Changed Event</a></li><li><a href="#presentation-state">Presentation State</a></li><li><a href="#slide-states">Slide States</a></li><li><a href="#slide-backgrounds">Slide Backgrounds</a></li><li><a href="#parallax-background">Parallax Background</a></li><li><a href="#slide-transitions">Slide Transitions</a></li><li><a href="#internal-links">Internal links</a></li><li><a href="#fragments">Fragments</a></li><li><a href="#fragment-events">Fragment events</a></li><li><a href="#code-syntax-highlighting">Code syntax highlighting</a></li><li><a href="#slide-number">Slide number</a></li><li><a href="#overview-mode">Overview mode</a></li><li><a href="#fullscreen-mode">Fullscreen mode</a></li><li><a href="#embedded-media">Embedded media</a></li><li><a href="#stretching-elements">Stretching elements</a></li><li><a href="#postmessage-api">postMessage API</a></li></ul></li><li><a href="#pdf-export">PDF Export</a></li><li><a href="#theming">Theming</a></li><li><a href="#speaker-notes">Speaker Notes</a><ul><li><a href="#share-and-print-speaker-notes">Share and Print Speaker Notes</a></li><li><a href="#server-side-speaker-notes">Server Side Speaker Notes</a></li></ul></li><li><a href="#multiplexing">Multiplexing</a><ul><li><a href="#master-presentation">Master presentation</a></li><li><a href="#client-presentation">Client presentation</a></li><li><a href="#socketio-server">Socket.io server</a></li></ul></li><li><a href="#mathjax">MathJax</a></li><li><a href="#installation">Installation</a><ul><li><a href="#basic-setup">Basic setup</a></li><li><a href="#full-setup">Full setup</a></li><li><a href="#folder-structure">Folder Structure</a></li></ul></li><li><a href="#license">License</a></li></ul><h4 id="More-reading"><a href="#More-reading" class="headerlink" title="More reading"></a>More reading</h4><ul><li><a href="https://github.com/hakimel/reveal.js/releases" target="_blank" rel="noopener">Changelog</a>: Up-to-date version history.</li><li><a href="https://github.com/hakimel/reveal.js/wiki/Example-Presentations" target="_blank" rel="noopener">Examples</a>: Presentations created with reveal.js, add your own!</li><li><a href="https://github.com/hakimel/reveal.js/wiki/Browser-Support" target="_blank" rel="noopener">Browser Support</a>: Explanation of browser support and fallbacks.</li><li><a href="https://github.com/hakimel/reveal.js/wiki/Plugins,-Tools-and-Hardware" target="_blank" rel="noopener">Plugins</a>: A list of plugins that can be used to extend reveal.js.</li></ul><h2 id="Online-Editor"><a href="#Online-Editor" class="headerlink" title="Online Editor"></a>Online Editor</h2><p>Presentations are written using HTML or Markdown but there’s also an online editor for those of you who prefer a graphical interface. Give it a try at <a href="https://slides.com?ref=github" target="_blank" rel="noopener">https://slides.com</a>.</p><h2 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h2><h3 id="Markup"><a href="#Markup" class="headerlink" title="Markup"></a>Markup</h3><p>Here’s a barebones example of a fully working reveal.js presentation:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/reveal.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/theme/white.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"reveal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slides"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Slide 1<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Slide 2<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/reveal.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">Reveal.initialize();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>The presentation markup hierarchy needs to be <code>.reveal &gt; .slides &gt; section</code> where the <code>section</code> represents one slide and can be repeated indefinitely. If you place multiple <code>section</code> elements inside of another <code>section</code> they will be shown as vertical slides. The first of the vertical slides is the “root” of the others (at the top), and will be included in the horizontal sequence. For example:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"reveal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slides"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Single Horizontal Slide<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Vertical Slide 1<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>Vertical Slide 2<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>It’s possible to write your slides using Markdown. To enable Markdown, add the <code>data-markdown</code> attribute to your <code>&lt;section&gt;</code> elements and wrap the contents in a <code>&lt;textarea data-template&gt;</code> like the example below. You’ll also need to add the <code>plugin/markdown/marked.js</code> and <code>plugin/markdown/markdown.js</code> scripts (in that order) to your HTML file.</p><p>This is based on <a href="https://gist.github.com/1343518" target="_blank" rel="noopener">data-markdown</a> from <a href="https://github.com/paulirish" target="_blank" rel="noopener">Paul Irish</a> modified to use <a href="https://github.com/chjj/marked" target="_blank" rel="noopener">marked</a> to support <a href="https://help.github.com/articles/github-flavored-markdown" target="_blank" rel="noopener">GitHub Flavored Markdown</a>. Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks).</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">data-template</span>&gt;</span></span><br><span class="line">## Page title</span><br><span class="line"></span><br><span class="line">A paragraph with some text and a [link](http://hakim.se).</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="External-Markdown"><a href="#External-Markdown" class="headerlink" title="External Markdown"></a>External Markdown</h4><p>You can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file: the <code>data-separator</code> attribute defines a regular expression for horizontal slides (defaults to <code>^\r?\n---\r?\n$</code>, a newline-bounded horizontal rule)  and <code>data-separator-vertical</code> defines vertical slides (disabled by default). The <code>data-separator-notes</code> attribute is a regular expression for specifying the beginning of the current slide’s speaker notes (defaults to <code>notes?:</code>). The <code>data-charset</code> attribute is optional and specifies which charset to use when loading the external file.</p><p>When used locally, this feature requires that reveal.js <a href="#full-setup">runs from a local web server</a>.  The following example customises all available options:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>=<span class="string">"example.md"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-separator</span>=<span class="string">"^\n\n\n"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-separator-vertical</span>=<span class="string">"^\n\n"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-separator-notes</span>=<span class="string">"^Note:"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">data-charset</span>=<span class="string">"iso-8859-15"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        Note that Windows uses `\r\n` instead of `\n` as its linefeed character.</span></span><br><span class="line"><span class="comment">        For a regex that supports all operating systems, use `\r?\n` instead of `\n`.</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Element-Attributes"><a href="#Element-Attributes" class="headerlink" title="Element Attributes"></a>Element Attributes</h4><p>Special syntax (through HTML comments) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/template"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">- Item 1 <span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="2" --&gt;</span></span></span><br><span class="line"><span class="xml">- Item 2 <span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="1" --&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Slide-Attributes"><a href="#Slide-Attributes" class="headerlink" title="Slide Attributes"></a>Slide Attributes</h4><p>Special syntax (through HTML comments) is available for adding attributes to the slide <code>&lt;section&gt;</code> elements generated by your Markdown.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/template"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- .slide: data-background="#ff0000" --&gt;</span></span></span><br><span class="line"><span class="undefined">Markdown content</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Configuring-marked"><a href="#Configuring-marked" class="headerlink" title="Configuring marked"></a>Configuring <em>marked</em></h4><p>We use <a href="https://github.com/chjj/marked" target="_blank" rel="noopener">marked</a> to parse Markdown. To customise marked’s rendering, you can pass in options when <a href="#configuration">configuring Reveal</a>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// Options which are passed into marked</span></span><br><span class="line"><span class="comment">// See https://github.com/chjj/marked#options-1</span></span><br><span class="line">markdown: &#123;</span><br><span class="line">smartypants: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>At the end of your page you need to initialize reveal by running the following code. Note that all configuration values are optional and will default to the values specified below.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display presentation control arrows</span></span><br><span class="line">controls: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Help the user learn the controls by providing hints, for example by</span></span><br><span class="line"><span class="comment">// bouncing the down arrow when they first encounter a vertical slide</span></span><br><span class="line">controlsTutorial: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Determines where controls appear, "edges" or "bottom-right"</span></span><br><span class="line">controlsLayout: <span class="string">'bottom-right'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Visibility rule for backwards navigation arrows; "faded", "hidden"</span></span><br><span class="line"><span class="comment">// or "visible"</span></span><br><span class="line">controlsBackArrows: <span class="string">'faded'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display a presentation progress bar</span></span><br><span class="line">progress: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set default timing of 2 minutes per slide</span></span><br><span class="line">defaultTiming: <span class="number">120</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display the page number of the current slide</span></span><br><span class="line">slideNumber: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Push each slide change to the browser history</span></span><br><span class="line">history: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enable keyboard shortcuts for navigation</span></span><br><span class="line">keyboard: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enable the slide overview mode</span></span><br><span class="line">overview: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Vertical centering of slides</span></span><br><span class="line">center: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enables touch navigation on devices with touch input</span></span><br><span class="line">touch: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Loop the presentation</span></span><br><span class="line">loop: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Change the presentation direction to be RTL</span></span><br><span class="line">rtl: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Randomizes the order of slides each time the presentation loads</span></span><br><span class="line">shuffle: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Turns fragments on and off globally</span></span><br><span class="line">fragments: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flags if the presentation is running in an embedded mode,</span></span><br><span class="line"><span class="comment">// i.e. contained within a limited portion of the screen</span></span><br><span class="line">embedded: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flags if we should show a help overlay when the questionmark</span></span><br><span class="line"><span class="comment">// key is pressed</span></span><br><span class="line">help: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Flags if speaker notes should be visible to all viewers</span></span><br><span class="line">showNotes: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Global override for autoplaying embedded media (video/audio/iframe)</span></span><br><span class="line"><span class="comment">// - null: Media will only autoplay if data-autoplay is present</span></span><br><span class="line"><span class="comment">// - true: All media will autoplay, regardless of individual setting</span></span><br><span class="line"><span class="comment">// - false: No media will autoplay, regardless of individual setting</span></span><br><span class="line">autoPlayMedia: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of milliseconds between automatically proceeding to the</span></span><br><span class="line"><span class="comment">// next slide, disabled when set to 0, this value can be overwritten</span></span><br><span class="line"><span class="comment">// by using a data-autoslide attribute on your slides</span></span><br><span class="line">autoSlide: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stop auto-sliding after user input</span></span><br><span class="line">autoSlideStoppable: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this method for navigation when auto-sliding</span></span><br><span class="line">autoSlideMethod: Reveal.navigateNext,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enable slide navigation via mouse wheel</span></span><br><span class="line">mouseWheel: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hides the address bar on mobile devices</span></span><br><span class="line">hideAddressBar: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Opens links in an iframe preview overlay</span></span><br><span class="line"><span class="comment">// Add `data-preview-link` and `data-preview-link="false"` to customise each link</span></span><br><span class="line"><span class="comment">// individually</span></span><br><span class="line">previewLinks: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Transition style</span></span><br><span class="line">transition: <span class="string">'slide'</span>, <span class="comment">// none/fade/slide/convex/concave/zoom</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Transition speed</span></span><br><span class="line">transitionSpeed: <span class="string">'default'</span>, <span class="comment">// default/fast/slow</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Transition style for full page slide backgrounds</span></span><br><span class="line">backgroundTransition: <span class="string">'fade'</span>, <span class="comment">// none/fade/slide/convex/concave/zoom</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of slides away from the current that are visible</span></span><br><span class="line">viewDistance: <span class="number">3</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background image</span></span><br><span class="line">parallaxBackgroundImage: <span class="string">''</span>, <span class="comment">// e.g. "'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background size</span></span><br><span class="line">parallaxBackgroundSize: <span class="string">''</span>, <span class="comment">// CSS syntax, e.g. "2100px 900px"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of pixels to move the parallax background per slide</span></span><br><span class="line"><span class="comment">// - Calculated automatically unless specified</span></span><br><span class="line"><span class="comment">// - Set to 0 to disable movement along an axis</span></span><br><span class="line">parallaxBackgroundHorizontal: <span class="literal">null</span>,</span><br><span class="line">parallaxBackgroundVertical: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// The display mode that will be used to show slides</span></span><br><span class="line">display: <span class="string">'block'</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>The configuration can be updated after initialization using the <code>configure</code> method:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Turn autoSlide off</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">autoSlide</span>: <span class="number">0</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start auto-sliding every 5s</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">autoSlide</span>: <span class="number">5000</span> &#125;);</span><br></pre></td></tr></table></figure><h3 id="Presentation-Size"><a href="#Presentation-Size" class="headerlink" title="Presentation Size"></a>Presentation Size</h3><p>All presentations have a normal size, that is, the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport.</p><p>See below for a list of configuration options related to sizing, including default values:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The "normal" size of the presentation, aspect ratio will be preserved</span></span><br><span class="line"><span class="comment">// when the presentation is scaled to fit different resolutions. Can be</span></span><br><span class="line"><span class="comment">// specified using percentage units.</span></span><br><span class="line">width: <span class="number">960</span>,</span><br><span class="line">height: <span class="number">700</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Factor of the display size that should remain empty around the content</span></span><br><span class="line">margin: <span class="number">0.1</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Bounds for smallest/largest possible scale to apply to content</span></span><br><span class="line">minScale: <span class="number">0.2</span>,</span><br><span class="line">maxScale: <span class="number">1.5</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>If you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">width: <span class="string">"100%"</span>,</span><br><span class="line">height: <span class="string">"100%"</span>,</span><br><span class="line">margin: <span class="number">0</span>,</span><br><span class="line">minScale: <span class="number">1</span>,</span><br><span class="line">maxScale: <span class="number">1</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><p>Reveal.js doesn’t <em>rely</em> on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line">dependencies: [</span><br><span class="line"><span class="comment">// Cross-browser shim that fully implements classList - https://github.com/eligrey/classList.js/</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'lib/js/classList.js'</span>, <span class="attr">condition</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> !<span class="built_in">document</span>.body.classList; &#125; &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Interpret Markdown in &lt;section&gt; elements</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/markdown/marked.js'</span>, <span class="attr">condition</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> !!<span class="built_in">document</span>.querySelector( <span class="string">'[data-markdown]'</span> ); &#125; &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/markdown/markdown.js'</span>, <span class="attr">condition</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> !!<span class="built_in">document</span>.querySelector( <span class="string">'[data-markdown]'</span> ); &#125; &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Syntax highlight for &lt;code&gt; elements</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/highlight/highlight.js'</span>, <span class="attr">async</span>: <span class="literal">true</span>, <span class="attr">callback</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; hljs.initHighlightingOnLoad(); &#125; &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Zoom in and out with Alt+click</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/zoom-js/zoom.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Speaker notes</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/notes/notes.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// MathJax</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/math/math.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>You can add your own extensions using the same syntax. The following properties are available for each dependency object:</p><ul><li><strong>src</strong>: Path to the script to load</li><li><strong>async</strong>: [optional] Flags if the script should load after reveal.js has started, defaults to false</li><li><strong>callback</strong>: [optional] Function to execute when the script has loaded</li><li><strong>condition</strong>: [optional] Function which must return true for the script to be loaded</li></ul><p>To load these dependencies, reveal.js requires <a href="http://headjs.com/" target="_blank" rel="noopener">head.js</a> <em>(a script loading library)</em> to be loaded before reveal.js.</p><h3 id="Ready-Event"><a href="#Ready-Event" class="headerlink" title="Ready Event"></a>Ready Event</h3><p>A <code>ready</code> event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already ‘ready’ you can call <code>Reveal.isReady()</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'ready'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.currentSlide, event.indexh, event.indexv</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p>Note that we also add a <code>.ready</code> class to the <code>.reveal</code> element so that you can hook into this with CSS.</p><h3 id="Auto-sliding"><a href="#Auto-sliding" class="headerlink" title="Auto-sliding"></a>Auto-sliding</h3><p>Presentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Slide every five seconds</span></span><br><span class="line">Reveal.configure(&#123;</span><br><span class="line">  autoSlide: <span class="number">5000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>When this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing »A« on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying <code>autoSlideStoppable: false</code> in your reveal.js config.</p><p>You can also override the slide duration for individual slides and fragments by using the <code>data-autoslide</code> attribute:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-autoslide</span>=<span class="string">"2000"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>After 2 seconds the first fragment will be shown.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-autoslide</span>=<span class="string">"10000"</span>&gt;</span>After 10 seconds the next fragment will be shown.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span>&gt;</span>Now, the fragment is displayed for 2 seconds before the next slide is shown.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>To override the method used for navigation when auto-sliding, you can specify the <code>autoSlideMethod</code> setting. To only navigate along the top layer and ignore vertical slides, set this to <code>Reveal.navigateRight</code>.</p><p>Whenever the auto-slide mode is resumed or paused the <code>autoslideresumed</code> and <code>autoslidepaused</code> events are fired.</p><h3 id="Keyboard-Bindings"><a href="#Keyboard-Bindings" class="headerlink" title="Keyboard Bindings"></a>Keyboard Bindings</h3><p>If you’re unhappy with any of the default keyboard bindings you can override them using the <code>keyboard</code> config option:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Reveal.configure(&#123;</span><br><span class="line">  keyboard: &#123;</span><br><span class="line">    <span class="number">13</span>: <span class="string">'next'</span>, <span class="comment">// go to the next slide when the ENTER key is pressed</span></span><br><span class="line">    <span class="number">27</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;, <span class="comment">// do something custom when ESC is pressed</span></span><br><span class="line">    <span class="number">32</span>: <span class="literal">null</span> <span class="comment">// don't do anything when SPACE is pressed (i.e. disable a reveal.js default binding)</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Touch-Navigation"><a href="#Touch-Navigation" class="headerlink" title="Touch Navigation"></a>Touch Navigation</h3><p>You can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the <code>touch</code> config option to false when initializing reveal.js.</p><p>If there’s some part of your content that needs to remain accessible to touch events you’ll need to highlight this by adding a <code>data-prevent-swipe</code> attribute to the element. One common example where this is useful is elements that need to be scrolled.</p><h3 id="Lazy-Loading"><a href="#Lazy-Loading" class="headerlink" title="Lazy Loading"></a>Lazy Loading</h3><p>When working on presentation with a lot of media or iframe content it’s important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the <code>viewDistance</code> configuration option.</p><p>To enable lazy loading all you need to do is change your <code>src</code> attributes to <code>data-src</code> as shown below. This is supported for image, video, audio and iframe elements. Lazy loaded iframes will also unload when the containing slide is no longer visible.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"image.png"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">data-src</span>=<span class="string">"http://hakim.se"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">data-src</span>=<span class="string">"video.webm"</span> <span class="attr">type</span>=<span class="string">"video/webm"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">data-src</span>=<span class="string">"video.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>The <code>Reveal</code> object exposes a JavaScript API for controlling navigation and reading state:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Navigation</span></span><br><span class="line">Reveal.slide( indexh, indexv, indexf );</span><br><span class="line">Reveal.left();</span><br><span class="line">Reveal.right();</span><br><span class="line">Reveal.up();</span><br><span class="line">Reveal.down();</span><br><span class="line">Reveal.prev();</span><br><span class="line">Reveal.next();</span><br><span class="line">Reveal.prevFragment();</span><br><span class="line">Reveal.nextFragment();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Randomize the order of slides</span></span><br><span class="line">Reveal.shuffle();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Toggle presentation states, optionally pass true/false to force on/off</span></span><br><span class="line">Reveal.toggleOverview();</span><br><span class="line">Reveal.togglePause();</span><br><span class="line">Reveal.toggleAutoSlide();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shows a help overlay with keyboard shortcuts, optionally pass true/false</span></span><br><span class="line"><span class="comment">// to force on/off</span></span><br><span class="line">Reveal.toggleHelp();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Change a config value at runtime</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">controls</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the present configuration options</span></span><br><span class="line">Reveal.getConfig();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch the current scale of the presentation</span></span><br><span class="line">Reveal.getScale();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Retrieves the previous and current slide elements</span></span><br><span class="line">Reveal.getPreviousSlide();</span><br><span class="line">Reveal.getCurrentSlide();</span><br><span class="line"></span><br><span class="line">Reveal.getIndices();        <span class="comment">// &#123; h: 0, v: 0, f: 0 &#125;</span></span><br><span class="line">Reveal.getSlidePastCount();</span><br><span class="line">Reveal.getProgress();       <span class="comment">// (0 == first slide, 1 == last slide)</span></span><br><span class="line">Reveal.getSlides();         <span class="comment">// Array of all slides</span></span><br><span class="line">Reveal.getTotalSlides();    <span class="comment">// Total number of slides</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the speaker notes for the current slide</span></span><br><span class="line">Reveal.getSlideNotes();</span><br><span class="line"></span><br><span class="line"><span class="comment">// State checks</span></span><br><span class="line">Reveal.isFirstSlide();</span><br><span class="line">Reveal.isLastSlide();</span><br><span class="line">Reveal.isOverview();</span><br><span class="line">Reveal.isPaused();</span><br><span class="line">Reveal.isAutoSliding();</span><br></pre></td></tr></table></figure><h3 id="Slide-Changed-Event"><a href="#Slide-Changed-Event" class="headerlink" title="Slide Changed Event"></a>Slide Changed Event</h3><p>A <code>slidechanged</code> event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes.</p><p>Some libraries, like MathJax (see <a href="https://github.com/hakimel/reveal.js/issues/226#issuecomment-10261609" target="_blank" rel="noopener">#226</a>), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'slidechanged'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.previousSlide, event.currentSlide, event.indexh, event.indexv</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><h3 id="Presentation-State"><a href="#Presentation-State" class="headerlink" title="Presentation State"></a>Presentation State</h3><p>The presentation’s current state can be fetched by using the <code>getState</code> method. A state object contains all of the information required to put the presentation back as it was when <code>getState</code> was first called. Sort of like a snapshot. It’s a simple object that can easily be stringified and persisted or sent over the wire.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Reveal.slide( <span class="number">1</span> );</span><br><span class="line"><span class="comment">// we're on slide 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> state = Reveal.getState();</span><br><span class="line"></span><br><span class="line">Reveal.slide( <span class="number">3</span> );</span><br><span class="line"><span class="comment">// we're on slide 3</span></span><br><span class="line"></span><br><span class="line">Reveal.setState( state );</span><br><span class="line"><span class="comment">// we're back on slide 1</span></span><br></pre></td></tr></table></figure><h3 id="Slide-States"><a href="#Slide-States" class="headerlink" title="Slide States"></a>Slide States</h3><p>If you set <code>data-state=&quot;somestate&quot;</code> on a slide <code>&lt;section&gt;</code>, “somestate” will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide.</p><p>Furthermore you can also listen to these changes in state via JavaScript:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'somestate'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Sprinkle magic</span></span><br><span class="line">&#125;, <span class="literal">false</span> );</span><br></pre></td></tr></table></figure><h3 id="Slide-Backgrounds"><a href="#Slide-Backgrounds" class="headerlink" title="Slide Backgrounds"></a>Slide Backgrounds</h3><p>Slides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a <code>data-background</code> attribute to your <code>&lt;section&gt;</code> elements. Four different types of backgrounds are supported: color, image, video and iframe.</p><h4 id="Color-Backgrounds"><a href="#Color-Backgrounds" class="headerlink" title="Color Backgrounds"></a>Color Backgrounds</h4><p>All CSS color formats are supported, including hex values, keywords, <code>rgba()</code> or <code>hsl()</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-color</span>=<span class="string">"#ff0000"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Color<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Image-Backgrounds"><a href="#Image-Backgrounds" class="headerlink" title="Image Backgrounds"></a>Image Backgrounds</h4><p>By default, background images are resized to cover the full page. Available options:</p><div class="table-container"><table><thead><tr><th style="text-align:left">Attribute</th><th style="text-align:left">Default</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">data-background-image</td><td style="text-align:left"></td><td style="text-align:left">URL of the image to show. GIFs restart when the slide opens.</td></tr><tr><td style="text-align:left">data-background-size</td><td style="text-align:left">cover</td><td style="text-align:left">See <a href="https://developer.mozilla.org/docs/Web/CSS/background-size" target="_blank" rel="noopener">background-size</a> on MDN.</td></tr><tr><td style="text-align:left">data-background-position</td><td style="text-align:left">center</td><td style="text-align:left">See <a href="https://developer.mozilla.org/docs/Web/CSS/background-position" target="_blank" rel="noopener">background-position</a> on MDN.</td></tr><tr><td style="text-align:left">data-background-repeat</td><td style="text-align:left">no-repeat</td><td style="text-align:left">See <a href="https://developer.mozilla.org/docs/Web/CSS/background-repeat" target="_blank" rel="noopener">background-repeat</a> on MDN.</td></tr></tbody></table></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-image</span>=<span class="string">"http://example.com/image.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Image<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-image</span>=<span class="string">"http://example.com/image.png"</span> <span class="attr">data-background-size</span>=<span class="string">"100px"</span> <span class="attr">data-background-repeat</span>=<span class="string">"repeat"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This background image will be sized to 100px and repeated<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Video-Backgrounds"><a href="#Video-Backgrounds" class="headerlink" title="Video Backgrounds"></a>Video Backgrounds</h4><p>Automatically plays a full size video behind the slide.</p><div class="table-container"><table><thead><tr><th style="text-align:left">Attribute</th><th style="text-align:left">Default</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">data-background-video</td><td style="text-align:left"></td><td style="text-align:left">A single video source, or a comma separated list of video sources.</td></tr><tr><td style="text-align:left">data-background-video-loop</td><td style="text-align:left">false</td><td style="text-align:left">Flags if the video should play repeatedly.</td></tr><tr><td style="text-align:left">data-background-video-muted</td><td style="text-align:left">false</td><td style="text-align:left">Flags if the audio should be muted.</td></tr><tr><td style="text-align:left">data-background-size</td><td style="text-align:left">cover</td><td style="text-align:left">Use <code>cover</code> for full screen and some cropping or <code>contain</code> for letterboxing.</td></tr></tbody></table></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-video</span>=<span class="string">"https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm"</span> <span class="attr">data-background-video-loop</span> <span class="attr">data-background-video-muted</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Video<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Iframe-Backgrounds"><a href="#Iframe-Backgrounds" class="headerlink" title="Iframe Backgrounds"></a>Iframe Backgrounds</h4><p>Embeds a web page as a slide background that covers 100% of the reveal.js width and height. The iframe is in the background layer, behind your slides, and as such it’s not possible to interact with it by default. To make your background interactive, you can add the <code>data-background-interactive</code> attribute.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-background-iframe</span>=<span class="string">"https://slides.com"</span> <span class="attr">data-background-interactive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Iframe<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Background-Transitions"><a href="#Background-Transitions" class="headerlink" title="Background Transitions"></a>Background Transitions</h4><p>Backgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing <code>backgroundTransition: &#39;slide&#39;</code> to the <code>Reveal.initialize()</code> call. Alternatively you can set <code>data-background-transition</code> on any section with a background to override that specific transition.</p><h3 id="Parallax-Background"><a href="#Parallax-Background" class="headerlink" title="Parallax Background"></a>Parallax Background</h3><p>If you want to use a parallax scrolling background, set the first two properties below when initializing reveal.js (the other two are optional).</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background image</span></span><br><span class="line">parallaxBackgroundImage: <span class="string">''</span>, <span class="comment">// e.g. "https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Parallax background size</span></span><br><span class="line">parallaxBackgroundSize: <span class="string">''</span>, <span class="comment">// CSS syntax, e.g. "2100px 900px" - currently only pixels are supported (don't use % or auto)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number of pixels to move the parallax background per slide</span></span><br><span class="line"><span class="comment">// - Calculated automatically unless specified</span></span><br><span class="line"><span class="comment">// - Set to 0 to disable movement along an axis</span></span><br><span class="line">parallaxBackgroundHorizontal: <span class="number">200</span>,</span><br><span class="line">parallaxBackgroundVertical: <span class="number">50</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Make sure that the background size is much bigger than screen size to allow for some scrolling. <a href="http://revealjs.com/?parallaxBackgroundImage=https%3A%2F%2Fs3.amazonaws.com%2Fhakim-static%2Freveal-js%2Freveal-parallax-1.jpg&amp;parallaxBackgroundSize=2100px%20900px" target="_blank" rel="noopener">View example</a>.</p><h3 id="Slide-Transitions"><a href="#Slide-Transitions" class="headerlink" title="Slide Transitions"></a>Slide Transitions</h3><p>The global presentation transition is set using the <code>transition</code> config value. You can override the global transition for a specific slide by using the <code>data-transition</code> attribute:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"zoom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This slide will override the presentation transition and zoom!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition-speed</span>=<span class="string">"fast"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Choose from three transition speeds: default, fast or slow!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can also use different in and out transitions for the same slide:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">    The train goes on …</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">    and on …</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide-in fade-out"</span>&gt;</span></span><br><span class="line">    and stops.</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"fade-in slide-out"</span>&gt;</span></span><br><span class="line">    (Passengers entering and leaving)</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-transition</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">    And it starts again.</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Internal-links"><a href="#Internal-links" class="headerlink" title="Internal links"></a>Internal links</h3><p>It’s easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute (<code>&lt;section id=&quot;some-slide&quot;&gt;</code>):</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/2/2"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/some-slide"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an <code>enabled</code> class when it’s a valid navigation route based on the current slide.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-left"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-right"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-up"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-down"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-prev"</span>&gt;</span> <span class="comment">&lt;!-- Previous vertical or horizontal slide --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"navigate-next"</span>&gt;</span> <span class="comment">&lt;!-- Next vertical or horizontal slide --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragments"><a href="#Fragments" class="headerlink" title="Fragments"></a>Fragments</h3><p>Fragments are used to highlight individual elements on a slide. Every element with the class <code>fragment</code> will be stepped through before moving on to the next slide. Here’s an example: <a href="http://revealjs.com/#/fragments" target="_blank" rel="noopener">http://revealjs.com/#/fragments</a></p><p>The default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment grow"</span>&gt;</span>grow<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment shrink"</span>&gt;</span>shrink<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment fade-out"</span>&gt;</span>fade-out<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment fade-up"</span>&gt;</span>fade-up (also down, left and right!)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment current-visible"</span>&gt;</span>visible only once<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-current-blue"</span>&gt;</span>blue only once<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-red"</span>&gt;</span>highlight-red<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-green"</span>&gt;</span>highlight-green<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment highlight-blue"</span>&gt;</span>highlight-blue<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Multiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fragment fade-in"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fragment fade-out"</span>&gt;</span>I'll fade in, then out<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The display order of fragments can be controlled using the <code>data-fragment-index</code> attribute.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-fragment-index</span>=<span class="string">"3"</span>&gt;</span>Appears last<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-fragment-index</span>=<span class="string">"1"</span>&gt;</span>Appears first<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fragment"</span> <span class="attr">data-fragment-index</span>=<span class="string">"2"</span>&gt;</span>Appears second<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragment-events"><a href="#Fragment-events" class="headerlink" title="Fragment events"></a>Fragment events</h3><p>When a slide fragment is either shown or hidden reveal.js will dispatch an event.</p><p>Some libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'fragmentshown'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.fragment = the fragment DOM element</span></span><br><span class="line">&#125; );</span><br><span class="line">Reveal.addEventListener( <span class="string">'fragmenthidden'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="comment">// event.fragment = the fragment DOM element</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><h3 id="Code-syntax-highlighting"><a href="#Code-syntax-highlighting" class="headerlink" title="Code syntax highlighting"></a>Code syntax highlighting</h3><p>By default, Reveal is configured with <a href="https://highlightjs.org/" target="_blank" rel="noopener">highlight.js</a> for code syntax highlighting. To enable syntax highlighting, you’ll have to load the highlight plugin (<a href="plugin/highlight/highlight.js">plugin/highlight/highlight.js</a>) and a highlight.js CSS theme (Reveal comes packaged with the zenburn theme: <a href="lib/css/zenburn.css">lib/css/zenburn.css</a>).</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// More info https://github.com/hakimel/reveal.js#dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/highlight/highlight.js'</span>, <span class="attr">async</span>: <span class="literal">true</span>, <span class="attr">callback</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; hljs.initHighlightingOnLoad(); &#125; &#125;,</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Below is an example with clojure code that will be syntax highlighted. When the <code>data-trim</code> attribute is present, surrounding whitespace is automatically removed.  HTML will be escaped by default. To avoid this, for example if you are using <code>&lt;mark&gt;</code> to call out a line of code, add the <code>data-noescape</code> attribute to the <code>&lt;code&gt;</code> element.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">data-trim</span> <span class="attr">data-noescape</span>&gt;</span></span><br><span class="line">(def lazy-fib</span><br><span class="line">  (concat</span><br><span class="line">   [0 1]</span><br><span class="line">   <span class="tag">&lt;<span class="name">mark</span>&gt;</span>((fn rfib [a b]<span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br><span class="line">        (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1)))</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Slide-number"><a href="#Slide-number" class="headerlink" title="Slide number"></a>Slide number</h3><p>If you would like to display the page number of the current slide you can do so using the <code>slideNumber</code> and <code>showSlideNumber</code> configuration values.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Shows the slide number using default formatting</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">slideNumber</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Slide number formatting can be configured using these variables:</span></span><br><span class="line"><span class="comment">//  "h.v": horizontal . vertical slide number (default)</span></span><br><span class="line"><span class="comment">//  "h/v": horizontal / vertical slide number</span></span><br><span class="line"><span class="comment">//    "c": flattened slide number</span></span><br><span class="line"><span class="comment">//  "c/t": flattened slide number / total slides</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">slideNumber</span>: <span class="string">'c/t'</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Control which views the slide number displays on using the "showSlideNumber" value:</span></span><br><span class="line"><span class="comment">//     "all": show on all views (default)</span></span><br><span class="line"><span class="comment">// "speaker": only show slide numbers on speaker notes view</span></span><br><span class="line"><span class="comment">//   "print": only show slide numbers when printing to PDF</span></span><br><span class="line">Reveal.configure(&#123; <span class="attr">showSlideNumber</span>: <span class="string">'speaker'</span> &#125;);</span><br></pre></td></tr></table></figure><h3 id="Overview-mode"><a href="#Overview-mode" class="headerlink" title="Overview mode"></a>Overview mode</h3><p>Press »ESC« or »O« keys to toggle the overview mode on and off. While you’re in this mode, you can still navigate between slides,<br>as if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Reveal.addEventListener( <span class="string">'overviewshown'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123; <span class="comment">/* ... */</span> &#125; );</span><br><span class="line">Reveal.addEventListener( <span class="string">'overviewhidden'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123; <span class="comment">/* ... */</span> &#125; );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Toggle the overview mode programmatically</span></span><br><span class="line">Reveal.toggleOverview();</span><br></pre></td></tr></table></figure><h3 id="Fullscreen-mode"><a href="#Fullscreen-mode" class="headerlink" title="Fullscreen mode"></a>Fullscreen mode</h3><p>Just press »F« on your keyboard to show your presentation in fullscreen mode. Press the »ESC« key to exit fullscreen mode.</p><h3 id="Embedded-media"><a href="#Embedded-media" class="headerlink" title="Embedded media"></a>Embedded media</h3><p>Add <code>data-autoplay</code> to your media element if you want it to automatically start playing when the slide is shown:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">data-autoplay</span> <span class="attr">src</span>=<span class="string">"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you want to enable or disable autoplay globally, for all embedded media, you can use the <code>autoPlayMedia</code> configuration option. If you set this to <code>true</code> ALL media will autoplay regardless of individual <code>data-autoplay</code> attributes. If you initialize with <code>autoPlayMedia: false</code> NO media will autoplay.</p><p>Note that embedded HTML5 <code>&lt;video&gt;</code>/<code>&lt;audio&gt;</code> and YouTube/Vimeo iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a <code>data-ignore</code> attribute.</p><h3 id="Embedded-iframes"><a href="#Embedded-iframes" class="headerlink" title="Embedded iframes"></a>Embedded iframes</h3><p>reveal.js automatically pushes two <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage" target="_blank" rel="noopener">post messages</a> to embedded iframes. <code>slide:start</code> when the slide containing the iframe is made visible and <code>slide:stop</code> when it is hidden.</p><h3 id="Stretching-elements"><a href="#Stretching-elements" class="headerlink" title="Stretching elements"></a>Stretching elements</h3><p>Sometimes it’s desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the <code>.stretch</code> class to an element as seen below:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This video will use up the remaining space on the slide<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">class</span>=<span class="string">"stretch"</span> <span class="attr">src</span>=<span class="string">"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Limitations:</p><ul><li>Only direct descendants of a slide section can be stretched</li><li>Only one descendant per slide section can be stretched</li></ul><h3 id="postMessage-API"><a href="#postMessage-API" class="headerlink" title="postMessage API"></a>postMessage API</h3><p>The framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here’s an example showing how you’d make a reveal.js instance in the given window proceed to slide 2:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">window</span>&gt;.postMessage( <span class="built_in">JSON</span>.stringify(&#123; <span class="attr">method</span>: <span class="string">'slide'</span>, <span class="attr">args</span>: [ <span class="number">2</span> ] &#125;), <span class="string">'*'</span> );</span><br></pre></td></tr></table></figure><p>When reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here’s how you subscribe to them from the parent window:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener( <span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event </span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse( event.data );</span><br><span class="line"><span class="keyword">if</span>( data.namespace === <span class="string">'reveal'</span> &amp;&amp; data.eventName ===<span class="string">'slidechanged'</span> ) &#123;</span><br><span class="line"><span class="comment">// Slide changed, see data.state for slide number</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p>This cross-window messaging can be toggled on or off using configuration flags.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Exposes the reveal.js API through window.postMessage</span></span><br><span class="line">postMessage: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dispatches all reveal.js events to the parent window through postMessage</span></span><br><span class="line">postMessageEvents: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="PDF-Export"><a href="#PDF-Export" class="headerlink" title="PDF Export"></a>PDF Export</h2><p>Presentations can be exported to PDF via a special print stylesheet. This feature requires that you use <a href="http://google.com/chrome" target="_blank" rel="noopener">Google Chrome</a> or <a href="https://www.chromium.org/Home" target="_blank" rel="noopener">Chromium</a> and to be serving the presentation from a webserver.<br>Here’s an example of an exported presentation that’s been uploaded to SlideShare: <a href="http://www.slideshare.net/hakimel/revealjs-300" target="_blank" rel="noopener">http://www.slideshare.net/hakimel/revealjs-300</a>.</p><h3 id="Page-size"><a href="#Page-size" class="headerlink" title="Page size"></a>Page size</h3><p>Export dimensions are inferred from the configured <a href="#presentation-size">presentation size</a>. Slides that are too tall to fit within a single page will expand onto multiple pages. You can limit how many pages a slide may expand onto using the <code>pdfMaxPagesPerSlide</code> config option, for example <code>Reveal.configure({ pdfMaxPagesPerSlide: 1 })</code> ensures that no slide ever grows to more than one printed page.</p><h3 id="Print-stylesheet"><a href="#Print-stylesheet" class="headerlink" title="Print stylesheet"></a>Print stylesheet</h3><p>To enable the PDF print capability in your presentation, the special print stylesheet at <a href="https://github.com/hakimel/reveal.js/blob/master/css/print/pdf.css" target="_blank" rel="noopener">/css/print/pdf.css</a> must be loaded. The default index.html file handles this for you when <code>print-pdf</code> is included in the query string. If you’re using a different HTML template, you can add this to your HEAD:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> link = <span class="built_in">document</span>.createElement( <span class="string">'link'</span> );</span></span><br><span class="line"><span class="javascript">link.rel = <span class="string">'stylesheet'</span>;</span></span><br><span class="line"><span class="javascript">link.type = <span class="string">'text/css'</span>;</span></span><br><span class="line"><span class="javascript">link.href = <span class="built_in">window</span>.location.search.match( <span class="regexp">/print-pdf/gi</span> ) ? <span class="string">'css/print/pdf.css'</span> : <span class="string">'css/print/paper.css'</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementsByTagName( <span class="string">'head'</span> )[<span class="number">0</span>].appendChild( link );</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Instructions-1"><a href="#Instructions-1" class="headerlink" title="Instructions"></a>Instructions</h3><ol><li>Open your presentation with <code>print-pdf</code> included in the query string i.e. <a href="http://localhost:8000/?print-pdf" target="_blank" rel="noopener">http://localhost:8000/?print-pdf</a>. You can test this with <a href="http://revealjs.com?print-pdf" target="_blank" rel="noopener">revealjs.com?print-pdf</a>.<ul><li>If you want to include <a href="#speaker-notes">speaker notes</a> in your export, you can append <code>showNotes=true</code> to the query string: <a href="http://localhost:8000/?print-pdf&amp;showNotes=true" target="_blank" rel="noopener">http://localhost:8000/?print-pdf&amp;showNotes=true</a></li></ul></li><li>Open the in-browser print dialog (CTRL/CMD+P).</li><li>Change the <strong>Destination</strong> setting to <strong>Save as PDF</strong>.</li><li>Change the <strong>Layout</strong> to <strong>Landscape</strong>.</li><li>Change the <strong>Margins</strong> to <strong>None</strong>.</li><li>Enable the <strong>Background graphics</strong> option.</li><li>Click <strong>Save</strong>.</li></ol><p><img src="https://s3.amazonaws.com/hakim-static/reveal-js/pdf-print-settings-2.png" alt="Chrome Print Settings"></p><p>Alternatively you can use the <a href="https://github.com/astefanutti/decktape" target="_blank" rel="noopener">decktape</a> project.</p><h2 id="Theming"><a href="#Theming" class="headerlink" title="Theming"></a>Theming</h2><p>The framework comes with a few different themes included:</p><ul><li>black: Black background, white text, blue links (default theme)</li><li>white: White background, black text, blue links</li><li>league: Gray background, white text, blue links (default theme for reveal.js &lt; 3.0.0)</li><li>beige: Beige background, dark text, brown links</li><li>sky: Blue background, thin dark text, blue links</li><li>night: Black background, thick white text, orange links</li><li>serif: Cappuccino background, gray text, brown links</li><li>simple: White background, black text, blue links</li><li>solarized: Cream-colored background, dark green text, blue links</li></ul><p>Each theme is available as a separate stylesheet. To change theme you will need to replace <strong>black</strong> below with your desired theme name in index.html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/theme/black.css"</span> <span class="attr">id</span>=<span class="string">"theme"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you want to add a theme of your own see the instructions here: <a href="https://github.com/hakimel/reveal.js/blob/master/css/theme/README.md" target="_blank" rel="noopener">/css/theme/README.md</a>.</p><h2 id="Speaker-Notes"><a href="#Speaker-Notes" class="headerlink" title="Speaker Notes"></a>Speaker Notes</h2><p>reveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven’t written any notes. Press the »S« key on your keyboard to open the notes window.</p><p>A speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking/tapping on it.</p><p>Notes are defined by appending an <code>&lt;aside&gt;</code> element to a slide as seen below. You can add the <code>data-markdown</code> attribute to the aside element if you prefer writing notes using Markdown.</p><p>Alternatively you can add your notes in a <code>data-notes</code> attribute on the slide. Like <code>&lt;section data-notes=&quot;Something important&quot;&gt;&lt;/section&gt;</code>.</p><p>When used locally, this feature requires that reveal.js <a href="#full-setup">runs from a local web server</a>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Some Slide<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"notes"</span>&gt;</span></span><br><span class="line">Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit »S« on your keyboard).</span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you’re using the external Markdown plugin, you can add notes with the help of a special delimiter:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">data-markdown</span>=<span class="string">"example.md"</span> <span class="attr">data-separator</span>=<span class="string">"^\n\n\n"</span> <span class="attr">data-separator-vertical</span>=<span class="string">"^\n\n"</span> <span class="attr">data-separator-notes</span>=<span class="string">"^Note:"</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># Title</span><br><span class="line">## Sub-title</span><br><span class="line"></span><br><span class="line">Here is some content...</span><br><span class="line"></span><br><span class="line">Note:</span><br><span class="line">This will only display in the notes window.</span><br></pre></td></tr></table></figure><h4 id="Share-and-Print-Speaker-Notes"><a href="#Share-and-Print-Speaker-Notes" class="headerlink" title="Share and Print Speaker Notes"></a>Share and Print Speaker Notes</h4><p>Notes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the <code>showNotes</code> configuration value set to <code>true</code>. Notes will appear along the bottom of the presentations.</p><p>When <code>showNotes</code> is enabled notes are also included when you <a href="https://github.com/hakimel/reveal.js#pdf-export" target="_blank" rel="noopener">export to PDF</a>. By default, notes are printed in a semi-transparent box on top of the slide. If you’d rather print them on a separate page after the slide, set <code>showNotes: &quot;separate-page&quot;</code>.</p><h4 id="Speaker-notes-clock-and-timers"><a href="#Speaker-notes-clock-and-timers" class="headerlink" title="Speaker notes clock and timers"></a>Speaker notes clock and timers</h4><p>The speaker notes window will also show:</p><ul><li>Time elapsed since the beginning of the presentation.  If you hover the mouse above this section, a timer reset button will appear.</li><li>Current wall-clock time</li><li>(Optionally) a pacing timer which indicates whether the current pace of the presentation is on track for the right timing (shown in green), and if not, whether the presenter should speed up (shown in red) or has the luxury of slowing down (blue).</li></ul><p>The pacing timer can be enabled by configuring by the <code>defaultTiming</code> parameter in the <code>Reveal</code> configuration block, which specifies the number of seconds per slide.  120 can be a reasonable rule of thumb.  Timings can also be given per slide <code>&lt;section&gt;</code> by setting the <code>data-timing</code> attribute.  Both values are in numbers of seconds.</p><h2 id="Server-Side-Speaker-Notes"><a href="#Server-Side-Speaker-Notes" class="headerlink" title="Server Side Speaker Notes"></a>Server Side Speaker Notes</h2><p>In some cases it can be desirable to run notes on a separate device from the one you’re presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'socket.io/socket.io.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/notes-server/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Then:</p><ol><li>Install <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (4.0.0 or later)</li><li>Run <code>npm install</code></li><li>Run <code>node plugin/notes-server</code></li></ol><h2 id="Multiplexing"><a href="#Multiplexing" class="headerlink" title="Multiplexing"></a>Multiplexing</h2><p>The multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>.</p><p>The multiplex plugin needs the following 3 things to operate:</p><ol><li>Master presentation that has control</li><li>Client presentations that follow the master</li><li>Socket.io server to broadcast events from the master to the clients</li></ol><h4 id="Master-presentation"><a href="#Master-presentation" class="headerlink" title="Master presentation"></a>Master presentation</h4><p>Served from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter’s) computer. (It’s safer to run the master presentation from your own computer, so if the venue’s Internet goes down it doesn’t stop the show.) An example would be to execute the following commands in the directory of your master presentation:</p><ol><li><code>npm install node-static</code></li><li><code>static</code></li></ol><p>If you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute <code>node plugin/notes-server</code> in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes/static-file server.</p><p>You can then access your master presentation at <code>http://localhost:1947</code></p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="string">'13652805320794272084'</span>, <span class="comment">// Obtained from the socket.io server. Gives this (the master) control of the presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// Obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'https://reveal-js-multiplex-ccjbegmaii.now.sh'</span> <span class="comment">// Location of socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/master.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// and if you want speaker notes</span></span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/notes-server/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Client-presentation"><a href="#Client-presentation" class="headerlink" title="Client presentation"></a>Client presentation</h4><p>Served from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via <code>http://example.com/path/to/presentation/client/index.html</code>, with the configuration below causing them to connect to the socket.io server as clients.</p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="literal">null</span>, <span class="comment">// null so the clients do not have control of the master presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// id, obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'https://reveal-js-multiplex-ccjbegmaii.now.sh'</span> <span class="comment">// Location of socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Socket-io-server"><a href="#Socket-io-server" class="headerlink" title="Socket.io server"></a>Socket.io server</h4><p>Server that receives the <code>slideChanged</code> events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands:</p><ol><li><code>npm install</code></li><li><code>node plugin/multiplex</code></li></ol><p>Or you can use the socket.io server at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>.</p><p>You’ll need to generate a unique secret and token pair for your master and client presentations. To do so, visit <code>http://example.com/token</code>, where <code>http://example.com</code> is the location of your socket.io server. Or if you’re going to use the socket.io server at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>, visit <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/token" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/token</a>.</p><p>You are very welcome to point your presentations at the Socket.io server running at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>, but availability and stability are not guaranteed.</p><p>For anything mission critical I recommend you run your own server. The easiest way to do this is by installing <a href="https://zeit.co/now" target="_blank" rel="noopener">now</a>. With that installed, deploying your own Multiplex server is as easy running the following command from the reveal.js folder: <code>now plugin/multiplex</code>.</p><h5 id="socket-io-server-as-file-static-server"><a href="#socket-io-server-as-file-static-server" class="headerlink" title="socket.io server as file static server"></a>socket.io server as file static server</h5><p>The socket.io server can play the role of static file server for your client presentation, as in the example at <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a>. (Open <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a> in two browsers. Navigate through the slides on one, and the other will update to match.)</p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="literal">null</span>, <span class="comment">// null so the clients do not have control of the master presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// id, obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'example.com:80'</span> <span class="comment">// Location of your socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>It can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don’t want to use speaker notes). (Open <a href="https://reveal-js-multiplex-ccjbegmaii.now.sh/" target="_blank" rel="noopener">https://reveal-js-multiplex-ccjbegmaii.now.sh/</a> in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don’t want your audience to mess with your slides while you’re presenting. ;)</p><p>Example configuration:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options...</span></span><br><span class="line"></span><br><span class="line">multiplex: &#123;</span><br><span class="line"><span class="comment">// Example values. To generate your own, see the socket.io server instructions.</span></span><br><span class="line">secret: <span class="string">'13652805320794272084'</span>, <span class="comment">// Obtained from the socket.io server. Gives this (the master) control of the presentation</span></span><br><span class="line">id: <span class="string">'1ea875674b17ca76'</span>, <span class="comment">// Obtained from socket.io server</span></span><br><span class="line">url: <span class="string">'example.com:80'</span> <span class="comment">// Location of your socket.io server</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't forget to add the dependencies</span></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'//cdn.socket.io/socket.io-1.3.5.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/master.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/multiplex/client.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// other dependencies...</span></span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h2><p>If you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the <a href="http://www.mathjax.org/" target="_blank" rel="noopener">MathJax</a> library. To use it you’ll need to include it as a reveal.js dependency, <a href="#dependencies">find our more about dependencies here</a>.</p><p>The plugin defaults to using <a href="http://en.wikipedia.org/wiki/LaTeX" target="_blank" rel="noopener">LaTeX</a> but that can be adjusted through the <code>math</code> configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you’ll need to download a copy of the library and adjust the <code>mathjax</code> configuration value.</p><p>Below is an example of how the plugin can be configured. If you don’t intend to change these values you do not need to include the <code>math</code> config object at all.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Reveal.initialize(&#123;</span><br><span class="line"><span class="comment">// other options ...</span></span><br><span class="line"></span><br><span class="line">math: &#123;</span><br><span class="line">mathjax: <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js'</span>,</span><br><span class="line">config: <span class="string">'TeX-AMS_HTML-full'</span>  <span class="comment">// See http://docs.mathjax.org/en/latest/config-files.html</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">dependencies: [</span><br><span class="line">&#123; <span class="attr">src</span>: <span class="string">'plugin/math/math.js'</span>, <span class="attr">async</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Read MathJax’s documentation if you need <a href="http://docs.mathjax.org/en/latest/start.html#secure-access-to-the-cdn" target="_blank" rel="noopener">HTTPS delivery</a> or serving of <a href="http://docs.mathjax.org/en/latest/configuration.html#loading-mathjax-from-the-cdn" target="_blank" rel="noopener">specific versions</a> for stability.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>The <strong>basic setup</strong> is for authoring presentations only. The <strong>full setup</strong> gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source.</p><h3 id="Basic-setup"><a href="#Basic-setup" class="headerlink" title="Basic setup"></a>Basic setup</h3><p>The core of reveal.js is very easy to install. You’ll simply need to download a copy of this repository and open the index.html file directly in your browser.</p><ol><li>Download the latest version of reveal.js from <a href="https://github.com/hakimel/reveal.js/releases" target="_blank" rel="noopener">https://github.com/hakimel/reveal.js/releases</a></li><li>Unzip and replace the example contents in index.html with your own</li><li>Open index.html in a browser to view it</li></ol><h3 id="Full-setup"><a href="#Full-setup" class="headerlink" title="Full setup"></a>Full setup</h3><p>Some reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code.</p><ol><li><p>Install <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (4.0.0 or later)</p></li><li><p>Clone the reveal.js repository</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/hakimel/reveal.js.git</span><br></pre></td></tr></table></figure></li><li><p>Navigate to the reveal.js folder</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> reveal.js</span><br></pre></td></tr></table></figure></li><li><p>Install dependencies</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>Serve the presentation and monitor source files for changes</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm start</span><br></pre></td></tr></table></figure></li><li><p>Open <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a> to view your presentation</p><p>You can change the port by using <code>npm start -- --port=8001</code>.</p></li></ol><h3 id="Folder-Structure"><a href="#Folder-Structure" class="headerlink" title="Folder Structure"></a>Folder Structure</h3><ul><li><strong>css/</strong> Core styles without which the project does not function</li><li><strong>js/</strong> Like above but for JavaScript</li><li><strong>plugin/</strong> Components that have been developed as extensions to reveal.js</li><li><strong>lib/</strong> All other third party assets (JavaScript, CSS, fonts)</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>MIT licensed</p><p>Copyright (C) 2017 Hakim El Hattab, <a href="http://hakim.se" target="_blank" rel="noopener">http://hakim.se</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;reveal-js&quot;&gt;&lt;a href=&quot;#reveal-js&quot; class=&quot;headerlink&quot; title=&quot;reveal.js  &quot;&gt;&lt;/a&gt;reveal.js &lt;a href=&quot;https://travis-ci.org/hakimel/reveal.j
      
    
    </summary>
    
      <category term="reveal.js" scheme="http://yoururl.com/categories/reveal-js/"/>
    
    
      <category term="reveal.js" scheme="http://yoururl.com/tags/reveal-js/"/>
    
  </entry>
  
  <entry>
    <title>python：对象引用、可变性（二）</title>
    <link href="http://yoururl.com/2018/04/18/python%EF%BC%9A%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E3%80%81%E5%8F%AF%E5%8F%98%E6%80%A7%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoururl.com/2018/04/18/python：对象引用、可变性（二）/</id>
    <published>2018-04-17T16:01:00.000Z</published>
    <updated>2018-04-18T17:25:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="函数参数引用"><a href="#函数参数引用" class="headerlink" title="函数参数引用"></a>函数参数引用</h3><p>python 唯一支持的参数传递模式是 <strong>共享传参</strong>。<br>共享传参： 指函数的各个形参获得实参中各个引用的副本。 也就是说，函数内部的形参是实参的别名。</p><p>因此，在函数中修改传入参数的可变对象， 会影响实参。 但对象的标识不会改变。</p><p>ex1. 函数可能会修改收到的任何可变对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    a += b</span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line">print(<span class="string">'f: '</span>, f(x, y))</span><br><span class="line">print(<span class="string">'x：'</span>, x)       <span class="comment"># 数字没变</span></span><br><span class="line">print(<span class="string">'y：'</span>, y)</span><br></pre></td></tr></table></figure><pre><code>f:  3x： 1y： 2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">b = [<span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">print(<span class="string">'f:'</span>, f(a, b))</span><br><span class="line">print(<span class="string">'a:'</span>, a)        <span class="comment"># 列表a变了</span></span><br><span class="line">print(<span class="string">'b:'</span>, b)</span><br></pre></td></tr></table></figure><pre><code>f: [1, 2, 3, 4]a: [1, 2, 3, 4]b: [3, 4]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">u = (<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">print(<span class="string">'f:'</span>, f(t, u))</span><br><span class="line">print(<span class="string">'t:'</span>, t)        <span class="comment"># 元组t没变</span></span><br><span class="line">print(<span class="string">'u:'</span>, u)</span><br></pre></td></tr></table></figure><pre><code>f: (1, 2, 3, 4)t: (1, 2)u: (3, 4)</code></pre><h4 id="不要使用可变类型作为参数默认值"><a href="#不要使用可变类型作为参数默认值" class="headerlink" title="不要使用可变类型作为参数默认值"></a>不要使用可变类型作为参数默认值</h4><p>ex2. 说明可变默认值的影响</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bus</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, passengers=[])</span>:</span>    <span class="comment"># 默认值为空列表</span></span><br><span class="line">        self.passengers = passengers</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pick</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.append(name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drop</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.remove(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bus1 = bus([<span class="string">'A'</span>, <span class="string">'B'</span>])</span><br><span class="line">bus1.passengers</span><br></pre></td></tr></table></figure><pre><code>[&#39;A&#39;, &#39;B&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bus1.pick(<span class="string">'C'</span>)</span><br><span class="line">bus1.drop(<span class="string">'A'</span>)</span><br><span class="line">bus1.passengers          <span class="comment"># bus1 未出现异常</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;B&#39;, &#39;C&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bus2 = bus()             <span class="comment"># 一开始bus2是空的，因此把默认的空列表赋值给self.passengers</span></span><br><span class="line">bus2.pick(<span class="string">'D'</span>)</span><br><span class="line">bus2.passengers</span><br></pre></td></tr></table></figure><pre><code>[&#39;D&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bus3 = bus()             <span class="comment"># 一开始bus3也是空的，因此把默认的空列表赋值给self.passengers</span></span><br><span class="line">bus3.passengers          <span class="comment"># 但是默认列表不为空， 登上bus2的D出现在bus3中</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;D&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bus3.pick(<span class="string">'E'</span>)</span><br><span class="line">bus2.passengers          <span class="comment"># 登上bus3的E出现在bus2中</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;D&#39;, &#39;E&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus2.passengers <span class="keyword">is</span> bus3.passengers</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><p>问题是，bus2.passengers 和 bus3.passengers 指代同一个列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus1.passengers <span class="keyword">is</span> bus2.passengers</span><br></pre></td></tr></table></figure><pre><code>False</code></pre><p>而bus1.passengers是另一个列表</p><p>问题在于： 没有指定初始乘客的bus实例会共享一个乘客列表。<br><strong>没有指定初始值的实例会共享一个对象。</strong></p><p>本例中，实例化bus时，如果传入乘客，会按预期运作。但不为bus指定乘客的话，会发生奇怪的事。<br>因为初始化时，self.passengers变成passengers参数默认值的别名。问题的根源在于，<strong>默认值在定义函数时计算（通常在加载模块时），因此默认值变成了函数对象的属性。如果默认值是可变对象，而且修改了它的值，那么后续的函数调用都会收到影响。</strong></p><p>我们可以审查bus.__init__对象，查看它的__defaults__属性中的乘客</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir(bus.__init__)</span><br></pre></td></tr></table></figure><pre><code>[&#39;__annotations__&#39;, &#39;__call__&#39;, &#39;__class__&#39;, &#39;__closure__&#39;, &#39;__code__&#39;, &#39;__defaults__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__get__&#39;, &#39;__getattribute__&#39;, &#39;__globals__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__kwdefaults__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__name__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__qualname__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus.__init__.__defaults__</span><br></pre></td></tr></table></figure><pre><code>([&#39;D&#39;, &#39;E&#39;],)</code></pre><p>最后，我们可以验证bus2.passenges是一个别名，它绑定到bus.__init__.__defaults__属性的第一个元素上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus.__init__.__defaults__[<span class="number">0</span>] <span class="keyword">is</span> bus2.passengers</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><p>这个问题说明了为什么通常使用None作为接受可变值参数的默认值。</p><h4 id="防御可变参数"><a href="#防御可变参数" class="headerlink" title="防御可变参数"></a>防御可变参数</h4><p>ex3. 接受可变参数的影响</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwilighBus</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, passengers=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> passengers <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            self.passengers = []</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.passengers = passengers      <span class="comment"># 赋值语句把self.passengers 变成passengers的别名， passengers 是传给__init__方法的实参的别名</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pick</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.append(name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drop</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.remove(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">team = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</span><br><span class="line">bus = TwilighBus(team)</span><br><span class="line">bus.drop(<span class="string">'A'</span>)</span><br><span class="line">bus.pick(<span class="string">'D'</span>)</span><br><span class="line">print(<span class="string">'self.passengers: '</span>,bus.passengers)     </span><br><span class="line">print(<span class="string">'team: '</span>,team)                          <span class="comment"># remove()和append()会修改传给构造方法的那个list</span></span><br></pre></td></tr></table></figure><pre><code>self.passengers:  [&#39;B&#39;, &#39;C&#39;, &#39;D&#39;]team:  [&#39;B&#39;, &#39;C&#39;, &#39;D&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(team), id(bus.passengers)                  <span class="comment"># 共享同一个对象</span></span><br></pre></td></tr></table></figure><pre><code>(2677046974216, 2677046974216)</code></pre><p>上述例子，类为传给构造方法的列表创建了别名，self.passengers 和 passengers 两个标识共享同一个 list。<br>正确的做法是，在__init__中，传入 passengers 参数时，应该把参数值的副本赋值给self.passengers，如下：<br>ex4. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwilighBus</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, passengers=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> passengers <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            self.passengers = []</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.passengers = list(passengers)    <span class="comment"># 把参数值的副本赋值给self.passengers</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pick</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.append(name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drop</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.remove(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">team = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</span><br><span class="line">bus = TwilighBus(team)</span><br><span class="line">bus.drop(<span class="string">'A'</span>)</span><br><span class="line">bus.pick(<span class="string">'D'</span>)</span><br><span class="line">print(<span class="string">'self.passengers: '</span>,bus.passengers)  </span><br><span class="line">print(<span class="string">'team: '</span>,team)                              <span class="comment"># 不改变初始化时传入的实参</span></span><br></pre></td></tr></table></figure><pre><code>self.passengers:  [&#39;B&#39;, &#39;C&#39;, &#39;D&#39;]team:  [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(team), id(bus.passengers)                      <span class="comment"># 不同对象的别名</span></span><br></pre></td></tr></table></figure><pre><code>(2677047040968, 2677046999688)</code></pre><p>除非确实想修改通过参数传入的对象，否则在类中直接把参数赋值给实例变量之前一定要考虑清楚，因为这样会为参数对象创建别名。如果不确定，就创建副本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;函数参数引用&quot;&gt;&lt;a href=&quot;#函数参数引用&quot; class=&quot;headerlink&quot; title=&quot;函数参数引用&quot;&gt;&lt;/a&gt;函数参数引用&lt;/h3&gt;&lt;p&gt;python 唯一支持的参数传递模式是 &lt;strong&gt;共享传参&lt;/strong&gt;。&lt;br&gt;共享传参： 指函
      
    
    </summary>
    
      <category term="python" scheme="http://yoururl.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoururl.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python：对象引用、可变性（一）</title>
    <link href="http://yoururl.com/2018/04/18/python%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8/"/>
    <id>http://yoururl.com/2018/04/18/python对象引用/</id>
    <published>2018-04-17T16:00:00.000Z</published>
    <updated>2018-04-18T17:25:25.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="变量是标注，不是盒子"><a href="#变量是标注，不是盒子" class="headerlink" title="变量是标注，不是盒子"></a>变量是标注，不是盒子</h3><p>ex1 变量a,b引用同一个列表，而非副本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = a</span><br><span class="line">a.append(<span class="number">4</span>)</span><br><span class="line">b</span><br></pre></td></tr></table></figure><pre><code>[1, 2, 3, 4]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b.append(<span class="number">5</span>)</span><br><span class="line">a</span><br></pre></td></tr></table></figure><pre><code>[1, 2, 3, 4, 5]</code></pre><p>把变量分配给对象，毕竟，对象在赋值之前就创建了</p><p>ex2 创建对象之后才会把变量分配给对象:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cizmo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'Cizmo id: %d'</span> % id(self))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = Cizmo()</span><br></pre></td></tr></table></figure><pre><code>Cizmo id: 2471747005520</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = Cizmo() * <span class="number">10</span></span><br></pre></td></tr></table></figure><pre><code>Cizmo id: 2471747003504---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-6-4480d877b50b&gt; in &lt;module&gt;()----&gt; 1 y = Cizmo() * 10TypeError: unsupported operand type(s) for *: &#39;Cizmo&#39; and &#39;int&#39;</code></pre><p>在尝试求积之前会先创建一个Cimzo实例，一定不会先创建变量y。</p><p>变量只是标注，可以为对象添加多个标注，相当于别名。</p><h3 id="标识、相等性、别名"><a href="#标识、相等性、别名" class="headerlink" title="标识、相等性、别名"></a>标识、相等性、别名</h3><p>ex3 同一对象可以有多个标注，就是别名:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">charles = &#123;<span class="string">'name'</span>: <span class="string">'charles L. Dodgson'</span>, <span class="string">'born'</span>: <span class="string">'1892'</span>&#125;</span><br><span class="line">lewis = charles</span><br><span class="line">lewis <span class="keyword">is</span> charles</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><p>lewis 是 chaeles 的别名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(lewis), id(charles)</span><br></pre></td></tr></table></figure><pre><code>(2471747375368, 2471747375368)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lewis[<span class="string">'balance'</span>] = <span class="number">950</span></span><br><span class="line">charles</span><br></pre></td></tr></table></figure><pre><code>{&#39;balance&#39;: 950, &#39;born&#39;: &#39;1892&#39;, &#39;name&#39;: &#39;charles L. Dodgson&#39;}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alex = &#123;<span class="string">'balance'</span>: <span class="number">950</span>, <span class="string">'born'</span>: <span class="string">'1892'</span>, <span class="string">'name'</span>: <span class="string">'charles L. Dodgson'</span>&#125;</span><br><span class="line">alex == charles</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alex <span class="keyword">is</span> <span class="keyword">not</span> charles</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><p>alex 与 charles 绑定的对象有相同的值，但两者标识不同</p><p>每个变量都有标识、类型和值，对象一旦创建，标识不会改变；可以把标志理解为对象在内存中的地址。<br>is 运算符比较两个对象的标识； id()函数返回对象标识的整数表示。</p><h4 id="和-is"><a href="#和-is" class="headerlink" title="== 和 is"></a>== 和 is</h4><p>== 运算符比较两个对象的值（对象中保存的数据），is 比较两个对象的标识。</p><p>is 运算符比 == 速度快，因为其不能重载，python不用寻找并调用特殊方法，直接比较两个整数ID。</p><h4 id="元组的相对不可变性"><a href="#元组的相对不可变性" class="headerlink" title="元组的相对不可变性"></a>元组的相对不可变性</h4><p>元组与多数python集合（列表、字典、集，等）一样，保存的是对象的引用。<br>而str、bytes和 array.array等单一类型序列是扁平的，它们保存的不是引用，而是在连续的内存中保存数据本身（字符、字节和数字）</p><p>元组的不可变性指tuple数据结构的物理内容（即保存的引用）不可变，与引用的对象无关。如果引用的元素是可变的，即使元组本身不可变，元素依然可变。</p><p>ex4 :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1 = (<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>])  <span class="comment"># t1 不可变， t1[-1]可变</span></span><br><span class="line">t2 = (<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">t1 == t2</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(t1[<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><pre><code>2471747846024</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t1[<span class="number">-1</span>].append(<span class="number">5</span>)</span><br><span class="line">t1</span><br></pre></td></tr></table></figure><pre><code>(1, 2, [3, 4, 5])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(t1[<span class="number">-1</span>])  <span class="comment"># 标识不变，值变了</span></span><br></pre></td></tr></table></figure><pre><code>2471747846024</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t1 == t2</span><br></pre></td></tr></table></figure><pre><code>False</code></pre><h3 id="浅复制"><a href="#浅复制" class="headerlink" title="浅复制"></a>浅复制</h3><p>复制列表（或多数内置的可变集合）最简单的方式是使用内置的类型构造方法。</p><p>ex5 构造方法 复制列表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="number">3</span>, [<span class="number">55</span>, <span class="number">44</span>], (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)]</span><br><span class="line">l2 = list(l1)</span><br><span class="line">l2</span><br></pre></td></tr></table></figure><pre><code>[3, [55, 44], (1, 2, 3)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l1 == l2    <span class="comment"># 副本与原列表相等</span></span><br></pre></td></tr></table></figure><pre><code>True</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l2 <span class="keyword">is</span> l1    <span class="comment"># 但两者指代不同对象</span></span><br></pre></td></tr></table></figure><pre><code>False</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l1.append(<span class="number">6</span>)</span><br><span class="line">l2</span><br></pre></td></tr></table></figure><pre><code>[3, [55, 44], (1, 2, 3)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l1[<span class="number">1</span>].append(<span class="number">60</span>)     <span class="comment"># 改变原容器中可变元素导致的副本变化</span></span><br><span class="line">l2</span><br></pre></td></tr></table></figure><pre><code>[3, [55, 44, 60], (1, 2, 3)]</code></pre><p>对列表和其他可变序列来说，还能使用简洁的l2 = l1[:]语句创建副本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l3 = [<span class="number">3</span>, [<span class="number">55</span>, <span class="number">44</span>], (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)]</span><br><span class="line">l4 = l3[:]</span><br><span class="line">l4</span><br></pre></td></tr></table></figure><pre><code>[3, [55, 44], (1, 2, 3)]</code></pre><p>构造方法和 [:] 做的是浅复制（即复制了最外层容器，副本中的元素是源容器中元素的引用）。<br>如果所有元素都是不可变的，不会产生问题，还能节省内存；如果有可变元素，可能会导致问题。</p><p>ex6 浅复制的问题:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="number">3</span>, [<span class="number">55</span>, <span class="number">44</span>], (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)]</span><br><span class="line">l2 = list(l1)</span><br><span class="line">l1.append(<span class="number">100</span>)         <span class="comment"># l1追加100，对l2 无影响 </span></span><br><span class="line">l1[<span class="number">1</span>].remove(<span class="number">55</span>)       <span class="comment"># 内部列表 l1[1] 删除55， 对l2有影响，因为l2[1] 和 l1[1] 绑定同一个 列表</span></span><br><span class="line">print(<span class="string">'l1:'</span>, l1)</span><br><span class="line">print(<span class="string">'l2:'</span>, l2)</span><br></pre></td></tr></table></figure><pre><code>l1: [3, [44], (1, 2, 3), 100]l2: [3, [44], (1, 2, 3)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">l2[<span class="number">1</span>] += [<span class="number">33</span>, <span class="number">22</span>]      <span class="comment"># l2[1]引用的list, +=运算符修改list,   修改对l1也有影响，因为l1[1] 是 l2[1] 的别名 </span></span><br><span class="line">l2[<span class="number">2</span>] += (<span class="number">33</span>, <span class="number">22</span>)      <span class="comment"># l2[2]引用的元组，+=运算符创建新元组，重新绑定给变量l2[2], 因此，l1 ,l2最后位置上的元组不是同一个对象。</span></span><br><span class="line">print(<span class="string">'l1:'</span>, l1)</span><br><span class="line">print(<span class="string">'l2:'</span>, l2)</span><br></pre></td></tr></table></figure><pre><code>l1: [3, [44, 33, 22], (1, 2, 3), 100]l2: [3, [44, 33, 22], (1, 2, 3, 33, 22)]</code></pre><p>因此，浅复制容易操作，但对于包含可变元素的对象，改变源对象或副本可能会产生不良结果。</p><h4 id="深复制和浅复制"><a href="#深复制和浅复制" class="headerlink" title="深复制和浅复制"></a>深复制和浅复制</h4><p>深复制：副本不共享内部对象的引用</p><p>copy模块提供的 deepcopy 和 copy 函数能为任意对象做深复制和浅复制。</p><p>ex7 copy() 和 deepcopy() 的影响:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 校车乘客中途上下车</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bus</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, passengers=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> passengers <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            self.passengers = []</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.passengers = list(passengers)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pick</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.append(name)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drop</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.passengers.remove(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">bus1 = bus([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>])</span><br><span class="line">bus2 = copy.copy(bus1)        <span class="comment"># 浅复制</span></span><br><span class="line">bus3 = copy.deepcopy(bus1)    <span class="comment"># 深复制</span></span><br><span class="line">id(bus1), id(bus2), id(bus3)   <span class="comment"># 创建三个不同的实例</span></span><br></pre></td></tr></table></figure><pre><code>(2464686488488, 2464686489216, 2464686487872)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bus1.drop(<span class="string">'A'</span>)</span><br><span class="line">bus2.passengers        <span class="comment"># bus1,bus2 共享同一个列表对象，因为 bus2 是 bus1 的浅复制副本</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;B&#39;, &#39;C&#39;, &#39;D&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus3.passengers        <span class="comment"># bus3 是 bus1 的深复制副本， 它的passengers属性指代另一个列表</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(bus1.passengers), id(bus2.passengers), id(bus3.passengers)</span><br></pre></td></tr></table></figure><pre><code>(2464687364872, 2464687364872, 2464685576712)</code></pre><p>Note： 一般来说，深复制并不简单。若对象有循环引用，算法会进入无限循环。 deepcopy会记住已经复制的对象， 因此能优雅的处理循环引用。</p><p>ex8 循环引用：b 引用 a， 然后追加到 a 中；deepcopy 会复制 a </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">10</span>, <span class="number">20</span>]</span><br><span class="line">b = [a, <span class="number">30</span>]</span><br><span class="line">a.append(b)</span><br><span class="line">a</span><br></pre></td></tr></table></figure><pre><code>[10, 20, [[...], 30]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line">c = deepcopy(a)</span><br><span class="line">c</span><br></pre></td></tr></table></figure><pre><code>[10, 20, [[...], 30]]</code></pre><p>此外，深复制有时可能太深了。例如，对象可能会引用不该复制的外部资源或单例值。我们可以实现特殊方法__copy__() 和 __deepcopy__() ,控制 copy 和 deepcopy 的行为，详情参见 <a href="https://docs.python.org/3/library/copy.html" target="_blank" rel="noopener">copy模块文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;变量是标注，不是盒子&quot;&gt;&lt;a href=&quot;#变量是标注，不是盒子&quot; class=&quot;headerlink&quot; title=&quot;变量是标注，不是盒子&quot;&gt;&lt;/a&gt;变量是标注，不是盒子&lt;/h3&gt;&lt;p&gt;ex1 变量a,b引用同一个列表，而非副本:&lt;/p&gt;
&lt;figure cla
      
    
    </summary>
    
      <category term="python" scheme="http://yoururl.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoururl.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>JSMA</title>
    <link href="http://yoururl.com/2018/03/12/JSMA/"/>
    <id>http://yoururl.com/2018/03/12/JSMA/</id>
    <published>2018-03-11T16:24:04.000Z</published>
    <updated>2018-03-12T12:35:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy_z<br>翻译文献：<a href="https://arxiv.org/abs/1511.07528" target="_blank" rel="noopener">The Limitations of Deep Learning in Adversarial Settings</a></p></blockquote><h1 id="1-emsp-研究一个简单的神经网络"><a href="#1-emsp-研究一个简单的神经网络" class="headerlink" title="1.&emsp;研究一个简单的神经网络"></a>1.&emsp;研究一个简单的神经网络</h1><h1 id="2-emsp-推广到前馈深度神经网络"><a href="#2-emsp-推广到前馈深度神经网络" class="headerlink" title="2.&emsp;推广到前馈深度神经网络"></a>2.&emsp;推广到前馈深度神经网络</h1><div class="table-container"><table><thead><tr><th>符号</th><th>注释</th></tr></thead><tbody><tr><td>$X$</td><td>良性样本</td></tr><tr><td>$X^*$</td><td>对抗样本</td></tr><tr><td>$Y^*$</td><td>目标输出</td></tr><tr><td>$F$</td><td>非循环前馈DNN</td></tr><tr><td>$γ$</td><td>最大失真参数  </td></tr><tr><td>$θ$</td><td>特征变化参数</td></tr></tbody></table></div><h2 id="2-1-emsp-算法1"><a href="#2-1-emsp-算法1" class="headerlink" title="2.1&emsp;算法1"></a>2.1&emsp;算法1</h2><p>&emsp;算法1显示了构建对抗样本的过程，经历三个基本过程</p><ul><li>计算正向导数 $∇F(X^*)$</li><li>基于导数构造显著图$S$</li><li>利用θ修改输入特征 $i_{max}$。重复该过程直到网络输出 $Y^*$ 或达到最大失真 $γ$</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/13991477.jpg" alt=""></p><h3 id="2-1-1-emsp-深度神经网络的正向导数："><a href="#2-1-1-emsp-深度神经网络的正向导数：" class="headerlink" title="2.1.1&emsp;深度神经网络的正向导数："></a>2.1.1&emsp;深度神经网络的正向导数：</h3><p>&emsp;第一步是计算给定样本$X$ 的正向导数。如前所述，它由下式给出：</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/58575062.jpg" alt=""></p><ul><li><p>对应于神经网络在训练过程中学习到的函数的雅可比矩阵。<br>正向导数计算梯度类似于反向传播计算梯度，但有两个重要的区别：<br>a. 直接取网络的导数，而不是取其代价函数，<br>b. 区分输入特征而不是网络参数。<br>不是向后传播梯度，而是向前传播它们，因为这样就可以找到导致网络输出发生重大变化的输入成分。</p></li><li><p>递归地区分每个隐藏层 $k∈2..n$</p></li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/68721235.jpg" alt=""><br>&emsp;&emsp;&emsp;其中$H<em>k$是隐藏层$k$的输出矢量，$f</em>{k,j}$ 是输出神经元$j$在$k$层的激活函数。</p><ul><li>应用链式规则，我们可以写出一系列关于 $k∈2..n$ 的公式</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/51759725.jpg" alt=""></p><p>&emsp;&emsp;&emsp;因此可以表示 $\frac{\partial^{}{H_n}}{\partial {x_i}^{}}$  ,</p><ul><li>输出神经元$j$  表达式计算：<script type="math/tex; mode=display">F_j(X) = f_{n+1,j}(W_{n+1,j}\cdot H_n+b_{n+1,j})</script></li></ul><p>&emsp;&emsp;&emsp;再次应用链规则来获得：</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/98084428.jpg" alt=""></p><h3 id="2-1-2-emsp-对抗显著图"><a href="#2-1-2-emsp-对抗显著图" class="headerlink" title="2.1.2&emsp;对抗显著图"></a>2.1.2&emsp;对抗显著图</h3><p>&emsp;构建对抗显著图。这些图表明攻击应该干扰哪些输入特征，以便最有效地实现网络输出的所需变化，并且是使攻击者能够产生大范围的对抗样本的多功能工具。</p><ul><li><p>用作分类器的网络，其输出是概率最大的类别，其中最终的预测类别值对应于具有最高概率的分量：</p><script type="math/tex; mode=display">label(X)=arg\,\min_jF_j(X)</script></li><li><p>显著图是基于正向导数的，因为这给攻击者神经网络错误分类给定样本的信息。<br>更确切地说，攻击者想要误分类样本$X$，分配 目标类别 $t≠label(X)$ 。 为此，必须增加由 $F$ 给出的目标类 $t$ 的概率 $F_t(X)$ ，而所有其他类 $j ≠ t$ 的概率 $F_j(X)$ 减小，直到</p><script type="math/tex; mode=display">t=arg\,\min_jF_j(X)</script><p>&emsp;&emsp;&emsp; 攻击者可以通过使用以下显著图 $S(X,t)$  来增加输入特征实现这一点：</p></li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/32845154.jpg" alt=""></p><ul><li>其中 $i$ 是输入特征。 第一行指定的条件会拒绝具有负目标导数或其他类的总体正导数的输入分量。<br>$\frac{\partial^{}{F<em>t(X)}}{\partial {X_i}^{}}$  应该为正，以便当特征 $X_i$ 增加时 $F_t(X)$ 增加。同时，${\sum</em>{j≠t}}\frac{\partial^{}{F_j(X)}}{\partial {X_i}^{}}$ 需要为负才能减少或保持不变。</li><li>第二行的结果允许我们把所有其他的正向导数分量一起考虑，这样可以很容易地比较 $S(X,t)[i]$ 的所有输入特征。</li><li><strong>$S(X,t)[i]$ 的高值对应于将增加目标类或者显着减少其他类或者两者皆有的输入特征。</strong> 通过增加这些特征，攻击最终将样本误分类到目标类别中。</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/33588992.jpg" alt=""></p><pre><code>LeNet架构的784维输入的显着图。 784输入尺寸reshape为对应于28x28图像像素。大的绝对值对应于受干扰时对输出有显着影响的特征。</code></pre><ul><li>引入一个额外的图，它与方程式(8)中给出的相对应，通过寻找攻击者应该减少的特征来实现误分类。唯一的区别在于对正向导数值的约束以及第二行绝对值的位置：</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/86366637.jpg" alt=""></p><h3 id="2-1-3-emsp-修改样本："><a href="#2-1-3-emsp-修改样本：" class="headerlink" title="2.1.3&emsp;修改样本："></a>2.1.3&emsp;修改样本：</h3><p>&emsp;一旦输入特征已经被对抗性显著图识别，就需要被扰乱以实现攻击者的目标。 这是算法1每次迭代的最后一步，所选特征被扰动的数量（算法1中的$θ$）也是问题特定的。 我们在之后讨论如何在计算机视觉应用中设置这个参数。 最后，通过参数 $γ$来指定最大迭代次数，这相当于样本中允许的最大失真。 它限制了改变的特征的数量以制造对抗样本，并且可以取任何小于特征数量的正整数值。找到正确的 $γ$ 值需要考虑人类对对抗样本的感知失真的影响,太多的失真可能会导致对抗样本容易被人类识别。</p><h1 id="3-emsp-方法应用"><a href="#3-emsp-方法应用" class="headerlink" title="3.&emsp;方法应用"></a>3.&emsp;方法应用</h1><p>&emsp;我们使用三种工具正式描述了一类由前馈DNN误分类的制作对抗样本的算法：正向导数，对抗显著图和制作算法。 我们现在将这些工具应用于用于计算机视觉分类任务的DNN：手写数字识别。 实验显示，我们的算法成功地将来自任何源类的对抗样本制作成任何给定目标类别，对于这个应用来说，这意味着任何数字可以被扰乱，使得它被误分类为任何其他数字。</p><h2 id="3-1-emsp-算法二"><a href="#3-1-emsp-算法二" class="headerlink" title="3.1&emsp;算法二"></a>3.1&emsp;算法二</h2><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/3583770.jpg" alt=""></p><p>&emsp;给定网络$F$，算法2通过扰动由saliency_map选择的 <strong>两个输入特征（即，像素强度）$p_1$ 和 $p_2$ 来迭代地修改样本</strong> 。 使用DNN的正向导数 $∇F(X^*)$ 在算法的每次迭代之间构建和更新显著图。 当满足以下条件之一时，该算法停止：</p><p>&emsp;&emsp;      （1）对抗样本被DNN分类为目标类别$t$<br>&emsp;&emsp;      （2）已达到最大迭代次数max_iter，<br>&emsp;&emsp;      （3）特征搜索域 $Γ$  是空的</p><p>&emsp;制作算法由三个参数进行微调：</p><ul><li><p>最大失真$γ$：这个定义了什么时候该算法应该停止修改样本以达到对抗目标类别。 以百分比表示的最大失真对应于制作对抗样本时要修改的像素的最大数量，并因此如下设置最大迭代次数 $max_iter=\frac{784.γ}{2.100}$ （每次迭代修改2个像素）：</p></li><li><p>显著图：子程序saliency_map生成一个图，定义哪个输入要素将在迭代过程中被修改。 用于生成显著图的策略随着所考虑的DNN所处理的数据的性质以及对抗目标而变化。 我们在后面的算法3中提供了一个子例程。</p></li><li><p><strong>每次迭代的特征变化$θ$</strong>：一旦使用显著图选择了输入特征，它们必须被修改。 引入这些特征的变化 $θ$ 是攻击者必须设置的另一个参数，与它使用的显著图一致。</p></li></ul><h2 id="3-2-emsp-策略一：通过增加像素强度来制作"><a href="#3-2-emsp-策略一：通过增加像素强度来制作" class="headerlink" title="3.2&emsp;策略一：通过增加像素强度来制作"></a>3.2&emsp;策略一：通过增加像素强度来制作</h2><p>&emsp;制作对抗样本的第一个策略是基于增加一些像素的强度。 为了达到这个目的，我们从MNIST测试集中选取了10个手写数字样本，每个数字类别从0到9。  所有像素强度以θ= +1增加。</p><ul><li>对抗显著图用来制作算法，选择可以增加的像素对，这是在等式(8)的一般分类情况下引入的图应用。该图旨在利用下面的heuristic算法去寻找像素对 $(p_1，p_2)$ :</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/76963465.jpg" alt=""></p><p>&emsp;&emsp;&emsp;这种启发式搜索能够增加目标类输出的像素对，同时减少所有其他类输出的总和。</p><ul><li><p><strong>显著图考虑像素对而不考虑单个像素，因为一次选择一个像素太严格，并且很少像素满足公式8中描述的启发式搜索标准。</strong> 搜索像素对更可能匹配条件，因为 其中一个像素可以补偿另一个像素的微小缺陷。 我们来考虑一个简单的例子：$p_1$的目标导数为5，其他类的导数总和等于0.1，而 $p_2$ 作为目标导数等于-0.5，其他类导数的总和等于-6。 单独地，这些像素与公式(8)中所述的显著图的标准不匹配，但是组合起来，该对确实与公式(10)中定义的显着性标准匹配。</p></li><li><p>算法3给出了相应的子程序saliency_map的伪代码。</p></li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/78631019.jpg" alt=""></p><p>&emsp;该算法能够为所有90个源 - 目标类对创建成功的对抗样本。</p><ul><li>下图显示了获得的90个对抗样品以及用于制造它们的10个原始样品。</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/22786902.jpg" alt=""></p><pre><code>原始样本在对角线上找到。 行i和列j上的样本，当i ≠ j时，是从最初被归类为源类别i的图像制作的样本，将被错误分类为目标类别j。</code></pre><ul><li>在空输入（所以像素设置为0强度）上运行制作算法，并针对从0到9的每个类别制作一个对抗样本。下所示的不同样本展示了对抗显著图如何识别与一个类中分类有关的输入特征：</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/10161483.jpg" alt=""></p><pre><code>有趣的是，对于类别0，2，3和5可以清楚地识别目标数字。</code></pre><h2 id="3-3-emsp-策略二：通过降低像素强度来制作"><a href="#3-3-emsp-策略二：通过降低像素强度来制作" class="headerlink" title="3.3&emsp;策略二：通过降低像素强度来制作"></a>3.3&emsp;策略二：通过降低像素强度来制作</h2><p>&emsp;第二种对抗策略通过 $θ=-1$ 来减小像素强度。 与公式(10)中所写的公式相同，但约束条件不同：乘法运算的左操作数现在被约束为负，右操作数为正。 在本文前面的章节中也会介绍这种启发式算法，它可以搜索使目标类输出增加，同时减少所有其他类输出总和的像素对。</p><ul><li>该算法能够为所有源 - 目标类对创建成功的对抗样本。 下图显示了获得的90个对抗样品以及用于制造它们的10个原始样品。 要观察的是，通过降低像素强度引入的失真似乎很难被人眼检测到。</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/83317984.jpg" alt=""></p><h1 id="4-emsp-评估"><a href="#4-emsp-评估" class="headerlink" title="4.&emsp;评估"></a>4.&emsp;评估</h1><h2 id="4-1-emsp-生成大量对抗样本"><a href="#4-1-emsp-生成大量对抗样本" class="headerlink" title="4.1&emsp;生成大量对抗样本"></a>4.1&emsp;生成大量对抗样本</h2><p>&emsp;设计一组实验来评估MNIST数据集中的所有合法样本是否可以被攻击者利用来产生对抗样本。</p><h3 id="4-1-1-emsp-实验设计"><a href="#4-1-1-emsp-实验设计" class="headerlink" title="4.1.1&emsp;实验设计"></a>4.1.1&emsp;实验设计</h3><ul><li><p>样本集：<br>我们在三组10,000个样本上运行我们的制作算法，每个样本提取自三个MNIST训练，验证和测试集中的一个。对于这些样本中的每一个，我们制作了9个对立样本，每个样本都归类于与原始类别不同的9个目标类别之一。因此，我们为每组生成了9万个样本，总共有27万个对抗样本。</p></li><li><p>参数设置：<br>我们将最大失真设为 $γ= 14.5％$ ，像素强度增加 $θ= + 1$。</p></li><li><p>评价指标：<br>a. 成功率$τ$被定义为由DNN成功分类为对抗目标类别的对抗样本的百分比。<br>b. 失真被定义为在合法样本中修改以获得对抗样本的像素的百分比。换句话说，就是为了获得对抗样本而修改的输入特征的百分比。</p></li></ul><h3 id="4-1-2-emsp-实验结果与讨论"><a href="#4-1-2-emsp-实验结果与讨论" class="headerlink" title="4.1.2&emsp;实验结果与讨论"></a>4.1.2&emsp;实验结果与讨论</h3><p>&emsp;我们计算两个平均失真值：一个考虑所有样本，另一个考虑成功的样本:</p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/61993056.jpg" alt=""></p><ul><li><p>平均成功率为$97.10％$，所有对抗样本的平均失真率为$4.44％$，成功对抗样本的平均失真率为 $4.02％$ 。<br>这意味着为了制作成功的对抗样本而修改的像素的平均数量是784个像素中的32个。<br>第一个失真数字较高，因为它包含了不成功的样本。</p></li><li><p>我们还研究了使用降低显著图制作9,000个对抗样本。 我们发现成功率 $τ= 64.7％$ 较低，平均失真 $ε= 3.62％$ 略低。<br>同样，减小像素强度在产生期望的对抗行为方面不如递增像素强度成功。 直觉上，这可以理解，因为消除像素减少了信息熵，从而使DNN难以提取分类样本所需的信息。 强度变化的绝对值越大，DNN越可靠地错误分类。</p></li></ul><h2 id="4-2-emsp-量化硬度和建立防御机制"><a href="#4-2-emsp-量化硬度和建立防御机制" class="headerlink" title="4.2&emsp;量化硬度和建立防御机制"></a>4.2&emsp;量化硬度和建立防御机制</h2><p>&emsp;在前面的实验中，270,000个对抗样本中约有2.9％没有成功制作。这表明有些样本比其他样本更难开发。<br>&emsp;此外，所报告的失真数据在所有对抗样本上取平均值，但不是所有样本都需要相同的失真才能被错误分类。<br>因此，我们现在研究不同样品的硬度以量化这些现象。 我们的目标是确定哪些源 - 目标类对最容易被利用，以及不同的源 - 目标类对之间的相似性。 类对是一对源类和目标类。 这个硬度指标使我们能够为建立防御机制奠定基础。</p><h3 id="4-2-1-emsp-类对研究"><a href="#4-2-1-emsp-类对研究" class="headerlink" title="4.2.1&emsp;类对研究"></a>4.2.1&emsp;类对研究</h3><ul><li>使用前面实验中制作的9万个对抗样本，从10,000个样本 的MNIST测试集。</li><li>在下图中，我们绘制成功率矩阵，表示哪对最成功。 <strong>较深的阴影对应于较高的成功率</strong> 。这些行对应于每个源类的成功率，而列对应于每个目标类的成功率。</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/87138047.jpg" alt="">  </p><pre><code>如果按行读取矩阵，可以感觉到类0，2和8很难制作，而类1，7和9很容易制作。 类似地，按照列的方式读取矩阵，可以看出，类1和类7很难制作，而类0,8和9容易制作。</code></pre><ul><li>下图，报告了源 - 目标类对的 <strong>成功样本的平均失真ε</strong></li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/1594025.jpg" alt=""></p><ul><li>有趣的是，<strong>需要较低失真的类对应于前一个矩阵中成功率较高的类</strong> 。 例如，对应于等级1的列与最高失真相关联，并且是前一个矩阵中成功率最低的列。 实际上，<strong>类对的平均失真越高，该类对中的样本越有可能达到最大失真，从而产生不成功的对抗样本</strong> 。</li></ul><h3 id="4-2-2-emsp-硬度测量"><a href="#4-2-2-emsp-硬度测量" class="headerlink" title="4.2.2&emsp;硬度测量"></a>4.2.2&emsp;硬度测量</h3><p>&emsp;分析结果表明一些源 - 目标类对不如其他类容易制作对抗样本。 这与防御者有关，他们正在寻找哪一类DNN最容易遭受对抗攻击。我们将这一指标称为<strong>目标类别相对于给定源类别的硬度</strong>。 它将类对 $(s，t)$ 的平均失真相对于其成功率进行标准化：</p><script type="math/tex; mode=display">H(s,t)=\int_τ {ε(s, t, τ )} \,{\rm d}τ</script><p>&emsp;其中 $ε(s，t，τ)$ 是相应成功率 $τ$ 的一组样本的平均失真。<br>&emsp;最大失真的集合给出了一系列 $k∈1..K$  的对 $(εk，τk)$。因此，用于计算源 - 目标类对的硬度的实际公式可以从梯形规则导出：</p><script type="math/tex; mode=display">H(s,t)≈\sum_{k=1}^{K-1}\;(τ_{k+1}-τ_k)\,\frac{ε(s, t, τ_{k+1}) + ε(s, t, τ_k)}{2}</script><ul><li><p>我们使用算法中的一组 $K = 9$ 的最大失真值<br>$Υ∈{0.3,1.3,2.6,5.1,7.7,10.2,12.8,25.5,38.3}％$ 计算所有类别的硬度值。 对于每个最大失真值$Y$，平均失真$ε$和成功率$τ$在9,000个对抗样本上被平均。</p></li><li><p>下图显示了所有类对 $(s, t) ∈ {0..9}^<br>2$ 的硬度值 $H(s,t)$。<br>源 - 目标类对的硬度矩阵。较深阴影对应难以实现错误分类的样本。</p></li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/37082866.jpg" alt=""></p><pre><code>观察到矩阵的形状与上图中绘制的平均失真矩阵类似。但是，硬度测量更精确，因为它使用一系列最大失真。</code></pre><h3 id="4-2-3-emsp-对抗距离"><a href="#4-2-3-emsp-对抗距离" class="headerlink" title="4.2.3&emsp;对抗距离"></a>4.2.3&emsp;对抗距离</h3><p>&emsp;样本$X$到类别$t$的对抗距离，并将其写为$A(X，t)$。 它估计样本 $X$ 和目标分类之间的距离。 我们将距离定义为：</p><script type="math/tex; mode=display">A(X,t)=1-\frac{1}{M}\,\sum_{i∈0..M}{1_{S(X,t)[i]>0}}</script><p>&emsp;其中 $1_E$ 是事件 $E$ 的指示函数（即当且仅当 $E$ 为真时为1）。 简而言之，$A(X,t)$ 是在算法2的第一次迭代中计算的 $X$ 的对抗显著图中的非零元素的归一化数目。对抗距离越接近 1，样本 $X$ 在目标分类 $t$ 中将更难以错误分类。</p><ul><li>图15：使用1000个样本计算的,每个源 - 目标类对的 平均对抗距离。</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/60081174.jpg" alt=""></p><p>&emsp;上图证实了这个公式是凭经验确定的。它说明了每个源 - 目标类对的平均对抗距离的值，使得可以很容易地将平均值与硬度矩阵进行比较。 为了计算它，我们稍微改变公式，以对特征对进行求和，反映我们在验证过程中所做的观察。</p><ul><li>这种类间距离的概念直观地定义了网络F与对抗性扰动的鲁棒性的度量。 建议如下定义：<script type="math/tex; mode=display">R(F)=\min_{(X,t)}\,A(X,t)</script></li></ul><h2 id="4-3-emsp-研究人类对对抗样本的感知"><a href="#4-3-emsp-研究人类对对抗样本的感知" class="headerlink" title="4.3&emsp;研究人类对对抗样本的感知"></a>4.3&emsp;研究人类对对抗样本的感知</h2><p>&emsp;对抗样本不仅要被深度神经网络误分类为目标类别，而且还要在视觉上被人类分类为源类别。</p><ul><li><p>第一个实验旨在确定输入数据的基线感知率。<br>从原始MNIST数据集中的222个未改变的样本中随机挑选了3个呈现给74个参与者。 参与者将97.4％的样本确定为数字，正确分类95.3％的数字样本。</p></li><li><p>第二组实验试图评估失真量（$ε$）如何影响人的感知。 在这里，184名参与者被呈现总共1707个不同程度的失真（强度增加$θ= + 1$）样本。 实验显示，在低于阈值（ $ε= 14.29％$ 变形）的情况下，参与者能够将样本确定为数字（95％），并且正确地将它们分类（90％），准确度略微低于未改变的样本。 在高于阈值的失真率下，分类率急剧下降（71％）。</p></li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/29250443.jpg" alt=""></p><ul><li>最后一组实验评估了强度变化（$θ$）对感知的影响，如图17所示.203名参与者准确地确定了5,355个样本数字（96％）并正确分类（95％）。 在绝对强度较高（$θ= -1$ 和 $θ= +1$ ）时，特定的数字分类略有下降（90.5％和90％），但是数字的识别基本没有变化。</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-12/64566307.jpg" alt=""></p><pre><code>改变特征失真强度提供了更好的结果：在-0.7≤θ≤+ 0.7时，人类以基本上与原始样本数据相同的速率对样本数据进行分类。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy_z&lt;br&gt;翻译文献：&lt;a href=&quot;https://arxiv.org/abs/1511.07528&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The Limitations of Deep Learning
      
    
    </summary>
    
      <category term="对抗攻击" scheme="http://yoururl.com/categories/%E5%AF%B9%E6%8A%97%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Adversarial attack" scheme="http://yoururl.com/tags/Adversarial-attack/"/>
    
      <category term="Translation" scheme="http://yoururl.com/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>The Adversarial Attacks methods</title>
    <link href="http://yoururl.com/2018/03/08/Adversarial%20attack%20methods/"/>
    <id>http://yoururl.com/2018/03/08/Adversarial attack methods/</id>
    <published>2018-03-08T10:38:04.000Z</published>
    <updated>2018-03-12T12:35:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：Andy_z<br>翻译文献：<a href="https://arxiv.org/abs/1801.00553" target="_blank" rel="noopener">Threat of Adversarial Attacks on Deep Learning<br>in Computer Vision: A Survey</a></p></blockquote><h1 id="对抗攻击策略总结"><a href="#对抗攻击策略总结" class="headerlink" title="对抗攻击策略总结"></a>对抗攻击策略总结</h1><h2 id="1-emsp-常用术语介绍"><a href="#1-emsp-常用术语介绍" class="headerlink" title="1.&emsp;常用术语介绍"></a>1.&emsp;常用术语介绍</h2><ul><li>Adversarial example/image(对抗样本)：由干净样本添加了对抗扰动得到的新样本，用于欺骗机器学习模型。</li><li>Adversarial perturbation(对抗扰动)：使干净样本转化为对抗样本的噪声。</li><li>Adversarial training(对抗训练)：使用混合的对抗样本和干净样本去训练模型。</li><li>Adversary (攻击者)：制造对抗样本的人，有时候也指代对抗样本本身。</li><li>Black-box attacks(黑盒攻击)：攻击者在不清楚（或了解很少）模型的参数和结构的情况下，生成对抗样本攻击模型。</li><li>Detector(检测器)：用于检测一幅图像是否是对抗样本的装置。</li><li>Fooling ratio/rate：(欺骗率)：样本被扰动后，一个训练过的模型改变预测标签的比例。</li><li>One-shot/one-step methods(单步法)：使用单步计算去生成对抗扰动，相对于迭代法，后者计算量大。</li><li>Quasi-imperceptible(难以察觉)：轻微扰动图像，在人类视觉下无法察觉。</li><li>Rectifier(整流器，校正器)：整流器修改对抗样本，以恢复目标模型的预测，对应于干净版本的预测。</li><li>Targeted attacks(目标攻击)：欺骗机器学习模型，使之将对抗图片识别为指定标签。相对于non-targeted attacks(无目标攻击)。</li><li>non-targeted attacks(无目标攻击)：欺骗机器学习模型，使之将对抗图片识别为错误的任意标签。</li><li>Threat model(威胁模型)：指由方法考虑的潜在攻击的类型，例如， 黑盒攻击。</li><li>Transferability(转移性)：对抗样本对于生成模型之外的其他模型依然有效。</li><li>Universal perturbation(通用扰动)：添加到任何图像中，都能够以高概率愚弄的给定模型。 请注意，普遍性是指扰动的”图像的不可知”性，与’具有良好的可转移性’相反。</li><li>White-box attacks(白盒攻击):攻击者完全掌握了目标模型的参数，架构，训练方法，有时候包括训练数据。</li></ul><h1 id="2-emsp-攻击方法分类"><a href="#2-emsp-攻击方法分类" class="headerlink" title="2.&emsp;攻击方法分类"></a>2.&emsp;攻击方法分类</h1><p>&emsp;从不同角度分类现有的攻击策略：</p><h2 id="2-1-emsp-Black-White-box"><a href="#2-1-emsp-Black-White-box" class="headerlink" title="2.1&emsp;Black/White box"></a>2.1&emsp;Black/White box</h2><h2 id="2-2-emsp-Targeted-Non-targeted"><a href="#2-2-emsp-Targeted-Non-targeted" class="headerlink" title="2.2&emsp;Targeted/Non-targeted"></a>2.2&emsp;Targeted/Non-targeted</h2><h2 id="2-3-emsp-Gradient-Optimization-others"><a href="#2-3-emsp-Gradient-Optimization-others" class="headerlink" title="2.3&emsp;Gradient/Optimization/others"></a>2.3&emsp;Gradient/Optimization/others</h2><h2 id="2-4-emsp-Specific-Universal"><a href="#2-4-emsp-Specific-Universal" class="headerlink" title="2.4&emsp;Specific/Universal"></a>2.4&emsp;Specific/Universal</h2><h2 id="2-4-emsp-One-shot-Iterative"><a href="#2-4-emsp-One-shot-Iterative" class="headerlink" title="2.4&emsp;One-shot/Iterative"></a>2.4&emsp;One-shot/Iterative</h2><p>&emsp;<span id="Summary-">各方法属性总结：</span></p><div class="table-container"><table><thead><tr><th>Method</th><th><font size="2">Black/ White box</font></th><th><font size="2">Targeted/ Non-targeted</font></th><th><font size="2">Gradient/ Optimiza tion/others</font></th><th><font size="2">Specific/ Universal</font></th><th><font size="2">perturbation norm</font></th><th>learn</th><th>strength</th></tr></thead><tbody><tr><td><a href="#L-BFGS">L-BFGS</a></td><td>White-box</td><td>Targeted</td><td>-</td><td>Specific</td><td>$L_∞$</td><td>One-shot</td><td>3*</td></tr><tr><td><a href="#FGSM">FGSM</a></td><td>White-box</td><td>Targeted</td><td>Gradient</td><td>Specific</td><td>$L_∞$</td><td>One-shot</td><td>3*</td></tr><tr><td><a href="#BIM&amp;ILCM">BIM&amp;ILCM</a></td><td>White-box</td><td>Non-</td><td>Gradient</td><td>Specific</td><td>$L_∞$</td><td>Iterative</td><td>4*</td></tr><tr><td><a href="#JSMA">JSMA</a></td><td>White-box</td><td>Targeted</td><td>Gradient</td><td>Specific</td><td>$L_0$</td><td>Iterative</td><td>3*</td></tr><tr><td><a href="#One-Pixel">One-Pixel</a></td><td>Black-box</td><td>Non-</td><td>-</td><td>Specific</td><td>$L_0$</td><td>Iterative</td><td>2*</td></tr><tr><td><a href="#C.W-attacks">C&amp;W attacks</a></td><td>White-box</td><td>Targeted</td><td>-</td><td>Specific</td><td>$L<em>0,L_2,L</em>∞$</td><td>Iterative</td><td>5*</td></tr><tr><td><a href="#DeepFool">DeepFool</a></td><td>White-box</td><td>Non-</td><td>-</td><td>Specific</td><td>$L<em>2,L</em>∞$</td><td>Iterative</td><td>4*</td></tr><tr><td><a href="#Uni-pert">Uni.perturbation</a></td><td>White-box</td><td>Non-</td><td>-</td><td>Universal</td><td>$L<em>2,L</em>∞$</td><td>Iterative</td><td>5*</td></tr><tr><td><a href="#UPSET">UPSET</a></td><td>black-box</td><td>Targeted</td><td>-</td><td>Universal</td><td>$L_∞$</td><td>Iterative</td><td>4*</td></tr><tr><td><a href="#ANGRI">ANGRI</a></td><td>Black-box</td><td>Targeted</td><td>-</td><td>Specific</td><td>$L_∞$</td><td>Iterative</td><td>4*</td></tr><tr><td><a href="#Houdini">Houdini</a></td><td>Black-box</td><td>Targeted</td><td>-</td><td>Specific</td><td>$L<em>2,L</em>∞$</td><td>Iterative</td><td>4*</td></tr><tr><td><a href="#ATNs">ATNs</a></td><td>White-box</td><td>Targeted</td><td>-</td><td>Specific</td><td>$L_∞$</td><td>Iterative</td><td>4*</td></tr></tbody></table></div><h1 id="3-emsp-L-BFGS"><a href="#3-emsp-L-BFGS" class="headerlink" title="3.&emsp;L-BFGS"></a>3.&emsp;<span id="L-BFGS">L-BFGS</span></h1><p>通过对图像添加人眼不可察的微小扰动来误导神经网络做出错误分类。他们试图求解让神经网络做出错误分类的最小扰动方程，限于问题的高复杂度，他们简化了过程转而寻找最小的代价函数添加项，来误导神经网络，从而将问题转化为一个凸优化过程。  </p><p><a href="#Summary-">Back</a></p><h1 id="4-emsp-FGSM"><a href="#4-emsp-FGSM" class="headerlink" title="4.&emsp;FGSM"></a>4.&emsp;<span id="FGSM">FGSM</span></h1><h2 id="4-1-emsp-快速梯度符号法（FGSM）："><a href="#4-1-emsp-快速梯度符号法（FGSM）：" class="headerlink" title="4.1&emsp;快速梯度符号法（FGSM）："></a>4.1&emsp;快速梯度符号法（FGSM）：</h2><picture><div class="table-container"><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>$θ$</td><td>模型参数</td></tr><tr><td>$x$</td><td>模型输入</td></tr><tr><td>$y$</td><td>关于x的目标</td></tr><tr><td>$J(θ,x,y)$</td><td>损失函数  </td></tr></tbody></table></div><p>&emsp;将损失函数线性化为  $θ$ 的当前值，得到最优的<strong>最大范数</strong>约束扰动</p><script type="math/tex; mode=display">η=εsign(∇_xJ(θ,x,y))</script><p>&emsp;称之为产生对抗样本的“快速梯度符号法”。 请注意，可以使用反向传播有效地计算所需的梯度。  </p><ul><li>FGSM在各种模型上的效果 :  </li></ul><div class="table-container"><table><thead><tr><th>$ε$</th><th>0.25</th><th>0.25</th><th>0.1</th></tr></thead><tbody><tr><td>测试集</td><td>MNIST</td><td>MNIST</td><td>CIFAR-10预</td></tr><tr><td>分类器</td><td>softmax</td><td>maxout</td><td>maxout</td></tr><tr><td>错误率</td><td>99.9％</td><td>89.4％</td><td>87.15％</td></tr><tr><td>平均置信度</td><td>79.3％</td><td>97.6％</td><td>96.6％</td></tr></tbody></table></div><blockquote><p><a href="https://github.com/lisa-lab/pylearn2/tree/master/pylearn2/scripts/papers/maxout" target="_blank" rel="noopener">预处理代码</a><br>其产生大约0.5的标准偏差。</p></blockquote><p>&emsp;其他生成对抗样本的简单方法也是可能的。 例如，我们还发现<a href="https://jjzhou012.github.io/2018/03/11/adversaria-%E6%AD%A3%E7%A1%AE%E5%88%86%E7%B1%BB-%E5%AF%B9%E6%8A%97%E6%A0%B7%E6%9C%AC-%E9%B2%81%E6%A3%92%E6%80%A7/" target="_blank" rel="noopener"><strong>在梯度方向上以小角度旋转</strong></a> $x$ 也能可靠地产生对抗样本。</p><ul><li>在ImageNet上应用GoogLeNet的快速对抗样本生成演示：  </li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/67792085.jpg-Watermark" alt=""></p><p>&emsp;通过添加一个不可察的小矢量，其元素等于损失函数梯度的元素的符号，可以改变GoogLeNet的图像分类。这里，$ε$ 对应于GoogLeNet转换为实数后8位图像编码的最小位数的大小， 因等于0.007。  </p><p>&emsp;对抗样本生成过程：</p><script type="math/tex; mode=display">x ̃=x+εsign(∇_xJ(θ,x,y))</script><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/43011594.jpg-Watermark" alt=""></p><h2 id="4-2-emsp-FGSM的one-step-target-class变体"><a href="#4-2-emsp-FGSM的one-step-target-class变体" class="headerlink" title="4.2&emsp;FGSM的one-step target class变体"></a>4.2&emsp;FGSM的one-step target class变体</h2><div class="table-container"><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>$X$</td><td>干净样本</td></tr><tr><td>$X^{adv}$</td><td>对抗图像</td></tr><tr><td>Misclassified adversarial image</td><td>误分类的对抗图像</td></tr><tr><td>$ε$</td><td>对抗扰动大小</td></tr><tr><td>$J(X,y_{true})$</td><td>用于训练模型的损失函数</td></tr></tbody></table></div><ul><li>最大化某个特定目标类 $y<em>{target}$ 的概率 $p(y</em>{target}|X)$，该目标类不可能是给定图像的真实类。 对于具有交叉熵损失的神经网络，一步目标类方法的公式：</li></ul><script type="math/tex; mode=display">X^{adv}=X - εsign(∇_XJ(X,y_{target}))</script><ul><li><p>对于目标类，我们可以选择被网络</p><script type="math/tex; mode=display">y_{LL} = arg \min_y\{p(y|X)\}</script><p>&emsp;&emsp;&emsp;预测的最小概率的类</p></li><li><p>对于这里给定图像 $X$ 和 $y$ 的神经网络的交叉熵代价函数 $J(X,y)$ 。 故意忽略代价函数中的网络权重（和其他参数）$θ$,<br>假设它们是固定的。对于softmax输出层的神经网络，则有 整数类标签的交叉熵代价函数等于给定图像的真实类的负对数概率：</p><script type="math/tex; mode=display">J(X,y)= - \log\;p（y | X）</script></li></ul><p><a href="#Summary-">Back</a></p><h1 id="5-emsp-BIM-ILCM"><a href="#5-emsp-BIM-ILCM" class="headerlink" title="5.&emsp;BIM&ILCM"></a>5.&emsp;<span id="BIM&amp;ILCM">BIM&ILCM</span></h1><h2 id="5-1-emsp-Basic-iterative-method-BIM"><a href="#5-1-emsp-Basic-iterative-method-BIM" class="headerlink" title="5.1&emsp;Basic iterative method(BIM):"></a>5.1&emsp;Basic iterative method(BIM):</h2><ul><li>$Clip_{X,ε}{X’}$ 基于像素剪切$X’$, 结果在原图像$X$的$ε$的最大范数邻域内，剪切方程：</li></ul><script type="math/tex; mode=display">Clip_{X,ε}\{X'\}(x,y,z) = \min\{255,X(x,y,z)+ε,\max\{0,X(x,y,z)-ε,X'(x,y,z)\}\}</script><p>&emsp;&emsp;&emsp;$X(x,y,z)$ 的值为图像$X$在坐标 $(x,y)$ 处 $z$ 通道的值。</p><ul><li>对于 单步类的方法，将它扩展为很多小步，在每个步骤之后剪切中间结果的像素值以确保它们处于<br>原始图像的一个 $ε$ 邻域内：<script type="math/tex; mode=display">\sideset{}{^{adv}_0}X = X,  \sideset{}{^{adv}_{N+1}}X=Clip_{X,ε}\{\sideset{}{^{adv}_{N}}X+αsign(ᐁ_XJ(\sideset{}{^{adv}_{N}}X,y_{true}))\}</script></li><li>在作者的实验中，使用了 $α=1$，即在每一步中只将每个像素的值改为1。 选择迭代次数为 $\min(ε+ 4,1.25ε)$。 这种迭代量是通过启发式选择的; 对抗样本足以达到$ε$的最大范数球但有足够的限制，以保持实验的计算成本可控。</li></ul><h2 id="5-2-emsp-ITERATIVE-LEAST-LIKELY-CLASS-METHOD-ILCM"><a href="#5-2-emsp-ITERATIVE-LEAST-LIKELY-CLASS-METHOD-ILCM" class="headerlink" title="5.2&emsp;ITERATIVE LEAST-LIKELY CLASS METHOD(ILCM)"></a>5.2&emsp;ITERATIVE LEAST-LIKELY CLASS METHOD(ILCM)</h2><p>&emsp;前面描述的两种方法都只是试图增加正确类的成本，而没有指定模型应该选择哪些不正确的类。 这样的方法足以应用于诸如MNIST和CIFAR-10数据集，其中类别数量很少，并且所有类别彼此差异很大。 在ImageNet上，类别数量多得多，类别之间的差异程度也不同，这些方法可能导致无趣的错误分类，例如将一种雪橇犬误认为另一种雪橇犬。 为了创造更多有趣的错误，引入了迭代最不可能的类方法。</p><ul><li>这种迭代方法试图制作一个对抗图像，将其分类为特定的期望目标类别。 对于期望的类别，根据图像$X$上训练网络的预测选择最不可能的类：<script type="math/tex; mode=display">y_{LL} = arg \min_y\{p(y|X)\}</script></li></ul><p>&emsp;对于训练很好的分类器，最不可能的分类通常与真实分类非常不相似，因此这种攻击方法会导致更多有趣的错误，例如将狗误认为是飞机。</p><ul><li>生成一张被分类为 $y<em>{LL}$ 的对抗图像，在 $sign{∇_X {\log}\;p(y</em>{LL}|X)}$ 方向上进行迭代来最小化 ${\log}\;p(y<em>{LL}|X)$，交叉熵损失的神经网络最后的表达式为 $sign{-∇_X J(X,y</em>{LL})}$ ，过程为下：<script type="math/tex; mode=display">\sideset{}{^{adv}_0}X = X,  \sideset{}{^{adv}_{N+1}}X=Clip_{X,ε}\{\sideset{}{^{adv}_{N}}X-αsign(ᐁ_XJ(\sideset{}{^{adv}_{N}}X,y_{LL}))\}</script></li></ul><p><a href="#Summary-">Back</a></p><h1 id="6-emsp-JSMA"><a href="#6-emsp-JSMA" class="headerlink" title="6.&emsp;JSMA"></a>6.&emsp;<span id="JSMA">JSMA</span></h1><p>&emsp;Papernot 等人通过限制扰动的 $L_0$ 范数，创造了一种新的对抗攻击“JSMA”。从物理上来说，这意味着只需修改图像中的几个像素，而不是扰动整个图像就能欺骗分类器。他们的算法一次修改干净图像的一个像素，并监视改动所引起的分类变化。通过使用网络层输出的梯度来计算显着图执行监视。显著图数值越大，表示欺骗网络的可能性越高，越容易获得目标标签。一旦图被计算出来，算法选择最有效的像素进行修改来欺骗网络。重复该过程，直到对抗图像中允许的像素的最大数量被改变或者愚弄成功。</p><p><a href="https://jjzhou012.github.io/2018/03/12/JSMA/" target="_blank" rel="noopener">JSMA</a></p><p><a href="#Summary-">Back</a></p><h1 id="7-emsp-One-Pixel"><a href="#7-emsp-One-Pixel" class="headerlink" title="7.&emsp;One-Pixel"></a>7.&emsp;<span id="One-Pixel">One-Pixel</span></h1><p>&emsp;一种极端的攻击方法，仅仅改变图像的一个像素实现对抗攻击。该攻击基于差分进化算法，迭代的修改每个像素值，生成子图像，和母图像进行对比，保留攻击效果最佳的子图像最终实现攻击。它对多种类型的DNN模型有效，且需要极少的对抗信息。</p><p><a href="#Summary-">Back</a></p><h1 id="8-emsp-C-amp-W-attacks"><a href="#8-emsp-C-amp-W-attacks" class="headerlink" title="8.&emsp;C&amp;W attacks"></a>8.&emsp;<span id="C.W-attacks">C&amp;W attacks</span></h1><p>通过限制扰动的l<em>0，l_2和l</em>∞范数使它们难以被察觉，并且成功的突破了防御净化法。</p><p><a href="#Summary-">Back</a></p><h1 id="9-emsp-DeepFool"><a href="#9-emsp-DeepFool" class="headerlink" title="9.&emsp;DeepFool"></a>9.&emsp;<span id="DeepFool">DeepFool</span></h1><p>&emsp;<a href="https://github.com/lts4/deepfool" target="_blank" rel="noopener">github</a>  </p><p>通过迭代生成最小规范扰动，将位于分类边界的图像逐步推到边界外，直到产生错误分类。</p><p><a href="#Summary-">Back</a></p><h1 id="10-emsp-Uni-perturbation"><a href="#10-emsp-Uni-perturbation" class="headerlink" title="10.&emsp;Uni.perturbation"></a>10.&emsp;<span id="Uni-pert">Uni.perturbation</span></h1><p><a href="#Summary-">Back</a></p><h1 id="11-emsp-UPSET"><a href="#11-emsp-UPSET" class="headerlink" title="11.&emsp;UPSET"></a>11.&emsp;<span id="UPSET">UPSET</span></h1><p><a href="#Summary-">Back</a></p><h1 id="12-emsp-ANGRI"><a href="#12-emsp-ANGRI" class="headerlink" title="12.&emsp;ANGRI"></a>12.&emsp;<span id="ANGRI">ANGRI</span></h1><p><a href="#Summary-">Back</a></p><h1 id="13-emsp-Houdini"><a href="#13-emsp-Houdini" class="headerlink" title="13.&emsp;Houdini"></a>13.&emsp;<span id="Houdini">Houdini</span></h1><p>通过限制l<em>2和l</em>∞范数生成能适应任务损失的对抗样本来欺骗基于梯度的ML模型。该算法利用神经网络的可微损耗函数的梯度来计算扰动。</p><p><a href="#Summary-">Back</a></p><h1 id="14-emsp-ATNs"><a href="#14-emsp-ATNs" class="headerlink" title="14.&emsp;ATNs"></a>14.&emsp;<span id="ATNs">ATNs</span></h1><p><a href="#Summary-">Back</a></p></picture>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：Andy_z&lt;br&gt;翻译文献：&lt;a href=&quot;https://arxiv.org/abs/1801.00553&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Threat of Adversarial Attacks on
      
    
    </summary>
    
      <category term="对抗攻击" scheme="http://yoururl.com/categories/%E5%AF%B9%E6%8A%97%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Summary" scheme="http://yoururl.com/tags/Summary/"/>
    
      <category term="Adversarial attack" scheme="http://yoururl.com/tags/Adversarial-attack/"/>
    
      <category term="Translation" scheme="http://yoururl.com/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoururl.com/2018/03/08/%E5%AF%B9%E6%8A%97%E6%94%BB%E5%87%BB%E7%BB%BC%E8%BF%B01%EF%BC%9A%E5%AF%B9%E6%8A%97%E6%A0%B7%E6%9C%AC%E4%BA%A7%E7%94%9F%E4%B8%8EFGSM%E5%8E%9F%E7%90%86/"/>
    <id>http://yoururl.com/2018/03/08/对抗攻击综述1：对抗样本产生与FGSM原理/</id>
    <published>2018-03-08T10:38:04.000Z</published>
    <updated>2018-03-12T10:53:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对抗攻击综述-1-：对抗样本产生与FGSM原理"><a href="#对抗攻击综述-1-：对抗样本产生与FGSM原理" class="headerlink" title="对抗攻击综述(1)：对抗样本产生与FGSM原理"></a>对抗攻击综述(1)：对抗样本产生与FGSM原理</h1><blockquote><p>作者：Andy_z<br>阅读文献：<a href="https://arxiv.org/abs/1412.6572" target="_blank" rel="noopener">EXPLAINING AND HARNESSING ADVERSARIAL EXAMPLES</a></p></blockquote><h2 id="1-emsp-对抗样本的线性解释"><a href="#1-emsp-对抗样本的线性解释" class="headerlink" title="1 &emsp;对抗样本的线性解释"></a>1 &emsp;对抗样本的线性解释</h2><p>&emsp;<strong>在许多问题中，单个输入特征的精度是有限的。</strong></p><ul><li>例如，数字图像每个像素通常只使用8位，因此它们会丢弃低于动态范围1/255的所有信息。  </li><li>如果扰动 $η$ 的每个元素小于特征的精度，则分类器对输入$x$和对抗输入 $x ̃=x+η$ 产生相同结果。<br>存在足够小的 $ε$，只要 $‖η‖_∞&lt;ε$，分类器就会分配给$x$和$x ̃$相同的类。  </li></ul><p>&emsp;考虑一个权值向量 $w$ 和一个对抗样本 $x ̃$ 的点积：  </p><script type="math/tex; mode=display">w^Tx ̃=w^Tx+w^Tη</script><ul><li><p>对抗扰动导致激活增长 $w^Tη$ 。令 $η=sign(w)$ ，我们可以最大化这个增量。 如果 $n$ 维权重向量 $w$ 的元素的平均值是 $m$ ，则激活将增加 $εmn$ 。  </p><blockquote><font color="#0099ff" size="2" face="黑体">[^_^]: 令扰动 $η$ 和权值向量 $w$ 各元素的符号相同，内积    $w^Tη$ 可最大化</font>  </blockquote></li><li><p>由于 $‖η‖_∞$ 不随维数变化而变化，但扰动 $η$ 引起的激活变化 $εmn$ 可随 $n$ 增加而线性增加。因此对于高维问题，对输入进行许多无限小的变化， 输出会产生一次大的变化。  </p></li></ul><p>&emsp;这个解释表明，<strong>如果一个简单的线性模型的输入具有足够的维度，它可能会有对抗样本。</strong> 基于线性的假设更简单，也可以解释为什么softmax回归容易受到对抗样本的影响。</p><picture><blockquote><p><a href="http://blog.csdn.net/Suan2014/article/details/77162042" target="_blank" rel="noopener">激活函数</a>:Sigmoid,Tanh,ReLu,softplus,softmax</p></blockquote><h2 id="2-emsp-非线性模型的线性扰动"><a href="#2-emsp-非线性模型的线性扰动" class="headerlink" title="2 &emsp;非线性模型的线性扰动"></a>2 &emsp;非线性模型的线性扰动</h2><p>&emsp;对抗样本的线性视图提出了一种快速生成对抗样本的方法。<br>&emsp;更复杂的非线性模型如sigmoid网络经过仔细调整，将其大部分时间花费在非饱和，更线性的机制中，因而也会受到对抗扰动。</p><ul><li>快速梯度符号法（FGSM）：<picture></picture></li></ul><div class="table-container"><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>$θ$</td><td>模型参数</td></tr><tr><td>$x$</td><td>模型输入</td></tr><tr><td>$y$</td><td>关于x的目标</td></tr><tr><td>$J(θ,x,y)$</td><td>损失函数  </td></tr></tbody></table></div><p>&emsp;将损失函数线性化为  $θ$ 的当前值，得到最优的最大范数约束扰动</p><script type="math/tex; mode=display">η=εsign(∇_xJ(θ,x,y))</script><p>&emsp;称之为产生对抗样本的“快速梯度符号法”。 请注意，可以使用反向传播有效地计算所需的梯度。  </p><ul><li>FGSM在各种模型上的效果 :  </li></ul><div class="table-container"><table><thead><tr><th>$ε$</th><th>0.25</th><th>0.25</th><th>0.1</th></tr></thead><tbody><tr><td>测试集</td><td>MNIST</td><td>MNIST</td><td>CIFAR-10预</td></tr><tr><td>分类器</td><td>softmax</td><td>maxout</td><td>maxout</td></tr><tr><td>错误率</td><td>99.9％</td><td>89.4％</td><td>87.15％</td></tr><tr><td>平均置信度</td><td>79.3％</td><td>97.6％</td><td>96.6％</td></tr></tbody></table></div><blockquote><p><a href="https://github.com/lisa-lab/pylearn2/tree/master/pylearn2/scripts/papers/maxout" target="_blank" rel="noopener">预处理代码</a>: 其产生大约0.5的标准偏差。</p></blockquote><p>&emsp;其他生成对抗样本的简单方法也是可能的。 例如，我们还发现<strong>在梯度方向上以小角度旋转</strong> $x$ 也能可靠地产生对抗样本。</p><ul><li>在ImageNet上应用GoogLeNet的快速对抗样本生成演示：  </li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/67792085.jpg-Watermark" alt=""><br>对抗样本：</p><script type="math/tex; mode=display">x ̃=x+εsign(∇_xJ(θ,x,y))</script><picture><p>&emsp;通过添加一个不可察的小矢量，其元素等于损失函数梯度的元素的符号，可以改变GoogLeNet的图像分类。这里，$ε$ 对应于GoogLeNet转换为实数后8位图像编码的最小位数的大小， 因等于0.007。  </p><h2 id="3-emsp-反对权值衰减的线性模型对抗训练"><a href="#3-emsp-反对权值衰减的线性模型对抗训练" class="headerlink" title="3.&emsp;反对权值衰减的线性模型对抗训练"></a>3.&emsp;反对权值衰减的线性模型对抗训练</h2><p>&emsp;可以考虑的最简单的模型是逻辑回归。 在这种情况下，快速梯度符号方法是准确的。 通过案例来了解如何在简单的设置中生成对抗样本。  </p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/83037047.jpg-Watermark" alt=""></p><p>&emsp;图2：应用于逻辑回归的FGSM<br>&emsp;a）在MNIST上训练的逻辑回归模型的权重。<br>&emsp;b）在MNIST上训练的逻辑回归模型的权重的符号。 这是最佳的扰动。 尽管该模型的容量较低并且很适合，但这种扰动不容易被人察觉。<br>&emsp;c）MNIST数据集中的 3和 7 样本。 在这些例子中，逻辑回归模型在3与7的区分任务上有1.6％的错误率。<br>&emsp;d）Logistic回归模型的FGSM对抗样本，$ε=0.25$ 。 在这些样本中，逻辑回归模型的误差率为99％。</p><ul><li>如果训练一个简单的模型来识别标签 $y∈{-1,1}$  ，其中  <script type="math/tex; mode=display">P(y=1)=σ(w^Tx+b)</script>&emsp; $σ(z)$ 是逻辑sigmoid函数，使用梯度下降法训练，<script type="math/tex; mode=display">E_{x,y∽p_{data}}ζ(-y(w^Tx+b))</script>&emsp;其中 $ζ(z)=log(1+exp(z))$ 是softplus方程。根据梯度符号扰动，可以推导出一个简单的分析形式，用于训练 $x$ 的最坏情况对抗扰动，而不是 $x$ 本身。 请注意，梯度的符号只是 $-sign(x)$ ，而 $w^Tsign(w)=‖w‖_1$ 。 逻辑回归的对抗版本因此最小化为：  <script type="math/tex; mode=display">E_{x,y∽p_{data}}ζ(y(ε‖w‖_1-w^Tx-b))</script>&emsp;这与 $L^1$ <a href="http://blog.csdn.net/jinping_shi/article/details/52433975" target="_blank" rel="noopener">正则化</a>有些相似。 但是，有一些重要的区别。</li></ul><blockquote><font color="#0099ff" size="2" face="黑体"> [正则化]:采用正则化方法会自动削弱不重要的特征变量，自动从许多的特征变量中”提取“重要的特征变量，减小特征变量的数量级。这个方法非常有效，当我们有很多特征变量时，其中每一个变量都能对预测产生一点影响。</font></blockquote><ul><li>最重要的是，在训练期间将 $L^1$ 惩罚从模型的激活中减去，而不是增加到训练损失。 这意味着如果模型学习 $ζ$ 饱和充分置信，惩罚最终会开始消失。 这并不一定会发生 - 在欠拟合下，对抗训练只会使得更加欠拟合。 因此，我们可以将 $L^1$ <a href="https://www.cnblogs.com/lindaxin/p/7998334.html" target="_blank" rel="noopener">权值衰减</a>视为比对抗训练更坏的情况，因为它在好的边界不能解除激活。</li></ul><blockquote><font color="#0099ff" size="2" face="黑体"> [权值衰减]：在每次迭代过程中以某个小因子降低每个权值，这等效于修改E的定义，加入一个与网络权值的总量相应的惩罚项。此方法的动机是保持权值较小，避免weight decay,从而使学习过程向着复杂决策面的反方向偏。</font>  </blockquote><ul><li>如果我们将逻辑回归移出多分类softmax回归， $L^1$ 权重衰减变得更加严重，因为它将每个softmax的输出视为独立扰动，事实上，通常不可能找到与所有类的权重向量相关联的 $η$ 。在具有多个隐藏单元的深度网络的情况下，权重衰减高估了扰动可实现的损害。由于 $L^1$ 权重衰减高估了攻击可以造成的伤害量，因此有必要使用比与我们的特征精度相关联的 $ε$ 更小的 $L^1$ 权重衰减系数。</li><li>当在MNIST上训练maxout网络时，我们使用对抗训练获得了良好的结果 。当 权重衰减应用于第一层时，我们发现 $ε=0.0025$的系数太大，也会导致模型在训练集上超过5％的误差。较小的重量衰减系数可以实现成功训练，但没有获得正则化的效果。</li></ul><blockquote><p><a href="http://blog.csdn.net/hjimce/article/details/50414467" target="_blank" rel="noopener">maxout</a></p></blockquote><h2 id="4-emsp-深度网络的对抗训练"><a href="#4-emsp-深度网络的对抗训练" class="headerlink" title="4&emsp;深度网络的对抗训练"></a>4&emsp;深度网络的对抗训练</h2><p>&emsp;与浅层线性模型不同，深层网络至少能够体现抵抗对抗扰动的功能。<a href="https://www.jianshu.com/p/52e773d47338" target="_blank" rel="noopener">泛逼近理论</a>表示，只要隐藏层允许有足够的单元，具有至少一个隐藏层的神经网络可以表示任意精度的任何函数。 浅层线性模型不能在训练点附近变得恒定，同时也对不同的训练点产生不同的输出。</p><ul><li>作者发现基于FGSM的对抗目标函数训练是一种有效的正则化方法：<script type="math/tex; mode=display">J ̃(θ,x,y)=αJ(θ,x,y)+(1-α)J(θ,x+εsign(∇_xJ(θ,x,y)))</script>&emsp;在所有的实验中，使用 $α=0.5$。 用这种方法来训练一个<strong>被<a href="http://blog.csdn.net/hjimce/article/details/50413257" target="_blank" rel="noopener">dropout</a>规范化的maxout网络</strong>：</li></ul><div class="table-container"><table><thead><tr><th>模型是否经过对抗训练</th><th>未经过</th><th>经过</th></tr></thead><tbody><tr><td>错误率</td><td>0.94％</td><td>0.84％  </td></tr></tbody></table></div><p>&emsp;观察到在训练集上的对抗样本中没有达到零错误率。作者通过进行两项更改来解决这个问题。首先，使模型更大，每层使用1600个单元，而不是原来的maxout网络使用的240个单元，使用<a href="https://deeplearning4j.org/cn/earlystopping" target="_blank" rel="noopener">early stopping</a>，并且当验证集错误率经过100个周期后未减少时终止学习。实验发现：  </p><ul><li>如果没有对抗训练，会导致模型轻微过拟合，并在测试集中获得1.14％的错误率  </li><li>通过对抗训练，验证集错误率随着时间的推移而趋于平稳，并且进展缓慢。<br>虽然验证集错误非常平坦，但对抗验证集错误不是。  </li></ul><p>&emsp;因此，我们对对抗验证集误差使用了early stopping。用这个标准选择训练的周期数量，对所有60,000个样本进行再训练。对于随机数发生器使用不同的<a href="http://blog.csdn.net/linzch3/article/details/58220569" target="_blank" rel="noopener">seed</a>进行五次不同的训练，用于选择训练样本的mini_batches，初始化模型权重以及生成五个实验的dropout，  </p><blockquote><font color="#0099ff" size="2" face="黑体">seed() 用于指定随机数生成时所用算法开始的整数值，如果使用相同的seed()值，则每次生成的随即数都相同，如果不设置这个值，则系统根据时间来自己选择这个值，此时每次生成的随机数因时间差异而不同。</font>  </blockquote><div class="table-container"><table><thead><tr><th>实验对比</th><th>1-4</th><th>5</th><th>MNIST排列不变版本</th><th>微调DBM</th></tr></thead><tbody><tr><td>误差率</td><td>0.77％</td><td>0.83％</td><td>0.782％</td><td>0.79％   </td></tr></tbody></table></div><ul><li>对抗训练过的模型表现出更强的鲁棒性。  </li></ul><div class="table-container"><table><thead><tr><th>对抗样本生成来源</th><th>原始模型</th><th>原始模型</th><th>dropour规范化新模型</th></tr></thead><tbody><tr><td>识别模型</td><td>原始模型</td><td>对抗训练模型</td><td>原始模型</td></tr><tr><td>错误率</td><td>89.4%</td><td>19.6％</td><td>40.9%  </td></tr></tbody></table></div><ul><li>学习模型的权重发生了显着变化，对抗训练模型的权重明显更加局部化和可解释</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/65793832.jpg-Watermark" alt=""></p><p>图3：在MNIST上训练的maxout网络的权重可视化。 每行显示单个maxout单元的过滤器。 左）原始模型。 右）对抗训练过的模型。</p><ul><li>事实上，在许多情况下，噪声会导致较低的目标函数值。 可以将对抗训练视为在噪声输入集合中进行硬性样本挖掘，以便通过仅考虑强烈抵制分类的那些噪点来更有效地进行训练。</li></ul><p>&emsp;作为控制实验，作者训练了一个带有噪声的maxout网络，每个像素被随机添加噪声 $±ε$，或者将 $U∈(-ε,ε)$ 中的噪声添加到每个像素。<br>&emsp;在FGSM对抗样本中的分类情况：</p><div class="table-container"><table><thead><tr><th>噪声类型</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>错误率</td><td>86.2%</td><td>90.4%</td></tr><tr><td>置信度</td><td>97.3%</td><td>97.8%  </td></tr></tbody></table></div><h2 id="5-emsp-不同种类的模型容量"><a href="#5-emsp-不同种类的模型容量" class="headerlink" title="5&emsp;不同种类的模型容量"></a>5&emsp;不同种类的模型容量</h2><p>&emsp;对抗样本的存在似乎与直觉相反的一个原因是，我们大多数人对高维空间的直觉很差。 我们生活在三个维度中，所以我们不习惯在数百个维度中添加小的扰动来产生巨大的效果。 还有另一种方式，我们的直觉不能很好的为我们服务。 许多人认为低容量的模型无法做出许多不同的置信预测。这是不正确的。</p><ul><li><p>符合直觉的低容量模型，例如浅层RBF网络：</p><script type="math/tex; mode=display">p(y=1|x)=exp({(x-μ)^T}β(x-μ))</script><p>只能有把握地预测在 $μ$ 附近存在正类。 在其他地方，它们默认预测类别不存在，或者具有低置信度的预测。  </p></li><li><p>RBF网络自然不受对抗样本的影响，因为当它们被愚弄时，置信度很低。 使用FGSM生成的对抗样本，$ε=0.25$ ，没有隐藏层的浅RBF网络在MNIST上获得55.4％的错误率。 然而，它对错误样本的置信度只有1.2％。 它对干净测试样本的平均置信度是60.6％。 我们不能指望一个容量如此低的模型在空间的所有点上都能得到正确的答案，但它确实可以通过在它无法识别的点上大大减少置信度，从而做出相对正确的回应。</p></li><li><p>但是，RBF单元对于任何重要的转换都不是不变的，所以它们不能一概而论。 我们可以将线性单元和RBF单元视为准确-召回权衡曲线上的不同点。 线性单位通过响应某个方向上的每个输入来实现高召回率，但由于在不熟悉的情况下响应过强可能会导致精度低。 RBF单元通过仅响应空间中的特定点来实现高精度，但是这样做会牺牲召回率。  </p></li></ul><h2 id="6-emsp-对抗样本的泛化能力"><a href="#6-emsp-对抗样本的泛化能力" class="headerlink" title="6&emsp;对抗样本的泛化能力"></a>6&emsp;对抗样本的泛化能力</h2><p>&emsp;对抗样本的一个有趣方面是，<strong>为其中一个模型生成的样本经常能被其他模型错误分类，即使它们具有不同的架构或在不相交的训练集上进行训练。 而且，当这些不同的模型将一个对抗样本错误分类时，他们经常会归为同一类。</strong> 基于极端非线性和过度拟合的解释不能轻易解释这种行为 - 为什么多余的容量过剩的极端非线性模型始终以相同的方式标记分布外的点？ 这种行为尤其令人惊讶，从这样的假设来看，对抗样本就像实数空间中的有理数分布，因为在这种观点中，对抗样本很常见，但只发生在非常精确的位置。</p><ul><li><p>在线性观点下，对抗样本出现在宽泛的子空间中。 方向 $η$ 只需要具有损失函数梯度的正点积， $ε$ 只需要足够大。 图4显示了这种现象。 通过追踪出不同的值 $ε$  ，我们发现对抗样本出现在由FGSM方法定义的1-D子空间的连续区域中，而不是离散的。 这就解释了为什么对抗样本非常丰富，为什么一个分类器错误分类的样本具有相当高的可能性被另一个分类器错误分类。</p><picture></picture></li><li><p>为了解释为什么多个分类器将对抗样本分类为同一个类，我们假设用当前方法训练的神经网络都类似于在相同训练集上学习的线性分类器。 这个参考分类器在训练集的不同子集上训练时能够学习大致相同的分类权重，这仅仅是因为机器学习算法能够泛化。 基础分类权重的稳定性反过来又会导致对抗样本的稳定性。</p></li></ul><p>&emsp;为了检验这个假设，我们在深度maxout网络上生成了对抗样本，并使用浅softmax网络和浅RBF网络对这些样本进行了分类。在由maxout网络误分类的样本中，</p><div class="table-container"><table><thead><tr><th>分类模型</th><th>softmax网络</th><th>浅层RBF网络</th></tr></thead><tbody><tr><td>预测</td><td>54.6%</td><td>16.0%</td></tr><tr><td>回归预测</td><td>84.6%</td><td>54.3%</td></tr></tbody></table></div><p>&emsp;这些数字很大程度上是由不同模型的差错率驱动的。如果我们不把注意力放在两种模型比较出错的情况下，softmax回归预测84.6％的时间是maxout类别，而RBF网络只能预测maxout类别的时间为54.3％。为了比较，RBF网络可以预测softmax回归的时间为53.6％，所以它对自己的行为确实具有强大的线性分量。我们的假设并不能解释所有maxou网络的错误或者所有模型中泛化的错误，但很明显，其中很大一部分与线性行为一致是跨模型泛化的主要原因。</p><h2 id="7-emsp-讨论总结"><a href="#7-emsp-讨论总结" class="headerlink" title="7&emsp;讨论总结"></a>7&emsp;讨论总结</h2><ul><li><p>对抗样本可以解释为高维点积的一个特性。 它们是模型过于线性而非非线性的结果。</p></li><li><p>横跨不同模型的对抗样本的泛化可以解释为对抗扰动与模型的权重向量高度一致，并且不同模型在被训练执行相同任务时学习相似函数。</p></li><li><p>扰动的方向，而不是空间中的特定点。 空间并不是充满了对抗样本，它们像实数中的有理数一样分布。</p></li><li>因为它是最重要的方向，所以对抗干扰会在不同的干净样本上泛化。</li><li>我们引入了一系列快速生成对抗样本的方法。</li><li>我们已经证明，对抗训练可以导致正则化; 甚至比dropout更加正则化。</li><li>我们的运行控制实验未能用更简单但效率更低的正则化器重现此效应，包括 $L^1$ 权重衰减和增加噪音。</li><li>易于优化的模型易于受到干扰。</li><li>线性模型缺乏抵抗对抗扰动的能力; 只有具有隐藏层的结构（泛逼近定理适用）应该被训练来抵抗对抗扰动。</li><li>RBF网络对对抗样本有抗性。</li><li>训练模型化输入分布的模型不能抵抗对抗样本。</li><li>集成方法不能抵抗对抗样本。</li></ul></picture></picture>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对抗攻击综述-1-：对抗样本产生与FGSM原理&quot;&gt;&lt;a href=&quot;#对抗攻击综述-1-：对抗样本产生与FGSM原理&quot; class=&quot;headerlink&quot; title=&quot;对抗攻击综述(1)：对抗样本产生与FGSM原理&quot;&gt;&lt;/a&gt;对抗攻击综述(1)：对抗样本产生与
      
    
    </summary>
    
      <category term="对抗攻击" scheme="http://yoururl.com/categories/%E5%AF%B9%E6%8A%97%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Adversarial attack" scheme="http://yoururl.com/tags/Adversarial-attack/"/>
    
      <category term="Translation" scheme="http://yoururl.com/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>FGSM</title>
    <link href="http://yoururl.com/2018/03/08/The-Adversarial-Attacks-on-Deep-Learning-A-Summary-1/"/>
    <id>http://yoururl.com/2018/03/08/The-Adversarial-Attacks-on-Deep-Learning-A-Summary-1/</id>
    <published>2018-03-08T10:38:04.000Z</published>
    <updated>2018-03-12T13:06:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对抗攻击综述-1-：对抗样本产生与FGSM原理"><a href="#对抗攻击综述-1-：对抗样本产生与FGSM原理" class="headerlink" title="对抗攻击综述(1)：对抗样本产生与FGSM原理"></a>对抗攻击综述(1)：对抗样本产生与FGSM原理</h1><blockquote><p>作者：zjj<br>阅读文献：<a href="https://arxiv.org/abs/1412.6572" target="_blank" rel="noopener">EXPLAINING AND HARNESSING ADVERSARIAL EXAMPLES</a></p></blockquote><h2 id="1-emsp-对抗样本的线性解释"><a href="#1-emsp-对抗样本的线性解释" class="headerlink" title="1 &emsp;对抗样本的线性解释"></a>1 &emsp;对抗样本的线性解释</h2><p>&emsp;<strong>在许多问题中，单个输入特征的精度是有限的。</strong></p><ul><li>例如，数字图像每个像素通常只使用8位，因此它们会丢弃低于动态范围1/255的所有信息。  </li><li>如果扰动 $η$ 的每个元素小于特征的精度，则分类器对输入$x$和对抗输入 $x ̃=x+η$ 产生相同结果。<br>存在足够小的 $ε$，只要 $‖η‖_∞&lt;ε$，分类器就会分配给$x$和$x ̃$相同的类。  </li></ul><p>&emsp;考虑一个权值向量 $w$ 和一个对抗样本 $x ̃$ 的点积：  </p><script type="math/tex; mode=display">w^Tx ̃=w^Tx+w^Tη</script><ul><li><p>对抗扰动导致激活增长 $w^Tη$ 。令 $η=sign(w)$ ，我们可以最大化这个增量。 如果 $n$ 维权重向量 $w$ 的元素的平均值是 $m$ ，则激活将增加 $εmn$ 。  </p><blockquote><font color="#0099ff" size="2" face="黑体">[^_^]: 令扰动 $η$ 和权值向量 $w$ 各元素的符号相同，内积    $w^Tη$ 可最大化</font>  </blockquote></li><li><p>由于 $‖η‖_∞$ 不随维数变化而变化，但扰动 $η$ 引起的激活变化 $εmn$ 可随 $n$ 增加而线性增加。因此对于高维问题，对输入进行许多无限小的变化， 输出会产生一次大的变化。  </p></li></ul><p>&emsp;这个解释表明，<strong>如果一个简单的线性模型的输入具有足够的维度，它可能会有对抗样本。</strong> 基于线性的假设更简单，也可以解释为什么softmax回归容易受到对抗样本的影响。</p><picture><blockquote><p><a href="http://blog.csdn.net/Suan2014/article/details/77162042" target="_blank" rel="noopener">激活函数</a>:Sigmoid,Tanh,ReLu,softplus,softmax</p></blockquote><h2 id="2-emsp-非线性模型的线性扰动"><a href="#2-emsp-非线性模型的线性扰动" class="headerlink" title="2 &emsp;非线性模型的线性扰动"></a>2 &emsp;非线性模型的线性扰动</h2><p>&emsp;对抗样本的线性视图提出了一种快速生成对抗样本的方法。<br>&emsp;更复杂的非线性模型如sigmoid网络经过仔细调整，将其大部分时间花费在非饱和，更线性的机制中，因而也会受到对抗扰动。</p><ul><li>快速梯度符号法（FGSM）：<picture></picture></li></ul><div class="table-container"><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>$θ$</td><td>模型参数</td></tr><tr><td>$x$</td><td>模型输入</td></tr><tr><td>$y$</td><td>关于x的目标</td></tr><tr><td>$J(θ,x,y)$</td><td>损失函数  </td></tr></tbody></table></div><p>&emsp;将损失函数线性化为  $θ$ 的当前值，得到最优的最大范数约束扰动</p><script type="math/tex; mode=display">η=εsign(∇_xJ(θ,x,y))</script><p>&emsp;称之为产生对抗样本的“快速梯度符号法”。 请注意，可以使用反向传播有效地计算所需的梯度。  </p><ul><li>FGSM在各种模型上的效果 :  </li></ul><div class="table-container"><table><thead><tr><th>$ε$</th><th>0.25</th><th>0.25</th><th>0.1</th></tr></thead><tbody><tr><td>测试集</td><td>MNIST</td><td>MNIST</td><td>CIFAR-10预</td></tr><tr><td>分类器</td><td>softmax</td><td>maxout</td><td>maxout</td></tr><tr><td>错误率</td><td>99.9％</td><td>89.4％</td><td>87.15％</td></tr><tr><td>平均置信度</td><td>79.3％</td><td>97.6％</td><td>96.6％</td></tr></tbody></table></div><blockquote><p><a href="https://github.com/lisa-lab/pylearn2/tree/master/pylearn2/scripts/papers/maxout" target="_blank" rel="noopener">预处理代码</a><br>其产生大约0.5的标准偏差。</p></blockquote><p>&emsp;其他生成对抗样本的简单方法也是可能的。 例如，我们还发现<strong>在梯度方向上以小角度旋转</strong> $x$ 也能可靠地产生对抗样本。</p><ul><li>在ImageNet上应用GoogLeNet的快速对抗样本生成演示：  </li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/67792085.jpg-Watermark" alt=""></p><p>&emsp;通过添加一个不可察的小矢量，其元素等于损失函数梯度的元素的符号，可以改变GoogLeNet的图像分类。这里，$ε$ 对应于GoogLeNet转换为实数后8位图像编码的最小位数的大小， 因等于0.007。  </p><p>&emsp;对抗样本生成过程：</p><script type="math/tex; mode=display">x ̃=x+εsign(∇_xJ(θ,x,y))</script><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/43011594.jpg-Watermark" alt=""></p><h2 id="3-emsp-反对权值衰减的线性模型对抗训练"><a href="#3-emsp-反对权值衰减的线性模型对抗训练" class="headerlink" title="3.&emsp;反对权值衰减的线性模型对抗训练"></a>3.&emsp;反对权值衰减的线性模型对抗训练</h2><p>&emsp;可以考虑的最简单的模型是逻辑回归。 在这种情况下，快速梯度符号方法是准确的。 通过案例来了解如何在简单的设置中生成对抗样本。  </p><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/83037047.jpg-Watermark" alt=""></p><p>&emsp;图2：应用于逻辑回归的FGSM<br>&emsp;a）在MNIST上训练的逻辑回归模型的权重。<br>&emsp;b）在MNIST上训练的逻辑回归模型的权重的符号。 这是最佳的扰动。 尽管该模型的容量较低并且很适合，但这种扰动不容易被人察觉。<br>&emsp;c）MNIST数据集中的 3和 7 样本。 在这些例子中，逻辑回归模型在3与7的区分任务上有1.6％的错误率。<br>&emsp;d）Logistic回归模型的FGSM对抗样本，$ε=0.25$ 。 在这些样本中，逻辑回归模型的误差率为99％。</p><ul><li>如果训练一个简单的模型来识别标签 $y∈{-1,1}$  ，其中  <script type="math/tex; mode=display">P(y=1)=σ(w^Tx+b)</script>&emsp; $σ(z)$ 是逻辑sigmoid函数，使用梯度下降法训练，<script type="math/tex; mode=display">E_{x,y∽p_{data}}ζ(-y(w^Tx+b))</script>&emsp;其中 $ζ(z)=log(1+exp(z))$ 是softplus方程。根据梯度符号扰动，可以推导出一个简单的分析形式，用于训练 $x$ 的最坏情况对抗扰动，而不是 $x$ 本身。 请注意，梯度的符号只是 $-sign(x)$ ，而 $w^Tsign(w)=‖w‖_1$ 。 逻辑回归的对抗版本因此最小化为：  <script type="math/tex; mode=display">E_{x,y∽p_{data}}ζ(y(ε‖w‖_1-w^Tx-b))</script>&emsp;这与 $L^1$ <a href="http://blog.csdn.net/jinping_shi/article/details/52433975" target="_blank" rel="noopener">正则化</a>有些相似。 但是，有一些重要的区别。</li></ul><blockquote><font color="#0099ff" size="2" face="黑体"> [正则化]:采用正则化方法会自动削弱不重要的特征变量，自动从许多的特征变量中”提取“重要的特征变量，减小特征变量的数量级。这个方法非常有效，当我们有很多特征变量时，其中每一个变量都能对预测产生一点影响。</font></blockquote><ul><li>最重要的是，在训练期间将 $L^1$ 惩罚从模型的激活中减去，而不是增加到训练损失。 这意味着如果模型学习 $ζ$ 饱和充分置信，惩罚最终会开始消失。 这并不一定会发生 - 在欠拟合下，对抗训练只会使得更加欠拟合。 因此，我们可以将 $L^1$ <a href="https://www.cnblogs.com/lindaxin/p/7998334.html" target="_blank" rel="noopener">权值衰减</a>视为比对抗训练更坏的情况，因为它在好的边界不能解除激活。</li></ul><blockquote><font color="#0099ff" size="2" face="黑体"> [权值衰减]：在每次迭代过程中以某个小因子降低每个权值，这等效于修改E的定义，加入一个与网络权值的总量相应的惩罚项。此方法的动机是保持权值较小，避免weight decay,从而使学习过程向着复杂决策面的反方向偏。</font>  </blockquote><ul><li>如果我们将逻辑回归移出多分类softmax回归， $L^1$ 权重衰减变得更加严重，因为它将每个softmax的输出视为独立扰动，事实上，通常不可能找到与所有类的权重向量相关联的 $η$ 。在具有多个隐藏单元的深度网络的情况下，权重衰减高估了扰动可实现的损害。由于 $L^1$ 权重衰减高估了攻击可以造成的伤害量，因此有必要使用比与我们的特征精度相关联的 $ε$ 更小的 $L^1$ 权重衰减系数。</li><li>当在MNIST上训练maxout网络时，我们使用对抗训练获得了良好的结果 。当 权重衰减应用于第一层时，我们发现 $ε=0.0025$的系数太大，也会导致模型在训练集上超过5％的误差。较小的重量衰减系数可以实现成功训练，但没有获得正则化的效果。</li></ul><blockquote><p><a href="http://blog.csdn.net/hjimce/article/details/50414467" target="_blank" rel="noopener">maxout</a></p></blockquote><h2 id="4-emsp-深度网络的对抗训练"><a href="#4-emsp-深度网络的对抗训练" class="headerlink" title="4&emsp;深度网络的对抗训练"></a>4&emsp;深度网络的对抗训练</h2><p>&emsp;与浅层线性模型不同，深层网络至少能够体现抵抗对抗扰动的功能。<a href="https://www.jianshu.com/p/52e773d47338" target="_blank" rel="noopener">泛逼近理论</a>表示，只要隐藏层允许有足够的单元，具有至少一个隐藏层的神经网络可以表示任意精度的任何函数。 浅层线性模型不能在训练点附近变得恒定，同时也对不同的训练点产生不同的输出。</p><ul><li>作者发现基于FGSM的对抗目标函数训练是一种有效的正则化方法：<script type="math/tex; mode=display">J ̃(θ,x,y)=αJ(θ,x,y)+(1-α)J(θ,x+εsign(∇_xJ(θ,x,y)))</script>&emsp;在所有的实验中，使用 $α=0.5$。 用这种方法来训练一个<strong>被<a href="http://blog.csdn.net/hjimce/article/details/50413257" target="_blank" rel="noopener">dropout</a>规范化的maxout网络</strong>：</li></ul><div class="table-container"><table><thead><tr><th>模型是否经过对抗训练</th><th>未经过</th><th>经过</th></tr></thead><tbody><tr><td>错误率</td><td>0.94％</td><td>0.84％  </td></tr></tbody></table></div><p>&emsp;观察到在训练集上的对抗样本中没有达到零错误率。作者通过进行两项更改来解决这个问题。首先，使模型更大，每层使用1600个单元，而不是原来的maxout网络使用的240个单元，使用<a href="https://deeplearning4j.org/cn/earlystopping" target="_blank" rel="noopener">early stopping</a>，并且当验证集错误率经过100个周期后未减少时终止学习。实验发现：  </p><ul><li>如果没有对抗训练，会导致模型轻微过拟合，并在测试集中获得1.14％的错误率  </li><li>通过对抗训练，验证集错误率随着时间的推移而趋于平稳，并且进展缓慢。<br>虽然验证集错误非常平坦，但对抗验证集错误不是。  </li></ul><p>&emsp;因此，我们对对抗验证集误差使用了early stopping。用这个标准选择训练的周期数量，对所有60,000个样本进行再训练。对于随机数发生器使用不同的<a href="http://blog.csdn.net/linzch3/article/details/58220569" target="_blank" rel="noopener">seed</a>进行五次不同的训练，用于选择训练样本的mini_batches，初始化模型权重以及生成五个实验的dropout，  </p><blockquote><font color="#0099ff" size="2" face="黑体">seed() 用于指定随机数生成时所用算法开始的整数值，如果使用相同的seed()值，则每次生成的随即数都相同，如果不设置这个值，则系统根据时间来自己选择这个值，此时每次生成的随机数因时间差异而不同。</font>  </blockquote><div class="table-container"><table><thead><tr><th>实验对比</th><th>1-4</th><th>5</th><th>MNIST排列不变版本</th><th>微调DBM</th></tr></thead><tbody><tr><td>误差率</td><td>0.77％</td><td>0.83％</td><td>0.782％</td><td>0.79％   </td></tr></tbody></table></div><ul><li>对抗训练过的模型表现出更强的鲁棒性。  </li></ul><div class="table-container"><table><thead><tr><th>对抗样本生成来源</th><th>原始模型</th><th>原始模型</th><th>dropour规范化新模型</th></tr></thead><tbody><tr><td>识别模型</td><td>原始模型</td><td>对抗训练模型</td><td>原始模型</td></tr><tr><td>错误率</td><td>89.4%</td><td>19.6％</td><td>40.9%  </td></tr></tbody></table></div><ul><li>学习模型的权重发生了显着变化，对抗训练模型的权重明显更加局部化和可解释</li></ul><p><img src="http://p5bxip6n0.bkt.clouddn.com/18-3-10/65793832.jpg-Watermark" alt=""></p><p>图3：在MNIST上训练的maxout网络的权重可视化。 每行显示单个maxout单元的过滤器。 左）原始模型。 右）对抗训练过的模型。</p><ul><li>事实上，在许多情况下，噪声会导致较低的目标函数值。 可以将对抗训练视为在噪声输入集合中进行硬性样本挖掘，以便通过仅考虑强烈抵制分类的那些噪点来更有效地进行训练。</li></ul><p>&emsp;作为控制实验，作者训练了一个带有噪声的maxout网络，每个像素被随机添加噪声 $±ε$，或者将 $U∈(-ε,ε)$ 中的噪声添加到每个像素。<br>&emsp;在FGSM对抗样本中的分类情况：</p><div class="table-container"><table><thead><tr><th>噪声类型</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>错误率</td><td>86.2%</td><td>90.4%</td></tr><tr><td>置信度</td><td>97.3%</td><td>97.8%  </td></tr></tbody></table></div><h2 id="5-emsp-不同种类的模型容量"><a href="#5-emsp-不同种类的模型容量" class="headerlink" title="5&emsp;不同种类的模型容量"></a>5&emsp;不同种类的模型容量</h2><p>&emsp;对抗样本的存在似乎与直觉相反的一个原因是，我们大多数人对高维空间的直觉很差。 我们生活在三个维度中，所以我们不习惯在数百个维度中添加小的扰动来产生巨大的效果。 还有另一种方式，我们的直觉不能很好的为我们服务。 许多人认为低容量的模型无法做出许多不同的置信预测。这是不正确的。</p><ul><li><p>符合直觉的低容量模型，例如浅层RBF网络：</p><script type="math/tex; mode=display">p(y=1|x)=exp({(x-μ)^T}β(x-μ))</script><p>只能有把握地预测在 $μ$ 附近存在正类。 在其他地方，它们默认预测类别不存在，或者具有低置信度的预测。  </p></li><li><p>RBF网络自然不受对抗样本的影响，因为当它们被愚弄时，置信度很低。 使用FGSM生成的对抗样本，$ε=0.25$ ，没有隐藏层的浅RBF网络在MNIST上获得55.4％的错误率。 然而，它对错误样本的置信度只有1.2％。 它对干净测试样本的平均置信度是60.6％。 我们不能指望一个容量如此低的模型在空间的所有点上都能得到正确的答案，但它确实可以通过在它无法识别的点上大大减少置信度，从而做出相对正确的回应。</p></li><li><p>但是，RBF单元对于任何重要的转换都不是不变的，所以它们不能一概而论。 我们可以将线性单元和RBF单元视为准确-召回权衡曲线上的不同点。 线性单位通过响应某个方向上的每个输入来实现高召回率，但由于在不熟悉的情况下响应过强可能会导致精度低。 RBF单元通过仅响应空间中的特定点来实现高精度，但是这样做会牺牲召回率。  </p></li></ul><h2 id="6-emsp-对抗样本的泛化能力"><a href="#6-emsp-对抗样本的泛化能力" class="headerlink" title="6&emsp;对抗样本的泛化能力"></a>6&emsp;对抗样本的泛化能力</h2><p>&emsp;对抗样本的一个有趣方面是，<strong>为其中一个模型生成的样本经常能被其他模型错误分类，即使它们具有不同的架构或在不相交的训练集上进行训练。 而且，当这些不同的模型将一个对抗样本错误分类时，他们经常会归为同一类。</strong> 基于极端非线性和过度拟合的解释不能轻易解释这种行为 - 为什么多余的容量过剩的极端非线性模型始终以相同的方式标记分布外的点？ 这种行为尤其令人惊讶，从这样的假设来看，对抗样本就像实数空间中的有理数分布，因为在这种观点中，对抗样本很常见，但只发生在非常精确的位置。</p><ul><li><p>在线性观点下，对抗样本出现在宽泛的子空间中。 方向 $η$ 只需要具有损失函数梯度的正点积， $ε$ 只需要足够大。 图4显示了这种现象。 通过追踪出不同的值 $ε$  ，我们发现对抗样本出现在由FGSM方法定义的1-D子空间的连续区域中，而不是离散的。 这就解释了为什么对抗样本非常丰富，为什么一个分类器错误分类的样本具有相当高的可能性被另一个分类器错误分类。</p><picture></picture></li><li><p>为了解释为什么多个分类器将对抗样本分类为同一个类，我们假设用当前方法训练的神经网络都类似于在相同训练集上学习的线性分类器。 这个参考分类器在训练集的不同子集上训练时能够学习大致相同的分类权重，这仅仅是因为机器学习算法能够泛化。 基础分类权重的稳定性反过来又会导致对抗样本的稳定性。</p></li></ul><p>&emsp;为了检验这个假设，我们在深度maxout网络上生成了对抗样本，并使用浅softmax网络和浅RBF网络对这些样本进行了分类。在由maxout网络误分类的样本中，</p><div class="table-container"><table><thead><tr><th>分类模型</th><th>softmax网络</th><th>浅层RBF网络</th></tr></thead><tbody><tr><td>预测</td><td>54.6%</td><td>16.0%</td></tr><tr><td>回归预测</td><td>84.6%</td><td>54.3%</td></tr></tbody></table></div><p>&emsp;这些数字很大程度上是由不同模型的差错率驱动的。如果我们不把注意力放在两种模型比较出错的情况下，softmax回归预测84.6％的时间是maxout类别，而RBF网络只能预测maxout类别的时间为54.3％。为了比较，RBF网络可以预测softmax回归的时间为53.6％，所以它对自己的行为确实具有强大的线性分量。我们的假设并不能解释所有maxou网络的错误或者所有模型中泛化的错误，但很明显，其中很大一部分与线性行为一致是跨模型泛化的主要原因。</p><h2 id="7-emsp-讨论总结"><a href="#7-emsp-讨论总结" class="headerlink" title="7&emsp;讨论总结"></a>7&emsp;讨论总结</h2><ul><li><p>对抗样本可以解释为高维点积的一个特性。 它们是模型过于线性而非非线性的结果。</p></li><li><p>横跨不同模型的对抗样本的泛化可以解释为对抗扰动与模型的权重向量高度一致，并且不同模型在被训练执行相同任务时学习相似函数。</p></li><li><p>扰动的方向，而不是空间中的特定点。 空间并不是充满了对抗样本，它们像实数中的有理数一样分布。</p></li><li>因为它是最重要的方向，所以对抗干扰会在不同的干净样本上泛化。</li><li>我们引入了一系列快速生成对抗样本的方法。</li><li>我们已经证明，对抗训练可以导致正则化; 甚至比dropout更加正则化。</li><li>我们的运行控制实验未能用更简单但效率更低的正则化器重现此效应，包括 $L^1$ 权重衰减和增加噪音。</li><li>易于优化的模型易于受到干扰。</li><li>线性模型缺乏抵抗对抗扰动的能力; 只有具有隐藏层的结构（泛逼近定理适用）应该被训练来抵抗对抗扰动。</li><li>RBF网络对对抗样本有抗性。</li><li>训练模型化输入分布的模型不能抵抗对抗样本。</li><li>集成方法不能抵抗对抗样本。</li></ul></picture>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对抗攻击综述-1-：对抗样本产生与FGSM原理&quot;&gt;&lt;a href=&quot;#对抗攻击综述-1-：对抗样本产生与FGSM原理&quot; class=&quot;headerlink&quot; title=&quot;对抗攻击综述(1)：对抗样本产生与FGSM原理&quot;&gt;&lt;/a&gt;对抗攻击综述(1)：对抗样本产生与
      
    
    </summary>
    
      <category term="对抗攻击" scheme="http://yoururl.com/categories/%E5%AF%B9%E6%8A%97%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Adversarial attack" scheme="http://yoururl.com/tags/Adversarial-attack/"/>
    
      <category term="Translation" scheme="http://yoururl.com/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>使用inception-v3模型做图像识别</title>
    <link href="http://yoururl.com/2018/01/10/8.4%20%20%E4%BD%BF%E7%94%A8inception-v3%E5%81%9A%E5%90%84%E7%A7%8D%E5%9B%BE%E5%83%8F%E7%9A%84%E8%AF%86%E5%88%AB/"/>
    <id>http://yoururl.com/2018/01/10/8.4  使用inception-v3做各种图像的识别/</id>
    <published>2018-01-10T10:38:04.000Z</published>
    <updated>2018-03-18T16:23:35.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><p>建立 编号-分类 映射表（字典）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NodeLookup</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 存放分类标签的路径</span></span><br><span class="line">        label_lookup_path = <span class="string">'inception_model/imagenet_2012_challenge_label_map_proto.pbtxt'</span></span><br><span class="line">        <span class="comment"># 存放分类编号的路径</span></span><br><span class="line">        uid_lookup_path = <span class="string">'inception_model/imagenet_synset_to_human_label_map.txt'</span></span><br><span class="line">        self.node_lookup = self.load(label_lookup_path, uid_lookup_path)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">load</span><span class="params">(self, label_lookup_path, uid_lookup_path)</span>:</span></span><br><span class="line">        <span class="comment"># 加载  分类序列n*********--分类标签（名称）  文件</span></span><br><span class="line">        proto_as_ascii_lines = tf.gfile.GFile(uid_lookup_path).readlines()</span><br><span class="line">        uid_to_human = &#123;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 一行行读取数据</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> proto_as_ascii_lines :</span><br><span class="line">            <span class="comment"># 去掉换行符</span></span><br><span class="line">            line = line.strip(<span class="string">'\n'</span>)</span><br><span class="line">            <span class="comment"># 按照'\t'分割</span></span><br><span class="line">            parsed_items = line.split(<span class="string">'\t'</span>)</span><br><span class="line">            <span class="comment"># 获取分类序列</span></span><br><span class="line">            uid = parsed_items[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 获取分类标签</span></span><br><span class="line">            human_string = parsed_items[<span class="number">1</span>]</span><br><span class="line">            <span class="comment"># 保存编号序列n*******与分类名称映射关系， 字典</span></span><br><span class="line">            uid_to_human[uid] = human_string</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 加载分类序列n*******对应分类编号1-1000的文件</span></span><br><span class="line">        proto_as_ascii = tf.gfile.GFile(label_lookup_path).readlines()</span><br><span class="line">        node_id_to_uid = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> proto_as_ascii:</span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">'  target_class:'</span>):</span><br><span class="line">                <span class="comment"># 获取分类编号1-1000</span></span><br><span class="line">                target_class = int(line.split(<span class="string">': '</span>)[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">if</span> line.startswith(<span class="string">'  target_class_string:'</span>):</span><br><span class="line">                <span class="comment"># 获取编号序列串n**********</span></span><br><span class="line">                target_class_string = line.split(<span class="string">': '</span>)[<span class="number">1</span>]</span><br><span class="line">                <span class="comment"># 保存分类编号1-1000与编号序列n*******映射关系</span></span><br><span class="line">                node_id_to_uid[target_class] = target_class_string[<span class="number">1</span>:<span class="number">-2</span>]  <span class="comment"># 去引号</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 建立分类编号1-1000对应分类名称的映射关系</span></span><br><span class="line">        node_id_to_name = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> key, val <span class="keyword">in</span> node_id_to_uid.items():</span><br><span class="line">            <span class="comment"># 获取分类名称</span></span><br><span class="line">            name = uid_to_human[val]</span><br><span class="line">            <span class="comment"># 建立分类编号1-1000到分类名称的映射关系</span></span><br><span class="line">            node_id_to_name[key] = name</span><br><span class="line">        <span class="keyword">return</span> node_id_to_name</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 传入分类编号1-1000返回分类名称</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">id_to_string</span><span class="params">(self, node_id)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> node_id <span class="keyword">not</span> <span class="keyword">in</span> self.node_lookup:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">        <span class="keyword">return</span> self.node_lookup[node_id]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个图来存放google训练好的模型</span></span><br><span class="line"><span class="keyword">with</span> tf.gfile.FastGFile(<span class="string">'inception_model/classify_image_graph_def.pb'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    graph_def = tf.GraphDef()</span><br><span class="line">    graph_def.ParseFromString(f.read())</span><br><span class="line">    tf.import_graph_def(graph_def, name=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    softmax_tensor = sess.graph.get_tensor_by_name(<span class="string">'softmax:0'</span>)</span><br><span class="line">    <span class="comment"># 遍历目录</span></span><br><span class="line">    <span class="keyword">for</span> root,dirs,files <span class="keyword">in</span> os.walk(<span class="string">'images/'</span>):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            <span class="comment"># 载入图片</span></span><br><span class="line">            image_data = tf.gfile.FastGFile(os.path.join(root, file), <span class="string">'rb'</span>).read()</span><br><span class="line">            predictions = sess.run(softmax_tensor, &#123;<span class="string">'DecodeJpeg/contents:0'</span>: image_data&#125;) <span class="comment"># 图片为jpg格式</span></span><br><span class="line">            predictions = np.squeeze(predictions) <span class="comment"># 把结果转为1维数据</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 打印图片路径及名称</span></span><br><span class="line">            image_path = os.path.join(root, file)</span><br><span class="line">            print(image_path)</span><br><span class="line">            <span class="comment"># 显示图片</span></span><br><span class="line">            img = Image.open(image_path)</span><br><span class="line">            plt.imshow(img)</span><br><span class="line">            plt.axis(<span class="string">'off'</span>)</span><br><span class="line">            plt.show()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 排序</span></span><br><span class="line">            top_k = predictions.argsort()[<span class="number">-5</span>:][::<span class="number">-1</span>]</span><br><span class="line">            node_lookup = NodeLookup()</span><br><span class="line">            <span class="keyword">for</span> node_id <span class="keyword">in</span> top_k:</span><br><span class="line">                <span class="comment"># 获取分类名称</span></span><br><span class="line">                human_string = node_lookup.id_to_string(node_id)</span><br><span class="line">                <span class="comment"># 获取该分类置信度</span></span><br><span class="line">                score = predictions[node_id]</span><br><span class="line">                print(<span class="string">'%s (score = %.5f)'</span> % (human_string, score))</span><br><span class="line">            print()</span><br></pre></td></tr></table></figure><pre><code>images/airplane.jpg</code></pre><p><img src="output_4_1.png" alt="png"></p><pre><code>airliner (score = 0.26513)wing (score = 0.22947)warplane, military plane (score = 0.21153)space shuttle (score = 0.06658)projectile, missile (score = 0.01168)images/ball.jpg</code></pre><p><img src="output_4_3.png" alt="png"></p><pre><code>balloon (score = 0.94387)joystick (score = 0.00086)punching bag, punch bag, punching ball, punchball (score = 0.00070)red wolf, maned wolf, Canis rufus, Canis niger (score = 0.00050)parachute, chute (score = 0.00035)images/bird.jpg</code></pre><p><img src="output_4_5.png" alt="png"></p><pre><code>bald eagle, American eagle, Haliaeetus leucocephalus (score = 0.92000)kite (score = 0.00593)vulture (score = 0.00099)magpie (score = 0.00070)hen (score = 0.00064)images/bird1.jpg</code></pre><p><img src="output_4_7.png" alt="png"></p><pre><code>kite (score = 0.59593)vulture (score = 0.18804)bald eagle, American eagle, Haliaeetus leucocephalus (score = 0.03131)hornbill (score = 0.00592)black grouse (score = 0.00467)images/car.jpg</code></pre><p><img src="output_4_9.png" alt="png"></p><pre><code>sports car, sport car (score = 0.89957)racer, race car, racing car (score = 0.03727)convertible (score = 0.00740)grille, radiator grille (score = 0.00419)car wheel (score = 0.00284)images/hudie.jpg</code></pre><p><img src="output_4_11.png" alt="png"></p><pre><code>ringlet, ringlet butterfly (score = 0.31588)lycaenid, lycaenid butterfly (score = 0.31296)admiral (score = 0.27269)cabbage butterfly (score = 0.00675)monarch, monarch butterfly, milkweed butterfly, Danaus plexippus (score = 0.00424)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="图像识别" scheme="http://yoururl.com/categories/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Tensorflow" scheme="http://yoururl.com/tags/Tensorflow/"/>
    
      <category term="Neural Networks" scheme="http://yoururl.com/tags/Neural-Networks/"/>
    
      <category term="Image Recognition" scheme="http://yoururl.com/tags/Image-Recognition/"/>
    
  </entry>
  
  <entry>
    <title>下载Google图像识别模型inception-v3并查看结构</title>
    <link href="http://yoururl.com/2018/01/09/8.3+%E4%B8%8B%E8%BD%BDgoogle%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E7%BD%91%E7%BB%9Cinception-v3%E5%B9%B6%E6%9F%A5%E7%9C%8B%E7%BB%93%E6%9E%84/"/>
    <id>http://yoururl.com/2018/01/09/8.3+下载google图像识别网络inception-v3并查看结构/</id>
    <published>2018-01-09T10:38:04.000Z</published>
    <updated>2018-03-18T16:28:34.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"><span class="keyword">import</span> requests</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#inception模型下载地址</span></span><br><span class="line">inception_pretrain_model_url = <span class="string">'http://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型存放地址</span></span><br><span class="line">inception_pretrain_model_dir = <span class="string">"inception_model"</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(inception_pretrain_model_dir):</span><br><span class="line">    os.makedirs(inception_pretrain_model_dir)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件名，以及文件路径</span></span><br><span class="line">filename = inception_pretrain_model_url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]   <span class="comment"># 获取名字inception-2015-12-05.tgz</span></span><br><span class="line">filepath = os.path.join(inception_pretrain_model_dir, filename) <span class="comment"># 拼接生成文件路径：inception_model/inception-2015-12-05.tgz</span></span><br></pre></td></tr></table></figure><p>如果是小文件的话，一次性下载就OK了，但是如果文件比较大的话，那么下载下来的文件先放在内存中，内存还是比较有压力的。所以为了防止内存不够用的现象出现，我们要想办法把下载的文件分块写到磁盘中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载模型</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filepath):</span><br><span class="line">    print(<span class="string">"download:"</span>, filename)</span><br><span class="line">    r = requests.get(inception_pretrain_model_url, stream=<span class="keyword">True</span>) <span class="comment"># 可用于获取来自服务器的原始套接字响应</span></span><br><span class="line">    <span class="keyword">with</span> open(filepath, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(chunk_size=<span class="number">1024</span>):</span><br><span class="line">            <span class="keyword">if</span> chunk:</span><br><span class="line">                f.write(chunk)</span><br><span class="line">print(<span class="string">"finish:"</span>, filename)</span><br><span class="line"><span class="comment"># 解压文件</span></span><br><span class="line">tarfile.open(filepath, <span class="string">'r:gz'</span>).extractall(inception_pretrain_model_dir)</span><br></pre></td></tr></table></figure><pre><code>download: inception-2015-12-05.tgzfinish: inception-2015-12-05.tgz</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模型结构存放文件</span></span><br><span class="line">log_dir = <span class="string">'inception_log'</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(log_dir):</span><br><span class="line">    os.makedirs(log_dir)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># classify_image_graph_def.pb为google训练好的模型</span></span><br><span class="line">inception_graph_def_file = os.path.join(inception_pretrain_model_dir, <span class="string">'classify_image_graph_def.pb'</span>)</span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    <span class="comment"># 创建一个图来存放google训练好的模型</span></span><br><span class="line">    <span class="keyword">with</span> tf.gfile.FastGFile(inception_graph_def_file, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        graph_def = tf.GraphDef()</span><br><span class="line">        graph_def.ParseFromString(f.read())</span><br><span class="line">        tf.import_graph_def(graph_def, name=<span class="string">''</span>)</span><br><span class="line">    <span class="comment"># 保存图的结构</span></span><br><span class="line">    writer = tf.summary.FileWriter(log_dir, sess.graph)</span><br><span class="line">    writer.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="图像识别" scheme="http://yoururl.com/categories/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Tensorflow" scheme="http://yoururl.com/tags/Tensorflow/"/>
    
      <category term="Neural Networks" scheme="http://yoururl.com/tags/Neural-Networks/"/>
    
      <category term="Image Recognition" scheme="http://yoururl.com/tags/Image-Recognition/"/>
    
  </entry>
  
  <entry>
    <title>递归神经网络RNN</title>
    <link href="http://yoururl.com/2018/01/07/7.+%E9%80%92%E5%BD%92%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9CRNN/"/>
    <id>http://yoururl.com/2018/01/07/7.+递归神经网络RNN/</id>
    <published>2018-01-07T10:38:04.000Z</published>
    <updated>2018-03-18T16:19:25.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.contrib <span class="keyword">import</span> rnn</span><br><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 载入数据集</span></span><br><span class="line">mnist = input_data.read_data_sets(<span class="string">"MNIST_data/"</span>, one_hot=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入图片28*28</span></span><br><span class="line">n_inputs = <span class="number">28</span>  <span class="comment"># 输入一行，一共有28个数据</span></span><br><span class="line">max_time = <span class="number">28</span>  <span class="comment"># 一共28行</span></span><br><span class="line">lstm_size = <span class="number">100</span>  <span class="comment"># 隐层单元</span></span><br><span class="line">n_classes = <span class="number">10</span>  <span class="comment"># 10个分类器</span></span><br><span class="line">batch_size = <span class="number">50</span> <span class="comment"># 每批次50个样本</span></span><br><span class="line">n_batch = mnist.train.num_examples // batch_size  <span class="comment"># 总批次</span></span><br></pre></td></tr></table></figure><pre><code>Extracting MNIST_data/train-images-idx3-ubyte.gzExtracting MNIST_data/train-labels-idx1-ubyte.gzExtracting MNIST_data/t10k-images-idx3-ubyte.gzExtracting MNIST_data/t10k-labels-idx1-ubyte.gz</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里None表示第一个维度可以是任意长度</span></span><br><span class="line">x = tf.placeholder(tf.float32, [<span class="keyword">None</span>, <span class="number">784</span>])</span><br><span class="line"><span class="comment"># 正确的标签</span></span><br><span class="line">y = tf.placeholder(tf.float32, [<span class="keyword">None</span>, <span class="number">10</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化权值</span></span><br><span class="line">weights = tf.Variable(tf.truncated_normal([lstm_size, n_classes], stddev=<span class="number">0.1</span>))</span><br><span class="line"><span class="comment"># 初始化偏置值</span></span><br><span class="line">biases = tf.Variable(tf.constant(<span class="number">0.1</span>, shape=[n_classes]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义RNN网络</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RNN</span><span class="params">(X, weight, biases)</span>:</span></span><br><span class="line">    <span class="comment"># inputs = [batch_size, max_time, n_inputs]</span></span><br><span class="line">    inputs = tf.reshape(X, [<span class="number">-1</span>, max_time, n_inputs])</span><br><span class="line">    <span class="comment"># 定义LSTM基本CELL</span></span><br><span class="line">    <span class="comment"># lstm_cell = tf.contrib.rnn.core_rnn_cell.BasicLSTMCell(lstm_size)</span></span><br><span class="line">    lstm_cell = rnn.BasicLSTMCell(lstm_size) </span><br><span class="line">    <span class="comment"># final_state[state,batch_size,cell.state_size]</span></span><br><span class="line">    <span class="comment"># final_state[0] 是 cell_state</span></span><br><span class="line">    <span class="comment"># final_state[1] 是hidden_state</span></span><br><span class="line">    <span class="comment"># outputs: The RNN output 'Tensor'</span></span><br><span class="line">    <span class="comment">#    if time_major == False(default), this will be a "Tensor" shaped:</span></span><br><span class="line">    <span class="comment">#        [batch_size, max_time, cell.output_size]</span></span><br><span class="line">    <span class="comment">#    if time_major == True, this will be a "Tensor" shaped:</span></span><br><span class="line">    <span class="comment">#        [max_time, batch_size, cell.output_size]</span></span><br><span class="line">    outputs,final_state = tf.nn.dynamic_rnn(lstm_cell,inputs,dtype=tf.float32)</span><br><span class="line">    results = tf.nn.softmax(tf.matmul(final_state[<span class="number">1</span>],weights) + biases)</span><br><span class="line">    <span class="keyword">return</span> results</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算RNN的返回结果</span></span><br><span class="line">prediction = RNN(x, weights, biases)</span><br><span class="line"><span class="comment"># 损失函数</span></span><br><span class="line">cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=prediction, labels=y))</span><br><span class="line"><span class="comment"># 使用AdamOptimizer进行优化</span></span><br><span class="line">train_step = tf.train.AdamOptimizer(<span class="number">1e-4</span>).minimize(cross_entropy)</span><br><span class="line"><span class="comment"># 结果存放在一个布尔型列表中</span></span><br><span class="line">correct_prediction = tf.equal(tf.argmax(y,<span class="number">1</span>), tf.argmax(prediction,<span class="number">1</span>))</span><br><span class="line"><span class="comment"># 准确率</span></span><br><span class="line">accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))</span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init)</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        <span class="keyword">for</span> batch <span class="keyword">in</span> range(n_batch):</span><br><span class="line">            batch_xs, batch_ys = mnist.train.next_batch(batch_size)</span><br><span class="line">            sess.run(train_step, feed_dict=&#123;x:batch_xs, y:batch_ys&#125;)</span><br><span class="line">        </span><br><span class="line">        acc = sess.run(accuracy, feed_dict=&#123;x:mnist.test.images, y:mnist.test.labels&#125;)</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"Iter "</span> + str(epoch) + <span class="string">", Testing Accuracy= "</span> + str(acc))</span><br></pre></td></tr></table></figure><pre><code>WARNING:tensorflow:From &lt;ipython-input-6-24c9d74123b9&gt;:4: softmax_cross_entropy_with_logits (from tensorflow.python.ops.nn_ops) is deprecated and will be removed in a future version.Instructions for updating:Future major versions of TensorFlow will allow gradients to flowinto the labels input on backprop by default.See tf.nn.softmax_cross_entropy_with_logits_v2.Iter 0, Testing Accuracy= 0.8108Iter 1, Testing Accuracy= 0.8805Iter 2, Testing Accuracy= 0.9063Iter 3, Testing Accuracy= 0.9204Iter 4, Testing Accuracy= 0.9287Iter 5, Testing Accuracy= 0.9358</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="神经网络" scheme="http://yoururl.com/categories/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Tensorflow" scheme="http://yoururl.com/tags/Tensorflow/"/>
    
      <category term="Neural Networks" scheme="http://yoururl.com/tags/Neural-Networks/"/>
    
  </entry>
  
  <entry>
    <title>卷积与命名空间</title>
    <link href="http://yoururl.com/2018/01/05/6-2.%E5%8D%B7%E7%A7%AF%E4%B8%8E%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
    <id>http://yoururl.com/2018/01/05/6-2.卷积与命名空间/</id>
    <published>2018-01-04T16:00:00.000Z</published>
    <updated>2018-03-18T16:30:25.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">mnist = input_data.read_data_sets(<span class="string">'MNIST_data'</span>,one_hot=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#每个批次的大小</span></span><br><span class="line">batch_size = <span class="number">100</span></span><br><span class="line"><span class="comment">#计算一共有多少个批次</span></span><br><span class="line">n_batch = mnist.train.num_examples // batch_size</span><br><span class="line"></span><br><span class="line"><span class="comment">#参数概要</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">variable_summaries</span><span class="params">(var)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'summaries'</span>):</span><br><span class="line">        mean = tf.reduce_mean(var)</span><br><span class="line">        tf.summary.scalar(<span class="string">'mean'</span>, mean)<span class="comment">#平均值</span></span><br><span class="line">        <span class="keyword">with</span> tf.name_scope(<span class="string">'stddev'</span>):</span><br><span class="line">            stddev = tf.sqrt(tf.reduce_mean(tf.square(var - mean)))</span><br><span class="line">        tf.summary.scalar(<span class="string">'stddev'</span>, stddev)<span class="comment">#标准差</span></span><br><span class="line">        tf.summary.scalar(<span class="string">'max'</span>, tf.reduce_max(var))<span class="comment">#最大值</span></span><br><span class="line">        tf.summary.scalar(<span class="string">'min'</span>, tf.reduce_min(var))<span class="comment">#最小值</span></span><br><span class="line">        tf.summary.histogram(<span class="string">'histogram'</span>, var)<span class="comment">#直方图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化权值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">weight_variable</span><span class="params">(shape,name)</span>:</span></span><br><span class="line">    initial = tf.truncated_normal(shape,stddev=<span class="number">0.1</span>)<span class="comment">#生成一个截断的正态分布</span></span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial,name=name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化偏置</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bias_variable</span><span class="params">(shape,name)</span>:</span></span><br><span class="line">    initial = tf.constant(<span class="number">0.1</span>,shape=shape)</span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial,name=name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#卷积层</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv2d</span><span class="params">(x,W)</span>:</span></span><br><span class="line">    <span class="comment">#x input tensor of shape `[batch, in_height, in_width, in_channels]`</span></span><br><span class="line">    <span class="comment">#W filter / kernel tensor of shape [filter_height, filter_width, in_channels, out_channels]</span></span><br><span class="line">    <span class="comment">#`strides[0] = strides[3] = 1`. strides[1]代表x方向的步长，strides[2]代表y方向的步长</span></span><br><span class="line">    <span class="comment">#padding: A `string` from: `"SAME", "VALID"`</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.conv2d(x,W,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">'SAME'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#池化层</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_pool_2x2</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="comment">#ksize [1,x,y,1]</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.max_pool(x,ksize=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">'SAME'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#命名空间</span></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'input'</span>):</span><br><span class="line">    <span class="comment">#定义两个placeholder</span></span><br><span class="line">    x = tf.placeholder(tf.float32,[<span class="keyword">None</span>,<span class="number">784</span>],name=<span class="string">'x-input'</span>)</span><br><span class="line">    y = tf.placeholder(tf.float32,[<span class="keyword">None</span>,<span class="number">10</span>],name=<span class="string">'y-input'</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'x_image'</span>):</span><br><span class="line">        <span class="comment">#改变x的格式转为4D的向量[batch, in_height, in_width, in_channels]`</span></span><br><span class="line">        x_image = tf.reshape(x,[<span class="number">-1</span>,<span class="number">28</span>,<span class="number">28</span>,<span class="number">1</span>],name=<span class="string">'x_image'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'Conv1'</span>):</span><br><span class="line">    <span class="comment">#初始化第一个卷积层的权值和偏置</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'W_conv1'</span>):</span><br><span class="line">        W_conv1 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">32</span>],name=<span class="string">'W_conv1'</span>)<span class="comment">#5*5的采样窗口，32个卷积核从1个平面抽取特征</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'b_conv1'</span>):  </span><br><span class="line">        b_conv1 = bias_variable([<span class="number">32</span>],name=<span class="string">'b_conv1'</span>)<span class="comment">#每一个卷积核一个偏置值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#把x_image和权值向量进行卷积，再加上偏置值，然后应用于relu激活函数</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'conv2d_1'</span>):</span><br><span class="line">        conv2d_1 = conv2d(x_image,W_conv1) + b_conv1</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'relu'</span>):</span><br><span class="line">        h_conv1 = tf.nn.relu(conv2d_1)</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'h_pool1'</span>):</span><br><span class="line">        h_pool1 = max_pool_2x2(h_conv1)<span class="comment">#进行max-pooling</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'Conv2'</span>):</span><br><span class="line">    <span class="comment">#初始化第二个卷积层的权值和偏置</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'W_conv2'</span>):</span><br><span class="line">        W_conv2 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">32</span>,<span class="number">64</span>],name=<span class="string">'W_conv2'</span>)<span class="comment">#5*5的采样窗口，64个卷积核从32个平面抽取特征</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'b_conv2'</span>):  </span><br><span class="line">        b_conv2 = bias_variable([<span class="number">64</span>],name=<span class="string">'b_conv2'</span>)<span class="comment">#每一个卷积核一个偏置值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#把h_pool1和权值向量进行卷积，再加上偏置值，然后应用于relu激活函数</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'conv2d_2'</span>):</span><br><span class="line">        conv2d_2 = conv2d(h_pool1,W_conv2) + b_conv2</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'relu'</span>):</span><br><span class="line">        h_conv2 = tf.nn.relu(conv2d_2)</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'h_pool2'</span>):</span><br><span class="line">        h_pool2 = max_pool_2x2(h_conv2)<span class="comment">#进行max-pooling</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#28*28的图片第一次卷积后还是28*28，第一次池化后变为14*14</span></span><br><span class="line"><span class="comment">#第二次卷积后为14*14，第二次池化后变为了7*7</span></span><br><span class="line"><span class="comment">#进过上面操作后得到64张7*7的平面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'fc1'</span>):</span><br><span class="line">    <span class="comment">#初始化第一个全连接层的权值</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'W_fc1'</span>):</span><br><span class="line">        W_fc1 = weight_variable([<span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>,<span class="number">1024</span>],name=<span class="string">'W_fc1'</span>)<span class="comment">#上一场有7*7*64个神经元，全连接层有1024个神经元</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'b_fc1'</span>):</span><br><span class="line">        b_fc1 = bias_variable([<span class="number">1024</span>],name=<span class="string">'b_fc1'</span>)<span class="comment">#1024个节点</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#把池化层2的输出扁平化为1维</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'h_pool2_flat'</span>):</span><br><span class="line">        h_pool2_flat = tf.reshape(h_pool2,[<span class="number">-1</span>,<span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>],name=<span class="string">'h_pool2_flat'</span>)</span><br><span class="line">    <span class="comment">#求第一个全连接层的输出</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'wx_plus_b1'</span>):</span><br><span class="line">        wx_plus_b1 = tf.matmul(h_pool2_flat,W_fc1) + b_fc1</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'relu'</span>):</span><br><span class="line">        h_fc1 = tf.nn.relu(wx_plus_b1)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#keep_prob用来表示神经元的输出概率</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'keep_prob'</span>):</span><br><span class="line">        keep_prob = tf.placeholder(tf.float32,name=<span class="string">'keep_prob'</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'h_fc1_drop'</span>):</span><br><span class="line">        h_fc1_drop = tf.nn.dropout(h_fc1,keep_prob,name=<span class="string">'h_fc1_drop'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'fc2'</span>):</span><br><span class="line">    <span class="comment">#初始化第二个全连接层</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'W_fc2'</span>):</span><br><span class="line">        W_fc2 = weight_variable([<span class="number">1024</span>,<span class="number">10</span>],name=<span class="string">'W_fc2'</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'b_fc2'</span>):    </span><br><span class="line">        b_fc2 = bias_variable([<span class="number">10</span>],name=<span class="string">'b_fc2'</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'wx_plus_b2'</span>):</span><br><span class="line">        wx_plus_b2 = tf.matmul(h_fc1_drop,W_fc2) + b_fc2</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'softmax'</span>):</span><br><span class="line">        <span class="comment">#计算输出</span></span><br><span class="line">        prediction = tf.nn.softmax(wx_plus_b2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#交叉熵代价函数</span></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'cross_entropy'</span>):</span><br><span class="line">    cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=y,logits=prediction),name=<span class="string">'cross_entropy'</span>)</span><br><span class="line">    tf.summary.scalar(<span class="string">'cross_entropy'</span>,cross_entropy)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#使用AdamOptimizer进行优化</span></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'train'</span>):</span><br><span class="line">    train_step = tf.train.AdamOptimizer(<span class="number">1e-4</span>).minimize(cross_entropy)</span><br><span class="line"></span><br><span class="line"><span class="comment">#求准确率</span></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">'accuracy'</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'correct_prediction'</span>):</span><br><span class="line">        <span class="comment">#结果存放在一个布尔列表中</span></span><br><span class="line">        correct_prediction = tf.equal(tf.argmax(prediction,<span class="number">1</span>),tf.argmax(y,<span class="number">1</span>))<span class="comment">#argmax返回一维张量中最大的值所在的位置</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">'accuracy'</span>):</span><br><span class="line">        <span class="comment">#求准确率</span></span><br><span class="line">        accuracy = tf.reduce_mean(tf.cast(correct_prediction,tf.float32))</span><br><span class="line">        tf.summary.scalar(<span class="string">'accuracy'</span>,accuracy)</span><br><span class="line">        </span><br><span class="line"><span class="comment">#合并所有的summary</span></span><br><span class="line">merged = tf.summary.merge_all()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(tf.global_variables_initializer())</span><br><span class="line">    train_writer = tf.summary.FileWriter(<span class="string">'logs/train'</span>,sess.graph)</span><br><span class="line">    test_writer = tf.summary.FileWriter(<span class="string">'logs/test'</span>,sess.graph)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1001</span>):</span><br><span class="line">        <span class="comment">#训练模型</span></span><br><span class="line">        batch_xs,batch_ys =  mnist.train.next_batch(batch_size)</span><br><span class="line">        sess.run(train_step,feed_dict=&#123;x:batch_xs,y:batch_ys,keep_prob:<span class="number">0.5</span>&#125;)</span><br><span class="line">        <span class="comment">#记录训练集计算的参数</span></span><br><span class="line">        summary = sess.run(merged,feed_dict=&#123;x:batch_xs,y:batch_ys,keep_prob:<span class="number">1.0</span>&#125;)</span><br><span class="line">        train_writer.add_summary(summary,i)</span><br><span class="line">        <span class="comment">#记录测试集计算的参数</span></span><br><span class="line">        batch_xs,batch_ys =  mnist.test.next_batch(batch_size)</span><br><span class="line">        summary = sess.run(merged,feed_dict=&#123;x:batch_xs,y:batch_ys,keep_prob:<span class="number">1.0</span>&#125;)</span><br><span class="line">        test_writer.add_summary(summary,i)</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">100</span>==<span class="number">0</span>:</span><br><span class="line">            test_acc = sess.run(accuracy,feed_dict=&#123;x:mnist.test.images,y:mnist.test.labels,keep_prob:<span class="number">1.0</span>&#125;)</span><br><span class="line">            train_acc = sess.run(accuracy,feed_dict=&#123;x:mnist.train.images[:<span class="number">10000</span>],y:mnist.train.labels[:<span class="number">10000</span>],keep_prob:<span class="number">1.0</span>&#125;)</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"Iter "</span> + str(i) + <span class="string">", Testing Accuracy= "</span> + str(test_acc) + <span class="string">", Training Accuracy= "</span> + str(train_acc))</span><br></pre></td></tr></table></figure><pre><code>Extracting MNIST_data\train-images-idx3-ubyte.gzExtracting MNIST_data\train-labels-idx1-ubyte.gzExtracting MNIST_data\t10k-images-idx3-ubyte.gzExtracting MNIST_data\t10k-labels-idx1-ubyte.gzIter 0, Testing Accuracy= 0.1511, Training Accuracy= 0.158Iter 100, Testing Accuracy= 0.3234, Training Accuracy= 0.3288Iter 200, Testing Accuracy= 0.6009, Training Accuracy= 0.6175Iter 300, Testing Accuracy= 0.6676, Training Accuracy= 0.6708Iter 400, Testing Accuracy= 0.7332, Training Accuracy= 0.7367Iter 500, Testing Accuracy= 0.7568, Training Accuracy= 0.7615Iter 600, Testing Accuracy= 0.9263, Training Accuracy= 0.9242Iter 700, Testing Accuracy= 0.9477, Training Accuracy= 0.9438Iter 800, Testing Accuracy= 0.9544, Training Accuracy= 0.9512Iter 900, Testing Accuracy= 0.9565, Training Accuracy= 0.9532Iter 1000, Testing Accuracy= 0.9629, Training Accuracy= 0.9602</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td
      
    
    </summary>
    
      <category term="神经网络" scheme="http://yoururl.com/categories/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Deep learning" scheme="http://yoururl.com/tags/Deep-learning/"/>
    
      <category term="Tensorflow" scheme="http://yoururl.com/tags/Tensorflow/"/>
    
      <category term="Neural Networks" scheme="http://yoururl.com/tags/Neural-Networks/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow 基础（七）：损失函数</title>
    <link href="http://yoururl.com/2018/01/03/Tensorflow%20%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%83%EF%BC%89%EF%BC%9A%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/"/>
    <id>http://yoururl.com/2018/01/03/Tensorflow 基础（七）：损失函数/</id>
    <published>2018-01-02T16:01:00.000Z</published>
    <updated>2018-04-28T18:00:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>神经网络模型的效果和优化目标是通过损失函数（loss function）来定义的。</p><h2 id="经典损失函数"><a href="#经典损失函数" class="headerlink" title="经典损失函数"></a>经典损失函数</h2><p>分类问题和回归问题是监督学习的两大类。该节将分别介绍分类问题和回归问题中使用到的经典损失函数。</p><p>通常机器学习每一个算法中都会有一个目标函数，算法的求解过程是通过对这个目标函数优化的过程。在分类或者回归问题中，通常使用损失函数（代价函数）作为其目标函数。损失函数用来评价模型的预测值和真实值不一样的程度，损失函数越好，通常模型的性能越好。不同的算法使用的损失函数不一样。 </p><p>损失函数分为<strong>经验风险损失函数</strong>和<strong>结构风险损失函数</strong>:  </p><ul><li>经验风险损失函数: 指预测结果和实际结果的差别，  </li><li>结构风险损失函数: 指经验风险损失函数加上正则项。  </li></ul><p>通常表示为如下： </p><script type="math/tex; mode=display">    \theta^* = argmin\ \frac{1}{N} \sum_{i=1}^{N} L(y_i,f(x_i; \theta_i)) + \lambda \Phi(\theta)</script><h3 id="0-1-损失函数"><a href="#0-1-损失函数" class="headerlink" title="0-1 损失函数"></a>0-1 损失函数</h3><p>0-1损失是指，预测值和目标值不相等为1，否则为0：   </p><script type="math/tex; mode=display">L(Y,f(X))=\begin{cases}      1, & Y \neq f(X)  \\     0, & Y = f(X)           \end{cases}</script><p>该损失函数不考虑预测值和真实值的误差程度，也就是只要预测错误，预测错误差一点和差很多是一样的。</p><p>感知机就是用的这种损失函数。但是由于相等这个条件太过严格，因此我们可以放宽条件，即满足 $|Y−f(X)|&lt;T$ 时认为相等。   </p><script type="math/tex; mode=display">L(Y,f(X))=\begin{cases}      1, & |Y-f(X)| \geq T  \\     0, & |Y-f(X)| < T           \end{cases}</script><h3 id="绝对值损失函数"><a href="#绝对值损失函数" class="headerlink" title="绝对值损失函数"></a>绝对值损失函数</h3><script type="math/tex; mode=display">L(Y,f(X))=|Y-f(X)|</script><p>可用于回归</p><h3 id="平方损失函数"><a href="#平方损失函数" class="headerlink" title="平方损失函数"></a>平方损失函数</h3><p>最小二乘法是线性回归的一种方法，它将回归的问题转化为了凸优化的问题。最小二乘法的基本原则是：<strong>最优拟合曲线应该使得所有点到回归直线的距离和最小</strong>。通常用欧几里得距离进行距离的度量。平方损失的损失函数为：   </p><script type="math/tex; mode=display">L(Y,f(X))=\sum_N (Y−f(X))^2</script><h3 id="指数损失函数"><a href="#指数损失函数" class="headerlink" title="指数损失函数"></a>指数损失函数</h3><p>AdaBoost， 指数损失函数的标准形式： </p><script type="math/tex; mode=display">L(Y\ |\ f(X))=e^{-yf(x)}</script><h3 id="Hinge损失函数"><a href="#Hinge损失函数" class="headerlink" title="Hinge损失函数"></a>Hinge损失函数</h3><p>Hinge损失函数和SVM是息息相关的。在线性支持向量机中，最优化问题可以等价于 :  </p><script type="math/tex; mode=display">\min_{w,b} \sum_i^N (1-y_i(w x_i+b))+ \lambda||w^2||</script><p>这个式子和如下的式子非常像：   </p><script type="math/tex; mode=display">\frac{1}{m} \sum_{i=1}^m \ l(wx_i+by_i)+||w||^2</script><p>其中 $l(wx_i+by_i)$ 就是 hinge 损失函数，后面相当于L2正则项。<br>Hinge函数的标准形式：   </p><script type="math/tex; mode=display">L(y)=max(0,1−ty)</script><p>y是预测值，在-1到+1之间，t为目标值（-1或+1）。其含义为，y的值在-1和+1之间就可以了，并不鼓励 $|y|&gt;1$ ，即并不鼓励分类器过度自信，让某个正确分类的样本的距离分割线超过1并不会有任何奖励，从而使分类器可以更专注于整体的分类误差。</p><h2 id="全局损失函数"><a href="#全局损失函数" class="headerlink" title="全局损失函数"></a>全局损失函数</h2><p>上面的损失函数仅仅是对于一个样本来说的。而我们的优化目标函数应当是使全局损失函数最小。因此，全局损失函数往往是每个样本的损失函数之和，即：   </p><script type="math/tex; mode=display">J(w,b) = \frac{1}{m} \sum_{i=1}^m \ L(Y,f(X))</script><p>对于平方损失函数，为了求导方便，我们可以在前面乘上一个1/2，和平方项求导后的2抵消，即：   </p><script type="math/tex; mode=display">J(w,b) = \frac{1}{2m} \sum_{i=1}^m \ (Y-f(X))^2</script><h2 id="交叉熵损失函数"><a href="#交叉熵损失函数" class="headerlink" title="交叉熵损失函数"></a>交叉熵损失函数</h2><p>熵的计算公式： </p><script type="math/tex; mode=display">H(y)=−\sum_i y_i log(y_i)</script><p>而在实际操作中，我们并不知道y的分布，只能对y的分布做一个估计，也就是算得的a值, 这样我们就能够得到用a来表示y的交叉熵:   </p><script type="math/tex; mode=display">H(y,a)=−\sum_i y_i log(a_i)</script><p>如果有多个样本，则整个样本的平均交叉熵为 :</p><script type="math/tex; mode=display">H(y,a)=−\frac{1}{n} \sum_n \sum_i y_{i,n} log(a_i,n)</script><p>其中n表示样本编号,i表示类别编号。 如果用于logistic分类，则上式可以简化成：  </p><script type="math/tex; mode=display">H(y,a)=−\frac{1}{n} \sum_n y log(a) + (1−y) log(1−a)</script><p>将交叉熵看做是代价函数有两点原因：</p><ul><li>第⼀，它是⾮负的，$C &gt; 0$ 。  <ul><li>上式中的求和中的所有独⽴的项都是负数的，因为对数函数的定义域是 (0, 1)；  </li><li>求和前⾯有⼀个负号</li></ul></li><li>第⼆，如果对于所有的训练输⼊ x，神经元实际的输出接近⽬标值，那么交叉熵将接近 0。<br>假设在这个例⼦中，$y = 0$ ⽽ $a ≈ 0$ 。我们看到第⼀个项就消去了，因为 $y = 0$ ，⽽第⼆项实际上就是 $− ln(1 − a) ≈ 0$ 。反之，$y = 1$ ⽽ $a ≈ 1$ 。所以在实际输出和⽬标输出之间的差距越⼩，最终的交叉熵的值就越低了。</li></ul><p>综上所述，交叉熵是⾮负的，在神经元达到很好的正确率的时候会接近 0。这些其实就是我们想要的代价函数的特性。其实这些特性也是⼆次代价函数具备的。所以，交叉熵就是很好的选择了。但是交叉熵代价函数有⼀个⽐⼆次代价函数更好的特性就是它<strong>避免了学习速度下降</strong>的问题。为了弄清楚这个情况，我们来算算交叉熵函数关于权重的偏导数。   </p><script type="math/tex; mode=display">    \frac{\partial C}{\partial w_j}= − \frac{1}{n} \sum_x (\frac{y}{\sigma (z)} - \frac{(1-y)}{1-\sigma (z) }) \frac{\partial \sigma}{\partial w_j}</script><script type="math/tex; mode=display">= − \frac{1}{n} \sum_x (\frac{y}{\sigma (z)} - \frac{(1-y)}{1-\sigma (z) }) \sigma '(z)x_j</script><p>将结果合并⼀下，简化成：  </p><script type="math/tex; mode=display">\frac{\partial C}{\partial w_j}= \frac{1}{n} \sum_x \frac{\sigma '(z)x_j}{\sigma (z)(1-\sigma (z))}(\sigma (z) - y)</script><p>根据 $\sigma (z) = 1/(1 + e^{−z})$ 的定义，和⼀些运算，我们可以得到 $\sigma’ (z) = \sigma (z)(1 − \sigma (z))$ 。我们看到 $\sigma ‘(z)$ 和 $\sigma (z) (1- \sigma (z))$ 这两项在⽅程中直接约去了，所以最终形式就是：</p><script type="math/tex; mode=display">\frac{\partial C}{\partial w_j}= \frac{1}{n} \sum_x x_j(\sigma (z)-y)</script><p>这个公式告诉我们，权重学习的速度受到 $\sigma (z) − y$ ，也就是输出中的误差的控制。更⼤的误差，更快的学习速度。这是我们直觉上期待的结果。特别地，这个代价函数还避免了像在⼆次代价函数中类似⽅程中 $\sigma’(z)$ 导致的学习缓慢。当我们使⽤交叉熵的时候，$\sigma’(z)$ 被约掉了，所以我们不再需要关⼼它是不是变得很⼩。这种约除就是交叉熵带来的特效。  </p><p>根据类似的⽅法，我们可以计算出关于偏置的偏导数：  </p><script type="math/tex; mode=display">\frac{\partial C}{\partial b} =\frac{1}{n}\sum_x(\sigma(z)-y)</script><p>这避免了⼆次代价函数中 $\sigma’(z)$ 项导致的学习缓慢。</p><h2 id="逻辑回归中的损失函数"><a href="#逻辑回归中的损失函数" class="headerlink" title="逻辑回归中的损失函数"></a>逻辑回归中的损失函数</h2><h3 id="log对数损失函数"><a href="#log对数损失函数" class="headerlink" title="log对数损失函数"></a>log对数损失函数</h3><p>逻辑斯特回归的损失函数就是对数损失函数，在逻辑斯特回归的推导中，它假设样本服从伯努利分布（0-1）分布，然后求得满足该分布的似然函数，接着用对数求极值。逻辑斯特回归并没有求对数似然函数的最大值，而是把极大化当做一个思想，进而推导它的风险函数为最小化的负的似然函数。从损失函数的角度上，它就成为了log损失函数。<br>log损失函数的标准形式：   </p><script type="math/tex; mode=display">L(Y,P(Y|X))=-logP(Y|X)</script><p>$P(Y|X)$ 通俗的解释就是：在当前模型的基础上，对于样本$X$，其预测值为$Y$(预测正确)的概率。由于概率之间的同时满足需要使用乘法，为了将其转化为加法，我们将其取对数。最后由于是损失函数，所以预测正确的概率越高，其损失值应该是越小，因此取反。  </p><h2 id="softmax回归"><a href="#softmax回归" class="headerlink" title="softmax回归"></a>softmax回归</h2><p>Softmax回归模型是logistic回归模型在多分类问题上的推广，在多分类问题中，类标签 y 可以取两个以上的值。 Softmax回归模型对于诸如<a href="http://yann.lecun.com/exdb/mnist/" target="_blank" rel="noopener">MNIST</a>手写数字分类等问题是很有用的，该问题的目的是辨识10个不同的单个数字。Softmax回归是有监督的。  </p><p>softmax用于多分类过程中，它将多个神经元的输出，映射到（0,1）区间内，可以看成概率来理解，从而来进行多分类！  </p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>假设我们有一个数组，$V$ ，$V_i$ 表示 $V￥ 中的第 $i$ 个元素，那么这个元素的Softmax值就是:  </p><script type="math/tex; mode=display">S_i = \frac{e^{V_i}}{\sum_je^{V_i}}</script><p>softmax 作为多分类神经网络的输出层，首先计算带权输入 $\sideset{}{^L<em>j}z = \sum_k \sideset{}{^L</em>{jk}}w \sideset{}{^{L-1}_k}a + \sideset{}{^L_j}b$ , 输出在 $\sideset{}{^L_j}z$ 上应用softmax函数， 根据这个函数，第 j 个神经元上的激活 $\sideset{}{^L_j}a$ 就是  </p><script type="math/tex; mode=display">\sideset{}{^L_j}a = \frac{e^{\sideset{}{^L_j}z}}{\sum_k e^{\sideset{}{^L_k}z}}</script><p>根据定义，输出的激活值加起来正好为 1:  </p><script type="math/tex; mode=display">\sum_j \sideset{}{^L_j}a = \frac{\sum_j e^{\sideset{}{^L_j}z}}{\sum_k e^{\sideset{}{^L_k}z}}=1</script><p>softmax层的输出是⼀些相加为 1 正数的集合。换⾔之，softmax层的输出可以被看做是⼀个概率分布。  </p><h3 id="计算与标注样本的差距"><a href="#计算与标注样本的差距" class="headerlink" title="计算与标注样本的差距"></a>计算与标注样本的差距</h3><p>在神经网络计算中，我们需要计算按照神经网络的正向传播计算分数 $s_1$ 和按照正确标注计算的分数 $s_2$ 之间的差距， 来计算Loss， 才能应用反向传播。 loss定义为交叉熵：  </p><script type="math/tex; mode=display">L_i=-log(\frac{e^{f_{y_i}}}{\sum_j e^j})</script><p>softmax 值越大， loss越小。  </p><h3 id="偏导计算方便"><a href="#偏导计算方便" class="headerlink" title="偏导计算方便"></a>偏导计算方便</h3><p>当我们对分类的Loss进行改进时，通过梯度下降，每次优化一个step大小的梯度， 我们定义选到 $y<em>i$ 的概率为: $P</em>{y<em>i}=\frac{e^{f</em>{y_i}}}{\sum_j e^j}$ ,然后我们求Loss对每个权重矩阵的偏导，应用链式法则：  </p><script type="math/tex; mode=display">\frac{\partial {L_i}}{\partial {f_{y_i}}}= \frac{\partial (-ln(\frac{e^{f_{y_i}}}{\sum_j e^j}))}{\partial {f_{y_i}}}=P_{f_{y_i}}-1</script><p>最后的结果形式简单，对应分类结果的那一维的概率减去一，就是最后的偏导。  </p><p>例如：通过若干层计算，得到某训练样本的向量分数[1,5,3],那么概率分别为[0.015,0.866,0.117],计算出的偏导为[0.015, 0.866-1, 0.117]=[0.015,-0.134,0.117]</p><h2 id="实现交叉熵"><a href="#实现交叉熵" class="headerlink" title="实现交叉熵"></a>实现交叉熵</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cross_enrtopy = - tf.reduce_mean(y_ * tf.log(tf.clip_by_value(y, <span class="number">1e-10</span>, <span class="number">1.0</span>)))</span><br></pre></td></tr></table></figure><p>这一行代码包含四种不同的 Tensorflow 计算：</p><h3 id="tf-clip-by-value"><a href="#tf-clip-by-value" class="headerlink" title="tf.clip_by_value"></a>tf.clip_by_value</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tf.clip_by_value(          <span class="comment"># 该函数将张量的数值限制在一个范围之内</span></span><br><span class="line">    t,                     <span class="comment"># 张量对象</span></span><br><span class="line">    clip_value_min,        <span class="comment"># 下限</span></span><br><span class="line">    clip_value_max,        <span class="comment"># 上限  </span></span><br><span class="line">    name=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sess = tf.InteractiveSession()</span><br><span class="line">v = tf.constant([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]], dtype=tf.float32,)</span><br><span class="line">print(tf.clip_by_value(v, <span class="number">2.5</span>, <span class="number">4.5</span>).eval())</span><br></pre></td></tr></table></figure><pre><code>[[2.5 2.5 3. ] [4.  4.5 4.5]]</code></pre><h3 id="tf-log"><a href="#tf-log" class="headerlink" title="tf.log"></a>tf.log</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tf.log(x, name=<span class="keyword">None</span>)     <span class="comment"># 对张量中所有元素依次求对数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tf.log(v).eval()</span><br></pre></td></tr></table></figure><pre><code>array([[0.       , 0.6931472, 1.0986123],       [1.3862944, 1.609438 , 1.7917595]], dtype=float32)</code></pre><h3 id="tf-matmul"><a href="#tf-matmul" class="headerlink" title="tf.matmul"></a>tf.matmul</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tf.matmul(</span><br><span class="line">    a,                       <span class="comment">#  一个类型为 float16, float32, float64, int32, complex64, complex128 且张量秩 &gt; 1 的张量。</span></span><br><span class="line">    b, </span><br><span class="line">    transpose_a=<span class="keyword">False</span>,       <span class="comment"># 如果为真, a则在进行乘法计算前进行转置。</span></span><br><span class="line">    transpose_b=<span class="keyword">False</span>, </span><br><span class="line">    adjoint_a=<span class="keyword">False</span>,         <span class="comment"># 如果为真, a则在进行乘法计算前进行共轭和转置。</span></span><br><span class="line">    adjoint_b=<span class="keyword">False</span>, </span><br><span class="line">    a_is_sparse=<span class="keyword">False</span>,       <span class="comment"># 如果为真, a会被处理为稀疏矩阵。</span></span><br><span class="line">    b_is_sparse=<span class="keyword">False</span>, </span><br><span class="line">    name=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">v1 = tf.constant([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">v2 = tf.constant([[<span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 矩阵每个位置对应元素相乘</span></span><br><span class="line">print((v1 * v2).eval())</span><br><span class="line"><span class="comment"># 矩阵乘法</span></span><br><span class="line">print(tf.matmul(v1, v2).eval())</span><br></pre></td></tr></table></figure><pre><code>[[ 5 12] [21 32]][[19 22] [43 50]]</code></pre><h3 id="tf-reduce-mean"><a href="#tf-reduce-mean" class="headerlink" title="tf.reduce_mean"></a>tf.reduce_mean</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tf.reduce_mean(</span><br><span class="line">    input_tensor, </span><br><span class="line">    axis=<span class="keyword">None</span>,               <span class="comment"># axis=none, 求全部元素的平均值；axis=0, 按列降维，求每列平均值；axis=1，按行降维，求每行平均值。 </span></span><br><span class="line">    keepdims=<span class="keyword">None</span>,           <span class="comment"># 沿着reduction_indices给出的维度方向降维。如果keep_dims等于true，则按reduction_indices给出的降维的尺寸保留为1维，</span></span><br><span class="line">                             <span class="comment"># 如果是False，则降维到1维。</span></span><br><span class="line">    name=<span class="keyword">None</span>, </span><br><span class="line">    reduction_indices=<span class="keyword">None</span>,  <span class="comment"># 按某一维度(reduction_indices)计算一个张量的元素的平均值</span></span><br><span class="line">    keep_dims=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = tf.constant([[<span class="number">1.</span>, <span class="number">2.</span>, <span class="number">3.</span>], [<span class="number">4.</span>, <span class="number">5.</span>, <span class="number">6.</span>]])</span><br><span class="line">print(tf.reduce_mean(x).eval())     </span><br><span class="line">print(tf.reduce_mean(x, <span class="number">0</span>).eval())    <span class="comment"># 按列取平均</span></span><br><span class="line">print(tf.reduce_mean(x, <span class="number">1</span>).eval())    <span class="comment"># 按行取平均</span></span><br></pre></td></tr></table></figure><pre><code>3.5[2.5 3.5 4.5][2. 5.]</code></pre><p>因为交叉熵一般会与softmax一起使用，所以Tensorflow对这两个函数进行了统一封装，提供了 ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tf.nn.softmax_cross_entropy_with_logits(</span><br><span class="line">    _sentinel=<span class="keyword">None</span>, </span><br><span class="line">    labels=<span class="keyword">None</span>,    <span class="comment"># 期望输出</span></span><br><span class="line">    logits=<span class="keyword">None</span>,    <span class="comment"># 神经网络最后一层的真实输出，如果有batch的话，它的大小就是[batchsize，num_classes]，单样本的话，大小就是num_classes</span></span><br><span class="line">    dim=<span class="number">-1</span>,</span><br><span class="line">    name=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><ul><li>第一步是先对网络最后一层的输出做一个softmax，这一步通常是求取输出属于某一类的概率；  </li><li>第二步是softmax的输出向量[Y1，Y2,Y3…]和样本的实际标签做一个交叉熵  </li></ul><p>Note：  </p><ul><li>函数内部自动计算softmax，然后再计算交叉熵代价函数，也就是说logits必须是没有经过tf.nn.softmax函数处理的数据，否则导致训练结果有问题。  </li><li>函数的返回值并不是一个数，而是一个向量，如果要求交叉熵，我们要再做一步tf.reduce_sum操作,就是对向量里面所有元素求和，最后才得到交叉熵，如果求loss，则要做一步tf.reduce_mean操作，对向量求均值！</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实际输出</span></span><br><span class="line">logits = tf.constant([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]], dtype=tf.float32)</span><br><span class="line"><span class="comment"># 求softmax</span></span><br><span class="line">y = tf.nn.softmax(logits)</span><br><span class="line"><span class="comment"># 定义期望输出</span></span><br><span class="line">y_ = tf.constant([[<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>]])</span><br><span class="line"><span class="comment"># 求交叉熵</span></span><br><span class="line">cross_entroy = - tf.reduce_sum(y_ * tf.log(y))</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">cross_entroy_2 = tf.reduce_sum(tf.nn.softmax_cross_entropy_with_logits(labels=y_, logits=logits))</span><br><span class="line"></span><br><span class="line">print(cross_entroy.eval())</span><br><span class="line">print(cross_entroy_2.eval())</span><br></pre></td></tr></table></figure><pre><code>1.2228181.2228179</code></pre><h2 id="均方差（MSE）"><a href="#均方差（MSE）" class="headerlink" title="均方差（MSE）"></a>均方差（MSE）</h2><p>回归问题解决的是对具体数值的预测，最常用的损失函数是均方误差（MSE）,定义如下:  </p><script type="math/tex; mode=display">MSE(y, y')=\frac{\sum_{i=1}^{n}(y_i-y_i')^2}{n}</script><p>其中 $y_i$ 是一个batch中第i个数据的正确答案， $y_i’$ 为神经网络给出的预测值，以下为tensorflow实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mse = tf.reduce_mean(tf.square(y_ - y))  <span class="comment"># y为神经网络实际输出，y_为期望输出</span></span><br></pre></td></tr></table></figure><h2 id="自定义损失函数"><a href="#自定义损失函数" class="headerlink" title="自定义损失函数"></a>自定义损失函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> numpy.random <span class="keyword">import</span> RandomState</span><br><span class="line">batch_size = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 两个输入节点</span></span><br><span class="line">x = tf.placeholder(dtype=tf.float32, shape=(<span class="keyword">None</span>, <span class="number">2</span>), name=<span class="string">'x-input'</span>)</span><br><span class="line"><span class="comment"># 回归问题一般一个输出节点</span></span><br><span class="line">y_ = tf.placeholder(dtype=tf.float32, shape=(<span class="keyword">None</span>, <span class="number">1</span>), name=<span class="string">'y-input'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  </span></span><br><span class="line">w1 = tf.Variable(tf.random_normal(shape=[<span class="number">2</span>, <span class="number">1</span>], stddev=<span class="number">1</span>, seed=<span class="number">1</span>))</span><br><span class="line">y = tf.matmul(x, w1)             <span class="comment"># 预测值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预测成本</span></span><br><span class="line">loss_less = <span class="number">10</span></span><br><span class="line">loss_more = <span class="number">1</span></span><br><span class="line">loss = tf.reduce_sum(tf.where(tf.greater(y, y_), (y - y_) * loss_more, (y_ - y) * loss_less))</span><br><span class="line"></span><br><span class="line">train_step = tf.train.AdamOptimizer(<span class="number">0.001</span>).minimize(loss)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机生成模拟数据集</span></span><br><span class="line">rdm = RandomState(<span class="number">1</span>)</span><br><span class="line">dataset_size = <span class="number">128</span></span><br><span class="line">X = rdm.rand(dataset_size, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置回归的正确值为两个输入的和加上一个随机量，随机量为不可预测的噪声（-0.05 ，0.05）</span></span><br><span class="line">Y = [[x1 + x2 + rdm.rand() / <span class="number">10</span> - <span class="number">0.05</span>] <span class="keyword">for</span> (x1, x2) <span class="keyword">in</span> X]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    init_op = tf.global_variables_initializer()</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    STEPS = <span class="number">5000</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(STEPS):</span><br><span class="line">        start = (i * batch_size) % dataset_size</span><br><span class="line">        end = min(start + batch_size, dataset_size)</span><br><span class="line">        sess.run(train_step, feed_dict=&#123;x : X[start:end], y_ : Y[start:end]&#125;)</span><br><span class="line">        print(sess.run(w1))</span><br></pre></td></tr></table></figure><pre><code>[[-0.81031823] [ 1.4855988 ]][[-0.8093366] [ 1.4865911]][[-0.8083831] [ 1.4875891]][[-0.8074217] [ 1.488542 ]][[-0.80644417] [ 1.4894979 ]][[-0.8054569] [ 1.490472 ]][[-0.8044624] [ 1.4914528]][[-0.8034634] [ 1.4924384]][[-0.80245554] [ 1.4934249 ]][[-0.80146426] [ 1.4944159 ]][[-0.80048096] [ 1.4954216 ]][[-0.79950386] [ 1.4964081 ]][[-0.79850495] [ 1.4974177 ]][[-0.7975289] [ 1.4984025]][[-0.7965442] [ 1.4994123]][[-0.79556257] [ 1.5004357 ]][[-0.7946243] [ 1.5014318]][[-0.7936975] [ 1.5024269]][[-0.79274493] [ 1.5034243 ]][[-0.79180086] [ 1.504382  ]][[-0.7908325] [ 1.5053244]][[-0.78985554] [ 1.5062915 ]][[-0.78887033] [ 1.5072582 ]][[-0.7878793] [ 1.5082244]][[-0.78687394] [ 1.5091867 ]][[-0.78588563] [ 1.5101508 ]][[-0.78490686] [ 1.5111339 ]][[-0.7839362] [ 1.5120951]][[-0.78293514] [ 1.5130919 ]][[-0.7819587] [ 1.5140618]][[-0.78097296] [ 1.5150667 ]][[-0.7799913] [ 1.5160902]][[-0.77905494] [ 1.5170842 ]][[-0.7781331] [ 1.5180765]][[-0.77718365] [ 1.5190712 ]][[-0.77624506] [ 1.5200237 ]][[-0.77527946] [ 1.520958  ]][[-0.77430487] [ 1.5219191 ]][[-0.7733214] [ 1.5228786]][[-0.7723314] [ 1.5238366]][[-0.7713249] [ 1.5247895]][[-0.7703369] [ 1.5257431]][[-0.76935965] [ 1.5267178 ]][[-0.7683916] [ 1.5276686]][[-0.76738876] [ 1.5286599 ]][[-0.7664125] [ 1.5296224]][[-0.76542616] [ 1.5306249 ]][[-0.76444453] [ 1.5316483 ]][[-0.7635105] [ 1.5326405]][[-0.7625927] [ 1.5336306]][[-0.7616455] [ 1.5346231]][[-0.76071036] [ 1.5355715 ]][[-0.7597464] [ 1.5365001]][[-0.75877297] [ 1.5374572 ]][[-0.7577902] [ 1.5384122]][[-0.7568006] [ 1.5393652]][[-0.75579304] [ 1.5403124 ]][[-0.75480515] [ 1.5412601 ]][[-0.75382864] [ 1.54223   ]][[-0.75286204] [ 1.5431749 ]][[-0.75185806] [ 1.5441632 ]][[-0.7508819] [ 1.5451214]][[-0.7498952] [ 1.5461223]][[-0.7489136] [ 1.5471457]][[-0.7479813] [ 1.5481367]][[-0.7470661] [ 1.5491254]][[-0.7461204] [ 1.5501167]][[-0.74518746] [ 1.5510621 ]][[-0.7442245] [ 1.551987 ]][[-0.7432518] [ 1.5529416]][[-0.74226946] [ 1.5538937 ]][[-0.74128  ] [ 1.5548435]][[-0.7402718] [ 1.5557873]][[-0.7392839] [ 1.5567315]][[-0.7383079] [ 1.5576984]][[-0.73734224] [ 1.5586395 ]][[-0.7363375] [ 1.5596259]][[-0.7353614] [ 1.5605813]][[-0.7343745] [ 1.5615813]][[-0.7333929] [ 1.5626047]][[-0.7324617] [ 1.5635948]][[-0.7315482] [ 1.5645826]][[-0.73060346] [ 1.565573  ]][[-0.72967196] [ 1.5665166 ]][[-0.72870964] [ 1.5674392 ]][[-0.7277374] [ 1.5683919]][[-0.7267553] [ 1.5693423]][[-0.72576594] [ 1.5702901 ]][[-0.72475725] [ 1.5712315 ]][[-0.7237757] [ 1.5721517]][[-0.7228056] [ 1.5730975]][[-0.72184557] [ 1.574019  ]][[-0.72084475] [ 1.574989  ]][[-0.7198727] [ 1.575929 ]][[-0.7188892] [ 1.5769165]][[-0.71791065] [ 1.5779295 ]][[-0.716983 ] [ 1.5789099]][[-0.71607316] [ 1.5798889 ]][[-0.7151313] [ 1.5808716]][[-0.7142027] [ 1.5818076]][[-0.7132425] [ 1.5827229]][[-0.71227944] [ 1.5836432 ]][[-0.7113053] [ 1.5845644]][[-0.7103229] [ 1.5854863]][[-0.70931995] [ 1.5864044 ]][[-0.7083511] [ 1.5872798]][[-0.7073925] [ 1.5881863]][[-0.70644295] [ 1.5890721 ]][[-0.70545053] [ 1.5900117 ]][[-0.70448637] [ 1.5909243 ]][[-0.70350957] [ 1.5918884 ]][[-0.70253706] [ 1.5928817 ]][[-0.7016154] [ 1.5938442]][[-0.70071113] [ 1.5948076 ]][[-0.6997738] [ 1.5957767]][[-0.69884944] [ 1.5967002 ]][[-0.6978925] [ 1.5976042]][[-0.6969323] [ 1.5985146]][[-0.6959606] [ 1.5994272]][[-0.6949801] [ 1.6003417]][[-0.69397837] [ 1.6012533 ]][[-0.69301087] [ 1.6021225 ]][[-0.69206274] [ 1.6029936 ]][[-0.69113004] [ 1.6038218 ]][[-0.6901519] [ 1.6047113]][[-0.68920064] [ 1.6055788 ]][[-0.68823516] [ 1.6065043 ]][[-0.68727267] [ 1.6074642 ]][[-0.68636036] [ 1.6083968 ]][[-0.6854646] [ 1.609334 ]][[-0.6845423] [ 1.6102557]][[-0.6836315] [ 1.6111366]][[-0.68268603] [ 1.6120025 ]][[-0.68173593] [ 1.6128795 ]][[-0.6807729] [ 1.6137627]][[-0.6797999] [ 1.6146513]][[-0.67880434] [ 1.6155404 ]][[-0.6778482] [ 1.6163701]][[-0.6769103] [ 1.6172062]][[-0.6759867] [ 1.6180028]][[-0.6750159] [ 1.6188656]][[-0.6740714] [ 1.6197094]][[-0.6731213] [ 1.6205864]][[-0.6721724] [ 1.6215044]][[-0.6712725] [ 1.6223998]][[-0.6703879] [ 1.6233046]][[-0.66947514] [ 1.6241978 ]][[-0.6685728] [ 1.6250533]][[-0.66763437] [ 1.6258969 ]][[-0.6666903] [ 1.6267548]][[-0.6657322] [ 1.6276217]][[-0.6647633] [ 1.6284965]][[-0.66377085] [ 1.6293739 ]][[-0.6628176] [ 1.6301931]][[-0.66188216] [ 1.6310207 ]][[-0.66096073] [ 1.6318096 ]][[-0.6599911] [ 1.6326673]][[-0.65904754] [ 1.6335069 ]][[-0.65809804] [ 1.6343814 ]][[-0.6571587] [ 1.6352704]][[-0.65626746] [ 1.6361401 ]][[-0.65539056] [ 1.637023  ]][[-0.6544843] [ 1.6378971]][[-0.6535876] [ 1.6387358]][[-0.6526537] [ 1.6395649]][[-0.6517134] [ 1.6404108]][[-0.6507583] [ 1.6412679]][[-0.6497917] [ 1.6421349]][[-0.64880085] [ 1.6430062 ]][[-0.64784896] [ 1.6438199 ]][[-0.64691466] [ 1.6446433 ]][[-0.6459941] [ 1.6454288]][[-0.6450246] [ 1.6462852]][[-0.64409286] [ 1.6470916 ]][[-0.64315367] [ 1.6479378 ]][[-0.64222336] [ 1.6488023 ]][[-0.6413404] [ 1.6496507]][[-0.6404708] [ 1.6505153]][[-0.6395706] [ 1.6513739]][[-0.63867927] [ 1.6521988 ]][[-0.6377497] [ 1.6530162]][[-0.6368129] [ 1.6538526]][[-0.6358607] [ 1.6547021]][[-0.6348963] [ 1.6555631]][[-0.63390684] [ 1.6564299 ]][[-0.63295627] [ 1.6572397 ]][[-0.632023 ] [ 1.6580603]][[-0.6311032] [ 1.6588436]][[-0.63013375] [ 1.6596997 ]][[-0.629202] [ 1.660506]][[-0.6282625] [ 1.6613532]][[-0.6273318] [ 1.6622196]][[-0.62644845] [ 1.6630703 ]][[-0.62557846] [ 1.6639379 ]][[-0.62467754] [ 1.6647998 ]][[-0.62378544] [ 1.665628  ]][[-0.62285465] [ 1.666449  ]][[-0.6219166] [ 1.6672894]][[-0.62096286] [ 1.6681434 ]][[-0.6199968] [ 1.6690093]][[-0.61900544] [ 1.6698811 ]][[-0.6180531] [ 1.6706955]][[-0.6171181] [ 1.6715212]][[-0.61619675] [ 1.6723092 ]][[-0.61522526] [ 1.6731708 ]][[-0.61429167] [ 1.6739824 ]][[-0.6133503] [ 1.6748353]][[-0.61242896] [ 1.6756749 ]][[-0.61155415] [ 1.676502  ]][[-0.6106917] [ 1.6773493]][[-0.6097972] [ 1.6781936]][[-0.6089107] [ 1.6790063]][[-0.6079845] [ 1.679814 ]][[-0.6070503] [ 1.6806433]][[-0.6060997] [ 1.6814882]][[-0.60513616] [ 1.6823467 ]][[-0.60414666] [ 1.6832128 ]][[-0.6031959] [ 1.6840221]][[-0.60226226] [ 1.6848438 ]][[-0.6013419] [ 1.6856285]][[-0.60037076] [ 1.6864887 ]][[-0.5994375] [ 1.6872993]][[-0.59849614] [ 1.6881523 ]][[-0.5975747] [ 1.6889925]][[-0.59669983] [ 1.6898206 ]][[-0.59583724] [ 1.6906699 ]][[-0.5949422] [ 1.6915164]][[-0.5940551] [ 1.6923316]][[-0.593128 ] [ 1.6931418]][[-0.5922056] [ 1.6939411]][[-0.59126526] [ 1.6947598 ]][[-0.5903106] [ 1.6955957]][[-0.5893323] [ 1.6964326]][[-0.58839154] [ 1.6972158 ]][[-0.5874667] [ 1.6980149]][[-0.5865541] [ 1.6987795]][[-0.5855894] [ 1.6996233]][[-0.5846618] [ 1.7004192]][[-0.5837252] [ 1.7012603]][[-0.58280796] [ 1.7020904 ]][[-0.5819368] [ 1.70291  ]][[-0.58107734] [ 1.7037524 ]][[-0.5801848] [ 1.7045935]][[-0.5792998] [ 1.7054042]][[-0.57837415] [ 1.7062111 ]][[-0.5774528] [ 1.7070079]][[-0.57651305] [ 1.7078252 ]][[-0.5755586] [ 1.7086607]][[-0.57458013] [ 1.7094979 ]][[-0.5736405] [ 1.7102777]][[-0.57271653] [ 1.7110745 ]][[-0.5718045] [ 1.7118373]][[-0.5708398] [ 1.7126809]][[-0.56991214] [ 1.7134769 ]][[-0.5689752] [ 1.7143192]][[-0.56805754] [ 1.715151  ]][[-0.56718594] [ 1.7159725 ]][[-0.5663356] [ 1.7167934]][[-0.5654509] [ 1.7176158]][[-0.56457275] [ 1.71841   ]][[-0.5636528] [ 1.7192028]][[-0.5627364] [ 1.7199874]][[-0.5618008] [ 1.7207947]][[-0.5608497] [ 1.721622 ]][[-0.55987394] [ 1.7224525 ]][[-0.55893666] [ 1.7232263 ]][[-0.5580219] [ 1.724001 ]][[-0.55711806] [ 1.7247444 ]][[-0.5561601] [ 1.7255721]][[-0.5552384] [ 1.7263539]][[-0.5543066] [ 1.7271847]][[-0.55339336] [ 1.7280066 ]][[-0.5525257] [ 1.72882  ]][[-0.55167884] [ 1.7296342 ]][[-0.55079687] [ 1.7304513 ]][[-0.549921 ] [ 1.7312411]][[-0.54900265] [ 1.7320305 ]][[-0.5480875] [ 1.7328126]][[-0.5471527] [ 1.7336185]][[-0.54620206] [ 1.7344455 ]][[-0.5452263] [ 1.7352763]][[-0.5442889] [ 1.7360506]][[-0.54337394] [ 1.7368264 ]][[-0.54246974] [ 1.737571  ]][[-0.541511 ] [ 1.7384013]][[-0.5405885] [ 1.7391856]][[-0.5396557] [ 1.7400197]][[-0.53874135] [ 1.7408452 ]][[-0.5378727] [ 1.7416624]][[-0.5370248] [ 1.7424806]][[-0.5361416] [ 1.7433021]][[-0.5352644] [ 1.7440962]][[-0.53434455] [ 1.74489   ]][[-0.53342783] [ 1.7456766 ]][[-0.5324913] [ 1.7464874]][[-0.5315389] [ 1.7473195]][[-0.53056115] [ 1.7481556 ]][[-0.5296219] [ 1.7489347]][[-0.5287052] [ 1.7497156]][[-0.5277992] [ 1.7504649]][[-0.5268384] [ 1.7513007]][[-0.525914 ] [ 1.7520902]][[-0.52497923] [ 1.75293   ]][[-0.524063 ] [ 1.7537612]][[-0.5231926] [ 1.7545838]][[-0.52234304] [ 1.7554077 ]][[-0.521458 ] [ 1.7562348]][[-0.5205791] [ 1.7570342]][[-0.5196573] [ 1.7578334]][[-0.5187387] [ 1.7586254]][[-0.5178002] [ 1.7594416]][[-0.5168457] [ 1.7602794]][[-0.5158658] [ 1.7611213]][[-0.5149246] [ 1.7619058]][[-0.51400596] [ 1.7626919 ]][[-0.5130981] [ 1.7634462]][[-0.51213527] [ 1.7642877 ]][[-0.5112089] [ 1.7650826]][[-0.51027215] [ 1.7659281 ]][[-0.509354 ] [ 1.7667649]][[-0.50848186] [ 1.7675931 ]][[-0.50763065] [ 1.7684225 ]][[-0.50674385] [ 1.769255  ]][[-0.5058632] [ 1.7700597]][[-0.50493956] [ 1.7708641 ]][[-0.5040191] [ 1.7716613]][[-0.5030787] [ 1.7724829]][[-0.5021223] [ 1.773326 ]][[-0.50114036] [ 1.7741734 ]][[-0.50019723] [ 1.7749629 ]][[-0.4992768] [ 1.775754 ]][[-0.4983672] [ 1.7765131]][[-0.49740243] [ 1.77736   ]][[-0.49647427] [ 1.7781599 ]][[-0.4955357] [ 1.7790108]][[-0.49461582] [ 1.7798527 ]][[-0.49374208] [ 1.7806861 ]][[-0.4928893] [ 1.7815206]][[-0.4920009] [ 1.7823583]][[-0.49111864] [ 1.783168  ]][[-0.4901933] [ 1.7839773]][[-0.48927113] [ 1.7847792 ]][[-0.48832902] [ 1.7856057 ]][[-0.48737085] [ 1.786454  ]][[-0.4863871] [ 1.7873063]][[-0.48544228] [ 1.7881005 ]][[-0.4845202] [ 1.7888962]][[-0.483609 ] [ 1.7896597]][[-0.48264244] [ 1.7905116 ]][[-0.48171264] [ 1.7913162 ]][[-0.48078582] [ 1.7921425 ]][[-0.47987637] [ 1.7929629 ]][[-0.47901195] [ 1.7937773 ]][[-0.4781675] [ 1.7945954]][[-0.4772863] [ 1.7954189]][[-0.47641036] [ 1.796216  ]][[-0.47549042] [ 1.7970146 ]][[-0.47457293] [ 1.7978073 ]][[-0.47363478] [ 1.7986263 ]][[-0.4726799] [ 1.7994684]][[-0.47169888] [ 1.8003157 ]][[-0.4707564] [ 1.8011055]][[-0.46983632] [ 1.8018978 ]][[-0.46892676] [ 1.8026586 ]][[-0.46796134] [ 1.803509  ]][[-0.46703246] [ 1.8043125 ]][[-0.4661063] [ 1.8051386]][[-0.46519732] [ 1.8059592 ]][[-0.4643333] [ 1.8067744]][[-0.4634891] [ 1.8075935]][[-0.46260786] [ 1.8084184 ]][[-0.46173176] [ 1.8092172 ]][[-0.46081138] [ 1.8100178 ]][[-0.45989332] [ 1.8108128 ]][[-0.45895445] [ 1.8116344 ]][[-0.45799872] [ 1.8124796 ]][[-0.45701665] [ 1.8133303 ]][[-0.45607316] [ 1.8141232 ]][[-0.45515203] [ 1.8149186 ]][[-0.45424142] [ 1.8156825 ]][[-0.45327473] [ 1.8165369 ]][[-0.45234463] [ 1.8173441 ]][[-0.4514172] [ 1.8181741]][[-0.450507 ] [ 1.8189987]][[-0.4496477] [ 1.8198048]][[-0.44880766] [ 1.8206162 ]][[-0.44792995] [ 1.8214349 ]][[-0.44705686] [ 1.8222283 ]][[-0.44613892] [ 1.8230245 ]][[-0.4452229] [ 1.823816 ]][[-0.44428566] [ 1.824635  ]][[-0.44333118] [ 1.8254786 ]][[-0.44235182] [ 1.8263237 ]][[-0.4414107] [ 1.8271117]][[-0.4404916] [ 1.8279034]][[-0.43958265] [ 1.8286641 ]][[-0.43861714] [ 1.8295165 ]][[-0.43768802] [ 1.8303223 ]][[-0.43676132] [ 1.8311516 ]][[-0.43585163] [ 1.831976  ]][[-0.4349928] [ 1.8327824]][[-0.43415305] [ 1.8335946 ]][[-0.43327537] [ 1.8344142 ]][[-0.4324022] [ 1.8352089]][[-0.4314839] [ 1.8360068]][[-0.43056744] [ 1.8368001 ]][[-0.42962956] [ 1.8376215 ]][[-0.4286743] [ 1.8384676]][[-0.42769402] [ 1.8393157 ]][[-0.426752 ] [ 1.8401064]][[-0.42583197] [ 1.8409009 ]][[-0.42493862] [ 1.8416288 ]][[-0.42398676] [ 1.8424529 ]][[-0.42306983] [ 1.8432332 ]][[-0.42215395] [ 1.8440403 ]][[-0.42125386] [ 1.844845  ]][[-0.42041692] [ 1.8456064 ]][[-0.41959682] [ 1.8463787 ]][[-0.41873652] [ 1.847163  ]][[-0.41787884] [ 1.847926  ]][[-0.41697416] [ 1.8486959 ]][[-0.41606978] [ 1.8494644 ]][[-0.41515273] [ 1.8502442 ]][[-0.41421592] [ 1.8510536 ]][[-0.4132519] [ 1.8518691]][[-0.41232443] [ 1.8526306 ]][[-0.41141737] [ 1.8533994 ]][[-0.41053557] [ 1.854104  ]][[-0.40959367] [ 1.8549086 ]][[-0.4086856] [ 1.8556714]][[-0.40777746] [ 1.8564634 ]][[-0.4068842] [ 1.8572552]][[-0.4060534] [ 1.858005 ]][[-0.4052387] [ 1.8587674]][[-0.40438294] [ 1.8595433 ]][[-0.40352917] [ 1.8602992 ]][[-0.40262768] [ 1.8610631 ]][[-0.40172598] [ 1.8618268 ]][[-0.4008111] [ 1.8626026]][[-0.399876 ] [ 1.8634092]][[-0.39893156] [ 1.8641852 ]][[-0.39802155] [ 1.8649113 ]][[-0.39713004] [ 1.8656487 ]][[-0.39626208] [ 1.8663253 ]][[-0.39533216] [ 1.8671057 ]][[-0.39443475] [ 1.8678471 ]][[-0.39353597] [ 1.8686205 ]][[-0.39265093] [ 1.8693961 ]][[-0.3918275] [ 1.8701315]][[-0.39101925] [ 1.8708814 ]][[-0.390169 ] [ 1.8716469]][[-0.38931996] [ 1.8723936 ]][[-0.38842234] [ 1.8731499 ]][[-0.38752386] [ 1.8739071 ]][[-0.38661164] [ 1.8746777 ]][[-0.38567862] [ 1.8754803 ]][[-0.38473576] [ 1.876253  ]][[-0.38382706] [ 1.8769764 ]][[-0.38293654] [ 1.8777118 ]][[-0.38206932] [ 1.8783865 ]][[-0.38113964] [ 1.8791665 ]][[-0.3802423] [ 1.8799077]][[-0.37936184] [ 1.8806475 ]][[-0.3784931] [ 1.8813934]][[-0.3776843] [ 1.8821024]][[-0.37688905] [ 1.8828291 ]][[-0.3760501] [ 1.8835742]][[-0.37521103] [ 1.8843031 ]][[-0.37432194] [ 1.8850439 ]][[-0.3734309] [ 1.8857876]][[-0.37252507] [ 1.8865467 ]][[-0.37159744] [ 1.8873397 ]][[-0.37065914] [ 1.8881042 ]][[-0.3697544] [ 1.8888202]][[-0.36886725] [ 1.8895496 ]][[-0.3680029] [ 1.890219 ]][[-0.36709467] [ 1.8909588 ]][[-0.3662221] [ 1.891651 ]][[-0.36536372] [ 1.8923473 ]][[-0.3645146] [ 1.8930547]][[-0.363737] [ 1.893702]][[-0.36297414] [ 1.8943663 ]][[-0.36216384] [ 1.8950559 ]][[-0.36135027] [ 1.8957353 ]][[-0.36048362] [ 1.8964322 ]][[-0.35961244] [ 1.897137  ]][[-0.35872406] [ 1.897862  ]][[-0.35781175] [ 1.8986251 ]][[-0.35688686] [ 1.8993632 ]][[-0.355994 ] [ 1.9000555]][[-0.3551173] [ 1.9007643]][[-0.3542621] [ 1.9014153]][[-0.35336167] [ 1.9021398 ]][[-0.35249594] [ 1.9028183 ]][[-0.35164344] [ 1.903503  ]][[-0.35079935] [ 1.9042004 ]][[-0.35002628] [ 1.9048388 ]][[-0.3492673] [ 1.9054956]][[-0.34846005] [ 1.9061794 ]][[-0.34764892] [ 1.906854  ]][[-0.34678397] [ 1.9075472 ]][[-0.345914 ] [ 1.9082495]][[-0.3450264] [ 1.9089727]][[-0.34411436] [ 1.9097353 ]][[-0.34318936] [ 1.9104732 ]][[-0.34229618] [ 1.9111657 ]][[-0.34141898] [ 1.9118754 ]][[-0.34056318] [ 1.9125271 ]][[-0.3396617] [ 1.9132533]][[-0.33879483] [ 1.9139336 ]][[-0.3379411] [ 1.9146205]][[-0.33709568] [ 1.9153206 ]][[-0.33632138] [ 1.9159615 ]][[-0.3355611] [ 1.9166212]][[-0.33475226] [ 1.9173083 ]][[-0.33393943] [ 1.9179863 ]][[-0.33307248] [ 1.9186833 ]][[-0.33220044] [ 1.9193896 ]][[-0.3313106] [ 1.9201171]][[-0.33041388] [ 1.9208508 ]][[-0.32950228] [ 1.921563  ]][[-0.32862097] [ 1.9222326 ]][[-0.3277542] [ 1.9229224]][[-0.32690755] [ 1.9235563 ]][[-0.32601377] [ 1.9242678 ]][[-0.3251537] [ 1.924935 ]][[-0.32430583] [ 1.9256105 ]][[-0.3234654] [ 1.9263012]][[-0.32269558] [ 1.9269336 ]][[-0.3219391] [ 1.9275864]][[-0.32113326] [ 1.9282681 ]][[-0.3203228] [ 1.9289416]][[-0.31945753] [ 1.9296353 ]][[-0.31858665] [ 1.9303392 ]][[-0.3176975] [ 1.9310654]][[-0.31680104] [ 1.9317986 ]][[-0.3158893] [ 1.9325107]][[-0.3150077] [ 1.9331805]][[-0.31414038] [ 1.933871  ]][[-0.31329304] [ 1.9345057 ]][[-0.3123982] [ 1.935219 ]][[-0.31153697] [ 1.935888  ]][[-0.3106878] [ 1.936566 ]][[-0.30986565] [ 1.9372256 ]][[-0.30911228] [ 1.9378301 ]][[-0.3083704] [ 1.9384584]][[-0.30757722] [ 1.9391189 ]][[-0.30677786] [ 1.9397738 ]][[-0.30592203] [ 1.9404515 ]][[-0.3050593] [ 1.9411417]][[-0.3041771] [ 1.9418563]][[-0.30328658] [ 1.9425795 ]][[-0.3023798] [ 1.9432832]][[-0.30150244] [ 1.9439455 ]][[-0.3006387] [ 1.9446301]][[-0.29979435] [ 1.9452597 ]][[-0.2989017] [ 1.9459695]][[-0.2980423] [ 1.9466355]][[-0.2971945] [ 1.9473113]][[-0.2963734] [ 1.9479694]][[-0.29562095] [ 1.9485726 ]][[-0.29487967] [ 1.9492005 ]][[-0.29408658] [ 1.9498613 ]][[-0.293287] [ 1.950517]][[-0.2924305] [ 1.9511962]][[-0.29156685] [ 1.9518883 ]][[-0.29070592] [ 1.9525642 ]][[-0.28983414] [ 1.9532534 ]][[-0.28894383] [ 1.9539268 ]][[-0.28808105] [ 1.9545621 ]][[-0.2872302] [ 1.9552231]][[-0.28639716] [ 1.9558314 ]][[-0.28551418] [ 1.9565234 ]][[-0.28466326] [ 1.9571737 ]][[-0.28382283] [ 1.9578359 ]][[-0.28303054] [ 1.9584439 ]][[-0.28230402] [ 1.959002  ]][[-0.28158587] [ 1.9595901 ]][[-0.28081304] [ 1.9602158 ]][[-0.28003138] [ 1.9608405 ]][[-0.2791904] [ 1.9614924]][[-0.27834037] [ 1.9621607 ]][[-0.27749136] [ 1.9628156 ]][[-0.27662995] [ 1.9634867 ]][[-0.27574852] [ 1.9641441 ]][[-0.27489352] [ 1.9647653 ]][[-0.27404937] [ 1.9654144 ]][[-0.27322215] [ 1.966012  ]][[-0.2723438] [ 1.9666957]][[-0.2714969] [ 1.9673387]][[-0.2706598] [ 1.9679949]][[-0.26987037] [ 1.9685977 ]][[-0.26914638] [ 1.969151  ]][[-0.2684303] [ 1.9697355]][[-0.2676588] [ 1.9703588]][[-0.26687804] [ 1.970982  ]][[-0.26603732] [ 1.9716332 ]][[-0.26518717] [ 1.9723016 ]][[-0.26433775] [ 1.972957  ]][[-0.26347557] [ 1.9736291 ]][[-0.26259306] [ 1.974288  ]][[-0.26173687] [ 1.9749106 ]][[-0.26089138] [ 1.9755619 ]][[-0.2600627] [ 1.9761615]][[-0.25918254] [ 1.9768481 ]][[-0.25833377] [ 1.977494  ]][[-0.25750995] [ 1.9781305 ]][[-0.25673234] [ 1.9787153 ]][[-0.25603232] [ 1.9792298 ]][[-0.25533754] [ 1.97978   ]][[-0.2545847] [ 1.9803733]][[-0.2538204] [ 1.9809698]][[-0.2529939] [ 1.9815978]][[-0.25215623] [ 1.9822459 ]][[-0.25131768] [ 1.9828836 ]][[-0.25046495] [ 1.9835404 ]][[-0.2495905] [ 1.9841859]][[-0.24874136] [ 1.9847968 ]][[-0.24794087] [ 1.985371  ]][[-0.24715243] [ 1.9859015 ]][[-0.2463079] [ 1.9865273]][[-0.24549097] [ 1.9871186 ]][[-0.24469559] [ 1.9877064 ]][[-0.24394348] [ 1.9882475 ]][[-0.24326642] [ 1.9887224 ]][[-0.24259205] [ 1.9892378 ]][[-0.24185705] [ 1.9898006 ]][[-0.24110843] [ 1.9903702 ]][[-0.24029547] [ 1.9909748 ]][[-0.23946956] [ 1.9916027 ]][[-0.23864128] [ 1.9922225 ]][[-0.23782238] [ 1.9928244 ]][[-0.2369779] [ 1.9934211]][[-0.23615547] [ 1.9939882 ]][[-0.23537889] [ 1.9945232 ]][[-0.23461169] [ 1.9950184 ]][[-0.23378561] [ 1.9956138 ]][[-0.23298508] [ 1.996178  ]][[-0.23220418] [ 1.996742  ]][[-0.23146498] [ 1.9972618 ]][[-0.23079956] [ 1.9977173 ]][[-0.23014942] [ 1.9981918 ]][[-0.22943561] [ 1.9987189 ]][[-0.22870566] [ 1.9992568 ]][[-0.22790883] [ 1.999834  ]][[-0.22711203] [ 2.0004127 ]][[-0.22630952] [ 2.000989  ]][[-0.22551349] [ 2.001552  ]][[-0.22468905] [ 2.0021143 ]][[-0.22388437] [ 2.0026505 ]][[-0.22312364] [ 2.003158  ]][[-0.22237039] [ 2.0036287 ]][[-0.22155619] [ 2.0042036 ]][[-0.22076608] [ 2.0047495 ]][[-0.2199943] [ 2.0052974]][[-0.21926315] [ 2.0058029 ]][[-0.218605 ] [ 2.0062454]][[-0.21796118] [ 2.0067089 ]][[-0.21725242] [ 2.007227  ]][[-0.21652661] [ 2.0077574 ]][[-0.21573284] [ 2.0083287 ]][[-0.21493842] [ 2.0089028 ]][[-0.21413766] [ 2.0094752 ]][[-0.21334288] [ 2.0100353 ]][[-0.21251905] [ 2.0105953 ]][[-0.21171464] [ 2.0111299 ]][[-0.210954] [ 2.011636]][[-0.2102005] [ 2.0121055]][[-0.20938545] [ 2.0126808 ]][[-0.20859432] [ 2.0132275 ]][[-0.20782137] [ 2.0137765 ]][[-0.20708899] [ 2.0142832 ]][[-0.20642975] [ 2.0147266 ]][[-0.20578472] [ 2.0151916 ]][[-0.2050743] [ 2.0157118]][[-0.20434658] [ 2.016245  ]][[-0.20355044] [ 2.0168192 ]][[-0.20275353] [ 2.0173967 ]][[-0.20195016] [ 2.0179727 ]][[-0.2011527] [ 2.0185363]][[-0.20032598] [ 2.0191002 ]][[-0.1995187] [ 2.0196385]][[-0.1987553] [ 2.0201483]][[-0.19799903] [ 2.020621  ]][[-0.19719394] [ 2.0211794 ]][[-0.1964115] [ 2.021711 ]][[-0.19566277] [ 2.0222206 ]][[-0.19495204] [ 2.0226917 ]][[-0.19431232] [ 2.023103  ]][[-0.19371204] [ 2.0234964 ]][[-0.19304118] [ 2.0239532 ]][[-0.19235583] [ 2.024418  ]][[-0.19159704] [ 2.0249321 ]][[-0.19083335] [ 2.025456  ]][[-0.19005942] [ 2.025984  ]][[-0.1892881] [ 2.0265052]][[-0.18848434] [ 2.0270312 ]][[-0.18769741] [ 2.0275357 ]][[-0.18695217] [ 2.0280154 ]][[-0.18621191] [ 2.0284612 ]][[-0.18542057] [ 2.0289967 ]][[-0.18465026] [ 2.0295079 ]][[-0.18391222] [ 2.0299993 ]][[-0.18321094] [ 2.0304542 ]][[-0.18257974] [ 2.0308506 ]][[-0.18198703] [ 2.031231  ]][[-0.18134567] [ 2.0316396 ]][[-0.18068643] [ 2.0320616 ]][[-0.17995031] [ 2.032538  ]][[-0.17920658] [ 2.0330286 ]][[-0.17845017] [ 2.0335276 ]][[-0.17769419] [ 2.0340228 ]][[-0.17690364] [ 2.034526  ]][[-0.17612825] [ 2.0350106 ]][[-0.17539322] [ 2.0354724 ]][[-0.17466179] [ 2.0359023 ]][[-0.1738777] [ 2.0364249]][[-0.1731136] [ 2.0369248]][[-0.17238092] [ 2.0374064 ]][[-0.1716843] [ 2.0378525]][[-0.1710573] [ 2.038241 ]][[-0.17046824] [ 2.0386143 ]][[-0.16982958] [ 2.0390174 ]][[-0.16919264] [ 2.039403  ]][[-0.16847576] [ 2.0398476 ]][[-0.16774888] [ 2.0403101 ]][[-0.16700716] [ 2.0407846 ]][[-0.166264] [ 2.041258]][[-0.16548435] [ 2.0417426 ]][[-0.16471845] [ 2.0422103 ]][[-0.16399176] [ 2.0426574 ]][[-0.16326745] [ 2.0430741 ]][[-0.16248907] [ 2.0435863 ]][[-0.1617298] [ 2.0440772]][[-0.16100124] [ 2.044551  ]][[-0.16030811] [ 2.04499   ]][[-0.15968429] [ 2.0453722 ]][[-0.15909795] [ 2.0457401 ]][[-0.15846115] [ 2.046139  ]][[-0.15782554] [ 2.046521  ]][[-0.15710907] [ 2.0469635 ]][[-0.15638213] [ 2.0474248 ]][[-0.15563987] [ 2.0478985 ]][[-0.15489581] [ 2.048372  ]][[-0.15411477] [ 2.048857  ]][[-0.15334727] [ 2.0493255 ]][[-0.15261894] [ 2.0497735 ]][[-0.1518928] [ 2.0501912]][[-0.15111208] [ 2.0507057 ]][[-0.15035039] [ 2.051199  ]][[-0.14961942] [ 2.0516753 ]][[-0.14892393] [ 2.0521169 ]][[-0.148298] [ 2.052501]][[-0.14770964] [ 2.0528708 ]][[-0.14707044] [ 2.0532722 ]][[-0.14643236] [ 2.0536568 ]][[-0.14571287] [ 2.0541024 ]][[-0.14498278] [ 2.0545673 ]][[-0.14423725] [ 2.055045  ]][[-0.14348985] [ 2.0555222 ]][[-0.14270522] [ 2.0560112 ]][[-0.14193414] [ 2.0564837 ]][[-0.14120242] [ 2.0569355 ]][[-0.14047284] [ 2.0573568 ]][[-0.13971381] [ 2.05784   ]][[-0.13897131] [ 2.0583055 ]][[-0.13828704] [ 2.0587144 ]][[-0.1376334] [ 2.0590954]][[-0.13704516] [ 2.0594249 ]][[-0.13649063] [ 2.0597458 ]][[-0.13588123] [ 2.060104  ]][[-0.13526961] [ 2.0604496 ]][[-0.13457309] [ 2.0608613 ]][[-0.1338632] [ 2.0612965]][[-0.13313532] [ 2.0617478 ]][[-0.13240337] [ 2.0622022 ]][[-0.131632 ] [ 2.0626712]][[-0.1308725] [ 2.0631258]][[-0.130151] [ 2.063562]][[-0.12943023] [ 2.0639691 ]][[-0.12867853] [ 2.064441  ]][[-0.12794231] [ 2.0648963 ]][[-0.12726359] [ 2.0652962 ]][[-0.12661476] [ 2.065669  ]][[-0.12603088] [ 2.065991  ]][[-0.12548013] [ 2.0663054 ]][[-0.1248735] [ 2.0666583]][[-0.12426403] [ 2.0669997 ]][[-0.1235686] [ 2.0674088]][[-0.12285923] [ 2.067842  ]][[-0.12213133] [ 2.0682924 ]][[-0.12139894] [ 2.0687463 ]][[-0.12062653] [ 2.0692155 ]][[-0.11986575] [ 2.069671  ]][[-0.1191429] [ 2.0701077]][[-0.1184205] [ 2.0705159]][[-0.11769871] [ 2.070945  ]][[-0.11698908] [ 2.0713625 ]][[-0.11633422] [ 2.071728  ]][[-0.11570667] [ 2.0720701 ]][[-0.11514195] [ 2.072364  ]][[-0.11460833] [ 2.0726535 ]][[-0.11401644] [ 2.072985  ]][[-0.11341988] [ 2.073307  ]][[-0.11273515] [ 2.0737    ]][[-0.11203493] [ 2.0741193 ]][[-0.11131473] [ 2.0745578 ]][[-0.11058883] [ 2.0750015 ]][[-0.10982158] [ 2.075462  ]][[-0.10906506] [ 2.07591   ]][[-0.10834583] [ 2.0763407 ]][[-0.10762628] [ 2.0767434 ]][[-0.10690664] [ 2.0771682 ]][[-0.10619859] [ 2.0775821 ]][[-0.10554508] [ 2.0779443 ]][[-0.10491852] [ 2.0782835 ]][[-0.10435472] [ 2.078575  ]][[-0.10385326] [ 2.0788186 ]][[-0.10328966] [ 2.0791094 ]][[-0.1027182] [ 2.0793953]][[-0.10205518] [ 2.0797567 ]][[-0.10137401] [ 2.0801485 ]][[-0.10067043] [ 2.0805628 ]][[-0.09995904] [ 2.0809853 ]][[-0.09920419] [ 2.0814276 ]][[-0.09845846] [ 2.0818594 ]][[-0.09774873] [ 2.0822756 ]][[-0.09703733] [ 2.0826654 ]][[-0.09632462] [ 2.0830796 ]][[-0.09562246] [ 2.083484  ]][[-0.09497418] [ 2.0838375 ]][[-0.09435211] [ 2.0841691 ]][[-0.09379236] [ 2.0844536 ]][[-0.0932946] [ 2.0846908]][[-0.09273368] [ 2.0849764 ]][[-0.09216427] [ 2.085258  ]][[-0.09152897] [ 2.0855808 ]][[-0.09087222] [ 2.0859387 ]][[-0.09019006] [ 2.0863233 ]][[-0.08949747] [ 2.0867195 ]][[-0.08875881] [ 2.0871387 ]][[-0.08802725] [ 2.0875502 ]][[-0.08733005] [ 2.0879483 ]][[-0.08662948] [ 2.0883222 ]][[-0.08592606] [ 2.0887225 ]][[-0.08526534] [ 2.0890691 ]][[-0.08465428] [ 2.0893705 ]][[-0.0840655] [ 2.0896554]][[-0.08353574] [ 2.0898974 ]][[-0.08306505] [ 2.0900962 ]][[-0.08252776] [ 2.0903482 ]][[-0.0819792] [ 2.0905998]][[-0.08136187] [ 2.0908964 ]][[-0.08072076] [ 2.0912313 ]][[-0.08005209] [ 2.091596  ]][[-0.07937115] [ 2.0919747 ]][[-0.07864224] [ 2.0923789 ]][[-0.07791904] [ 2.0927773 ]][[-0.07722913] [ 2.093164  ]][[-0.07653467] [ 2.0935276 ]][[-0.07583629] [ 2.0939193 ]][[-0.07517993] [ 2.094258  ]][[-0.07457272] [ 2.0945523 ]][[-0.07398716] [ 2.0948308 ]][[-0.07346032] [ 2.095067  ]][[-0.0729923] [ 2.0952604]][[-0.07245669] [ 2.0955083 ]][[-0.07190925] [ 2.0957563 ]][[-0.07129215] [ 2.0960505 ]][[-0.07065071] [ 2.096384  ]][[-0.06998119] [ 2.096748  ]][[-0.06929898] [ 2.097127  ]][[-0.06856821] [ 2.0975318 ]][[-0.06784293] [ 2.0979311 ]][[-0.06715091] [ 2.098319  ]][[-0.0664541] [ 2.0986838]][[-0.06575316] [ 2.0990775 ]][[-0.06509434] [ 2.099418  ]][[-0.0644848] [ 2.0997133]][[-0.06389692] [ 2.0999932 ]][[-0.06336799] [ 2.1002305 ]][[-0.06289814] [ 2.1004245 ]][[-0.06236019] [ 2.100674  ]][[-0.06181024] [ 2.1009235 ]][[-0.06119012] [ 2.10122   ]][[-0.06054546] [ 2.101556  ]][[-0.05987246] [ 2.1019232 ]][[-0.05918666] [ 2.1023054 ]][[-0.05845194] [ 2.102714  ]][[-0.05772271] [ 2.103117  ]][[-0.05702689] [ 2.1035085 ]][[-0.05632622] [ 2.1038768 ]][[-0.05562137] [ 2.1042743 ]][[-0.05495887] [ 2.1046178 ]][[-0.05434593] [ 2.104916  ]][[-0.05375475] [ 2.1051986 ]][[-0.05322286] [ 2.105438  ]][[-0.05275039] [ 2.1056337 ]][[-0.05220939] [ 2.1058855 ]][[-0.05165631] [ 2.1061375 ]][[-0.05103264] [ 2.106437  ]][[-0.05038426] [ 2.1067765 ]][[-0.04970737] [ 2.1071472 ]][[-0.0490176] [ 2.1075332]][[-0.04827862] [ 2.107946  ]][[-0.04754515] [ 2.1083531 ]][[-0.0468453] [ 2.1087487]][[-0.04614057] [ 2.1091208 ]][[-0.04543163] [ 2.1095223 ]][[-0.04476529] [ 2.1098695 ]][[-0.0441488] [ 2.1101708]][[-0.04355419] [ 2.1104562 ]][[-0.04301923] [ 2.110698  ]][[-0.04254403] [ 2.1108959 ]][[-0.04199991] [ 2.1111503 ]][[-0.04144364] [ 2.111405  ]][[-0.04081636] [ 2.1117074 ]][[-0.04016424] [ 2.1120505 ]][[-0.03948345] [ 2.112425  ]][[-0.03878971] [ 2.1128151 ]][[-0.03804648] [ 2.1132321 ]][[-0.03730879] [ 2.1136434 ]][[-0.03660493] [ 2.114043  ]][[-0.03589615] [ 2.114419  ]][[-0.03518315] [ 2.1148245 ]][[-0.034513 ] [ 2.1151752]][[-0.03389299] [ 2.1154797 ]][[-0.03329501] [ 2.115768  ]][[-0.032757 ] [ 2.1160123]][[-0.03227909] [ 2.1162121 ]][[-0.03173188] [ 2.116469  ]][[-0.03117247] [ 2.1167262 ]][[-0.03054164] [ 2.1170318 ]][[-0.02988583] [ 2.1173785 ]][[-0.02920121] [ 2.1177568 ]][[-0.02850355] [ 2.118151  ]][[-0.02775614] [ 2.1185722 ]][[-0.02701432] [ 2.1189878 ]][[-0.0263065] [ 2.1193917]][[-0.02559376] [ 2.1197715 ]][[-0.02487678] [ 2.1201813 ]][[-0.02420288] [ 2.1205356 ]][[-0.02357942] [ 2.1208432 ]][[-0.0229781] [ 2.1211345]][[-0.0224371] [ 2.1213813]][[-0.02195655] [ 2.1215832 ]][[-0.02140631] [ 2.1218426 ]][[-0.0208438] [ 2.1221025]][[-0.02020949] [ 2.1224113 ]][[-0.01955006] [ 2.1227615 ]][[-0.01886167] [ 2.1231437 ]][[-0.01816018] [ 2.1235416 ]][[-0.01740867] [ 2.1239672 ]][[-0.01669917] [ 2.1243417 ]][[-0.01602024] [ 2.124709  ]][[-0.01533307] [ 2.1250558 ]][[-0.01463869] [ 2.1254368 ]][[-0.01398499] [ 2.125765  ]][[-0.01337963] [ 2.126049  ]][[-0.01279439] [ 2.1263192 ]][[-0.01226788] [ 2.1265466 ]][[-0.01180043] [ 2.126731  ]][[-0.0112613] [ 2.1269753]][[-0.01070842] [ 2.1272218 ]][[-0.01008204] [ 2.1275194 ]][[-0.00942927] [ 2.12786   ]][[-0.00874632] [ 2.1282346 ]][[-0.00804928] [ 2.128626  ]][[-0.0073011] [ 2.1290464]][[-0.00659441] [ 2.1294162 ]][[-0.00591781] [ 2.1297793 ]][[-0.0052323] [ 2.130123 ]][[-0.004539 ] [ 2.1305015]][[-0.00388612] [ 2.1308274 ]][[-0.00328141] [ 2.131109  ]][[-0.00269654] [ 2.1313772 ]][[-0.00217037] [ 2.131603  ]][[-1.7032569e-03] [ 2.1317856e+00]][[-1.1637849e-03] [ 2.1320293e+00]][[-6.1021768e-04] [ 2.1322753e+00]][[1.7478364e-05] [2.1325731e+00]][[6.4682751e-04] [2.1328812e+00]][[1.3092383e-03] [2.1332269e+00]][[1.9882678e-03] [2.1335931e+00]][[0.00272094] [2.1339915 ]][[0.00341385] [2.1343412 ]][[0.00405519] [2.1346557 ]][[0.00470938] [2.1349554 ]][[0.00537493] [2.1352954 ]][[0.00600298] [2.1355863 ]][[0.00658543] [2.1358364 ]][[0.00715047] [2.1360762 ]][[0.00765878] [2.1362762 ]][[0.00810976] [2.1364355 ]][[0.00863541] [2.136659  ]][[0.00917693] [2.1368868 ]][[0.00979453] [2.1371691 ]][[0.01041517] [2.1374638 ]][[0.01107028] [2.137798  ]][[0.01174322] [2.1381545 ]][[0.01247112] [2.1385448 ]][[0.01315991] [2.1388872 ]][[0.01379763] [2.139195  ]][[0.01444901] [2.139489  ]][[0.01511247] [2.1398244 ]][[0.01573879] [2.140111  ]][[0.01631976] [2.140357  ]][[0.01688372] [2.1405935 ]][[0.01739103] [2.1407905 ]][[0.01784108] [2.1409464 ]][[0.01836657] [2.1411679 ]][[0.01890833] [2.1413944 ]][[0.01952689] [2.1416762 ]][[0.02014874] [2.1419706 ]][[0.02080551] [2.1423056 ]][[0.02148039] [2.1426632 ]][[0.02217779] [2.1430137 ]][[0.02283932] [2.1433203 ]][[0.02345259] [2.143596  ]][[0.02408242] [2.143861  ]][[0.02472696] [2.144171  ]][[0.02533641] [2.1444347 ]][[0.0259023] [2.14466  ]][[0.02645291] [2.144878  ]][[0.0269482] [2.1450577]][[0.02738736] [2.1451983 ]][[0.0279038] [2.1454067]][[0.02843782] [2.1456218 ]][[0.02905023] [2.1458938 ]][[0.02966693] [2.14618   ]][[0.03031965] [2.146508  ]][[0.03099139] [2.1468601 ]][[0.03168651] [2.147206  ]][[0.03234618] [2.1475084 ]][[0.03295787] [2.14778   ]][[0.03358676] [2.1480417 ]][[0.03423091] [2.1483495 ]][[0.03484018] [2.148611  ]][[0.035406 ] [2.1488342]][[0.03595679] [2.1490502 ]][[0.03645224] [2.1492283 ]][[0.03689151] [2.149367  ]][[0.03740876] [2.1495745 ]][[0.03794393] [2.149789  ]][[0.03855814] [2.1500616 ]][[0.03917687] [2.1503487 ]][[0.03983197] [2.1506782 ]][[0.04050637] [2.151032  ]][[0.04120441] [2.1513798 ]][[0.04186691] [2.1516838 ]][[0.04248124] [2.1519568 ]][[0.04311297] [2.15222   ]][[0.04373662] [2.1524987 ]][[0.04432761] [2.1527338 ]][[0.04487706] [2.1529331 ]][[0.04541337] [2.153128  ]][[0.04589576] [2.1532867 ]][[0.04632322] [2.1534078 ]][[0.0468306] [2.1536002]][[0.04735729] [2.1538014 ]][[0.0479647] [2.1540627]][[0.04857768] [2.15434   ]][[0.04922822] [2.1546617 ]][[0.04989901] [2.1550088 ]][[0.05059434] [2.155351  ]][[0.05125461] [2.1556497 ]][[0.05186704] [2.1559181 ]][[0.05249752] [2.1561773 ]][[0.05312037] [2.1564527 ]][[0.05371082] [2.1566846 ]][[0.05425989] [2.156881  ]][[0.05479609] [2.1570735 ]][[0.05527838] [2.15723   ]][[0.05570571] [2.1573486 ]][[0.05621369] [2.1575398 ]][[0.05674135] [2.15774   ]][[0.05735041] [2.1580014 ]][[0.05796528] [2.1582792 ]][[0.0586181] [2.158602 ]][[0.05929144] [2.1589508 ]][[0.05998962] [2.1592946 ]][[0.06065264] [2.1595948 ]][[0.06126766] [2.1598644 ]][[0.06190092] [2.160125  ]][[0.06252661] [2.160402  ]][[0.06311978] [2.1606355 ]][[0.0636714] [2.160833 ]][[0.06421015] [2.1610262 ]][[0.06469472] [2.1611834 ]][[0.06512405] [2.1613026 ]][[0.06563456] [2.161495  ]][[0.06616491] [2.1616967 ]][[0.06677717] [2.1619601 ]][[0.0673953] [2.1622403]][[0.06805163] [2.1625657 ]][[0.06872863] [2.1629176 ]][[0.06943063] [2.1632645 ]][[0.07009729] [2.1635673 ]][[0.07071568] [2.1638393 ]][[0.07135244] [2.164102  ]][[0.0719816] [2.1643815]][[0.07257806] [2.164617  ]][[0.07313273] [2.1648164 ]][[0.07367447] [2.1650116 ]][[0.07416173] [2.1651702 ]][[0.07459345] [2.1652906 ]][[0.07510681] [2.1654847 ]][[0.07564013] [2.1656883 ]][[0.07625583] [2.165954  ]][[0.07687744] [2.1662369 ]][[0.07753746] [2.1665654 ]][[0.07821828] [2.1669207 ]][[0.07892424] [2.167271  ]][[0.07959465] [2.1675766 ]][[0.08021652] [2.1678512 ]][[0.08085687] [2.1681166 ]][[0.08148957] [2.1683989 ]][[0.08208939] [2.1686366 ]][[0.08264718] [2.1688378 ]][[0.08319196] [2.1690347 ]][[0.08368196] [2.169195  ]][[0.08411609] [2.1693163 ]][[0.08463233] [2.1695123 ]][[0.08516863] [2.1697178 ]][[0.08578778] [2.1699862 ]][[0.08641287] [2.1702716 ]][[0.08707658] [2.1706033 ]][[0.0877612] [2.1709619]][[0.08847109] [2.1713154 ]][[0.08914524] [2.1716242 ]][[0.08977058] [2.1719015 ]][[0.09041449] [2.1721692 ]][[0.0910507] [2.172454 ]][[0.09165384] [2.1726942 ]][[0.09221473] [2.1728973 ]][[0.09276252] [2.1730962 ]][[0.09325523] [2.1732578 ]][[0.09369176] [2.1733804 ]][[0.09417117] [2.1735334 ]][[0.09467474] [2.1737008 ]][[0.09526529] [2.1739357 ]][[0.09586503] [2.1741912 ]][[0.09650655] [2.174497  ]][[0.09713422] [2.1747909 ]][[0.09779345] [2.1750865 ]][[0.0984222] [2.1753428]][[0.09900676] [2.1755729 ]][[0.09961448] [2.1757984 ]][[0.10021847] [2.1760457 ]][[0.10079277] [2.1762516 ]][[0.1013278] [2.1764238]][[0.10185258] [2.1765952 ]][[0.10232455] [2.1767318 ]][[0.10274236] [2.1768317 ]][[0.10320546] [2.1769648 ]][[0.10369482] [2.1771142 ]][[0.10427345] [2.1773338 ]][[0.1048629] [2.177576 ]][[0.1054958] [2.1778705]][[0.10611601] [2.1781547 ]][[0.10676914] [2.1784418 ]][[0.1073926] [2.1786902]][[0.10797251] [2.1789134 ]][[0.10857657] [2.1791327 ]][[0.1091776] [2.179375 ]][[0.10974945] [2.1795762 ]][[0.11028237] [2.179744  ]][[0.11077335] [2.1798742 ]][[0.11121488] [2.1799736 ]][[0.11160521] [2.1800396 ]][[0.11204414] [2.1801426 ]][[0.11251219] [2.1802654 ]][[0.11307255] [2.180462  ]][[0.11364598] [2.1806839 ]][[0.11426511] [2.1809607 ]][[0.11487325] [2.181229  ]][[0.1155161] [2.1815023]][[0.11613053] [2.1817384 ]][[0.11670242] [2.18195   ]][[0.11729977] [2.1821594 ]][[0.11789513] [2.182393  ]][[0.11846206] [2.1825864 ]][[0.11899065] [2.182747  ]][[0.11947781] [2.1828704 ]][[0.11990983] [2.182958  ]][[0.12029156] [2.183013  ]][[0.1207233] [2.1831067]][[0.12118533] [2.1832213 ]][[0.12171404] [2.1833794 ]][[0.12225945] [2.1835673 ]][[0.12285405] [2.1838143 ]][[0.12344044] [2.184056  ]][[0.12406435] [2.1843054 ]][[0.12466197] [2.18452   ]][[0.12521884] [2.1847124 ]][[0.12580322] [2.1849046 ]][[0.12638728] [2.1851232 ]][[0.12694424] [2.1853027 ]][[0.12746398] [2.1854508 ]][[0.12794323] [2.1855626 ]][[0.12836808] [2.1856394 ]][[0.1287433] [2.1856847]][[0.12916978] [2.18577   ]][[0.12962756] [2.1858773 ]][[0.1301532] [2.1860294]][[0.13069628] [2.1862123 ]][[0.13128948] [2.1864555 ]][[0.13187495] [2.1866941 ]][[0.13249867] [2.1869411 ]][[0.13309635] [2.1871533 ]][[0.1336534] [2.1873438]][[0.1342385] [2.1875343]][[0.13482358] [2.1877518 ]][[0.13538164] [2.18793   ]][[0.1359025] [2.188077 ]][[0.13638283] [2.1881876 ]][[0.13680862] [2.1882632 ]][[0.13718462] [2.188307  ]][[0.13761237] [2.1883914 ]][[0.13807179] [2.1884983 ]][[0.13859965] [2.1886506 ]][[0.1391452] [2.1888342]][[0.13974129] [2.1890788 ]][[0.14032969] [2.1893187 ]][[0.14095668] [2.189567  ]][[0.14155754] [2.1897805 ]][[0.14211757] [2.189972  ]][[0.14270589] [2.1901636 ]][[0.14329425] [2.1903827 ]][[0.14385547] [2.1905622 ]][[0.14437929] [2.19071   ]][[0.14486235] [2.1908214 ]][[0.14529055] [2.1908972 ]][[0.14566869] [2.190941  ]][[0.14609893] [2.191026  ]][[0.14656107] [2.1911335 ]][[0.1470921] [2.191287 ]][[0.14760393] [2.1914325 ]][[0.14817038] [2.1916435 ]][[0.14873244] [2.1918535 ]][[0.14933637] [2.1920753 ]][[0.1499167] [2.1922646]][[0.15045837] [2.1924343 ]][[0.1510307] [2.1926067]][[0.15160507] [2.1928086 ]][[0.1521539] [2.1929727]][[0.15266667] [2.1931064 ]][[0.15313987] [2.1932049 ]][[0.15355913] [2.1932688 ]][[0.15392916] [2.1933017 ]][[0.15435271] [2.1933773 ]][[0.15480931] [2.1934767 ]][[0.15533613] [2.1936235 ]][[0.15584438] [2.1937628 ]][[0.15640831] [2.1939692 ]][[0.15696843] [2.1941752 ]][[0.15757126] [2.1943939 ]][[0.15815084] [2.19458   ]][[0.15869194] [2.1947472 ]][[0.15926434] [2.1949172 ]][[0.15980038] [2.1950762 ]][[0.1603149] [2.1952014]][[0.16079691] [2.1952999 ]][[0.16124247] [2.1953664 ]][[0.16163678] [2.1954014 ]][[0.1619843] [2.195408 ]][[0.16238818] [2.1954603 ]][[0.16282758] [2.1955392 ]][[0.1633397] [2.195668 ]][[0.16383494] [2.1957912 ]][[0.16438788] [2.195984  ]][[0.16493846] [2.1961777 ]][[0.16553336] [2.1963856 ]][[0.16610605] [2.1965623 ]][[0.16664107] [2.1967206 ]][[0.16720855] [2.196883  ]][[0.1677403] [2.197035 ]][[0.16825117] [2.1971538 ]][[0.16873  ] [2.1972466]][[0.16917278] [2.1973076 ]][[0.16956455] [2.1973374 ]][[0.16990972] [2.197339  ]][[0.17031209] [2.1973872 ]][[0.17075065] [2.1974628 ]][[0.17126277] [2.1975892 ]][[0.17175823] [2.1977103 ]][[0.17231208] [2.197902  ]][[0.17286383] [2.198095  ]][[0.17346042] [2.1983027 ]][[0.17403488] [2.198479  ]][[0.17457162] [2.1986368 ]][[0.17514122] [2.198799  ]][[0.175675] [2.198951]][[0.17618792] [2.1990695 ]][[0.17666872] [2.1991618 ]][[0.17711334] [2.1992223 ]][[0.17750672] [2.1992514 ]][[0.17785327] [2.1992521 ]][[0.17825751] [2.1993    ]][[0.17869823] [2.1993756 ]][[0.17921306] [2.1995025 ]][[0.17971121] [2.199624  ]][[0.18026815] [2.199817  ]][[0.18082303] [2.2000115 ]][[0.1814231] [2.2002206]][[0.1820009] [2.200398 ]][[0.1825408] [2.200557 ]][[0.1831138] [2.2007205]][[0.18365078] [2.2008739 ]][[0.18416677] [2.2009933 ]][[0.18465047] [2.2010863 ]][[0.18509777] [2.201147  ]][[0.18549351] [2.2011762 ]][[0.18584216] [2.2011766 ]][[0.18624885] [2.2012248 ]][[0.1866923] [2.2013009]][[0.18721034] [2.201429  ]][[0.18771158] [2.2015517 ]][[0.18823276] [2.2017047 ]][[0.1887558] [2.2018635]][[0.1893279] [2.202041 ]][[0.18988077] [2.2021897 ]][[0.19039835] [2.202323  ]][[0.19095184] [2.2024634 ]][[0.1914714] [2.202596 ]][[0.19197193] [2.2026966 ]][[0.19244182] [2.2027724 ]][[0.19287677] [2.2028174 ]][[0.19326134] [2.2028322 ]][[0.19359986] [2.2028196 ]][[0.1939981] [2.2028563]][[0.19443443] [2.2029226 ]][[0.1949469] [2.2030423]][[0.19544335] [2.2031577 ]][[0.19596069] [2.2033045 ]][[0.19648063] [2.2034578 ]][[0.19705063] [2.2036307 ]][[0.19760188] [2.2037752 ]][[0.19811812] [2.2039046 ]][[0.198671 ] [2.2040417]][[0.19919014] [2.2041714 ]][[0.19969052] [2.2042692 ]][[0.2001604] [2.2043424]][[0.20059542] [2.2043848 ]][[0.20098001] [2.204397  ]][[0.20131849] [2.2043817 ]][[0.20171732] [2.2044168 ]][[0.20215471] [2.2044816 ]][[0.20266892] [2.2046006 ]][[0.20316719] [2.2047155 ]][[0.20364691] [2.204823  ]][[0.20413336] [2.2049413 ]][[0.20467393] [2.205083  ]][[0.20519894] [2.2051992 ]][[0.20569168] [2.2053032 ]][[0.20622402] [2.2054176 ]][[0.20672482] [2.2055268 ]][[0.2072089] [2.2056062]][[0.20766424] [2.2056625 ]][[0.20808624] [2.2056897 ]][[0.20845905] [2.2056875 ]][[0.20878688] [2.2056594 ]][[0.20917675] [2.205683  ]][[0.20960663] [2.205738  ]][[0.21011493] [2.205849  ]][[0.2106081] [2.2059565]][[0.21108344] [2.2060575 ]][[0.21156633] [2.20617   ]][[0.2121044] [2.206307 ]][[0.21262741] [2.2064188 ]][[0.2131185] [2.2065187]][[0.21364994] [2.2066298 ]][[0.21415009] [2.206736  ]][[0.21463381] [2.2068126 ]][[0.21508895] [2.2068663 ]][[0.21551086] [2.2068906 ]][[0.21588352] [2.2068858 ]][[0.21621117] [2.2068548 ]][[0.21660154] [2.2068765 ]][[0.21703239] [2.2069302 ]][[0.21754238] [2.2070403 ]][[0.21803732] [2.2071474 ]][[0.21851449] [2.207248  ]][[0.21896097] [2.2073228 ]][[0.219467] [2.207426]][[0.21996142] [2.2075076 ]][[0.2204269] [2.20758  ]][[0.22093593] [2.2076666 ]][[0.22141603] [2.207751  ]][[0.22188191] [2.2078075 ]][[0.22232114] [2.207843  ]][[0.22272879] [2.207851  ]][[0.22308858] [2.2078311 ]][[0.22340456] [2.2077863 ]][[0.22378507] [2.207796  ]][[0.22420762] [2.2078393 ]][[0.22471099] [2.2079406 ]][[0.22520019] [2.2080398 ]][[0.22567241] [2.2081335 ]][[0.22611456] [2.2082016 ]][[0.2266174] [2.2082992]][[0.22710922] [2.2083755 ]][[0.22757249] [2.2084434 ]][[0.22808014] [2.2085261 ]][[0.22855915] [2.208607  ]][[0.22902429] [2.2086601 ]][[0.22946297] [2.2086926 ]][[0.22987022] [2.2086973 ]][[0.23022957] [2.2086744 ]][[0.23054512] [2.2086265 ]][[0.2309259] [2.2086341]][[0.23134923] [2.2086756 ]][[0.23185413] [2.208776  ]][[0.23234497] [2.2088745 ]][[0.23281887] [2.2089674 ]][[0.23326266] [2.2090352 ]][[0.23376767] [2.2091324 ]][[0.23426172] [2.2092085 ]][[0.23472713] [2.2092762 ]][[0.23523733] [2.2093587 ]][[0.23571877] [2.2094395 ]][[0.23618634] [2.2094924 ]][[0.23662734] [2.2095244 ]][[0.23703675] [2.2095287 ]][[0.23739801] [2.209505  ]][[0.23771521] [2.2094562 ]][[0.23809814] [2.2094634 ]][[0.23852395] [2.2095048 ]][[0.2390319] [2.209606 ]][[0.23952574] [2.2097049 ]][[0.24000254] [2.2097986 ]][[0.24044906] [2.2098665 ]][[0.24095725] [2.2099645 ]][[0.24145441] [2.210041  ]][[0.24192275] [2.2101092 ]][[0.2424362] [2.2101924]][[0.24292073] [2.210274  ]][[0.24339129] [2.2103274 ]][[0.2438351] [2.2103596]][[0.24424714] [2.2103639 ]][[0.24461071] [2.2103398 ]][[0.24492994] [2.2102904 ]][[0.24531534] [2.2102976 ]][[0.24574392] [2.2103393 ]][[0.24625519] [2.2104414 ]][[0.24675226] [2.2105412 ]][[0.2472322] [2.2106357]][[0.24768163] [2.2107043 ]][[0.24819314] [2.2108033 ]][[0.24869357] [2.2108805 ]][[0.24916498] [2.2109492 ]][[0.2496818] [2.211033 ]][[0.2501695] [2.2111154]][[0.25064313] [2.2111692 ]][[0.25108987] [2.2112017 ]][[0.2515046] [2.211206 ]][[0.25187057] [2.2111816 ]][[0.2521919] [2.2111318]][[0.25257984] [2.211139  ]][[0.25301123] [2.2111812 ]][[0.2534825] [2.2112412]][[0.2539438] [2.2113035]][[0.25439176] [2.211364  ]][[0.2548125] [2.211402 ]][[0.25529897] [2.2114737 ]][[0.25577712] [2.2115264 ]][[0.25622863] [2.211573  ]][[0.2567282] [2.211637 ]][[0.2572005] [2.2117016]][[0.25766054] [2.2117393 ]][[0.25809515] [2.211757  ]][[0.25849906] [2.2117476 ]][[0.25885522] [2.211711  ]][[0.25916764] [2.2116497 ]][[0.25954828] [2.211647  ]][[0.25997368] [2.211681  ]][[0.26044014] [2.2117336 ]][[0.26089737] [2.2117894 ]][[0.2613419] [2.2118442]][[0.2617597] [2.2118766]][[0.26224425] [2.2119439 ]][[0.26272097] [2.2119923 ]][[0.26314428] [2.2120068 ]][[0.26361912] [2.2120423 ]][[0.26406932] [2.2120812 ]][[0.26450968] [2.2120955 ]][[0.26492673] [2.2120922 ]][[0.2653149] [2.2120636]][[0.26565683] [2.2120092 ]][[0.2659564] [2.2119317]][[0.26632616] [2.211915  ]][[0.26674232] [2.2119365 ]][[0.26720107] [2.2119784 ]][[0.26765162] [2.2120245 ]][[0.26809034] [2.2120705 ]][[0.26850304] [2.212095  ]][[0.26898378] [2.2121553 ]][[0.26945734] [2.2121975 ]][[0.26987776] [2.2122061 ]][[0.27035064] [2.2122366 ]][[0.27079922] [2.212271  ]][[0.2712384] [2.212281 ]][[0.2716545] [2.2122736]][[0.27204192] [2.2122412 ]][[0.27238312] [2.212183  ]][[0.27268195] [2.212102  ]][[0.27305174] [2.2120824 ]][[0.27346852] [2.2121017 ]][[0.2739284] [2.2121418]][[0.27438024] [2.2121863 ]][[0.27481222] [2.2122207 ]][[0.27521896] [2.2122345 ]][[0.2756951] [2.2122858]][[0.27616477] [2.2123194 ]][[0.27658167] [2.2123203 ]][[0.27705204] [2.212344  ]][[0.27749854] [2.212372  ]][[0.27793604] [2.2123764 ]][[0.2783508] [2.2123637]][[0.2787371] [2.2123263]][[0.27907723] [2.2122633 ]][[0.27937505] [2.2121775 ]][[0.27974463] [2.2121544 ]][[0.2801618] [2.2121708]][[0.2806226] [2.2122085]][[0.28107554] [2.212251  ]][[0.28150868] [2.2122834 ]][[0.2819166] [2.2122953]][[0.28239453] [2.2123451 ]][[0.28286612] [2.2123775 ]][[0.2832847] [2.2123768]][[0.2837572] [2.2123995]][[0.2842058] [2.2124267]][[0.28464544] [2.21243   ]][[0.28506225] [2.2124162 ]][[0.2854505] [2.2123775]][[0.28579232] [2.2123132 ]][[0.2860916] [2.212226 ]][[0.28646317] [2.212202  ]][[0.28688273] [2.212218  ]][[0.28734627] [2.2122557 ]][[0.28780192] [2.2122982 ]][[0.28823766] [2.2123306 ]][[0.28864804] [2.2123423 ]][[0.28912896] [2.2123923 ]][[0.2896035] [2.2124248]][[0.2900247] [2.2124238]][[0.29050022] [2.2124462 ]][[0.29095167] [2.2124734 ]][[0.29139414] [2.2124765 ]][[0.29181364] [2.2124624 ]][[0.29220438] [2.212423  ]][[0.2925484] [2.212358 ]][[0.2928496] [2.2122698]][[0.2932236] [2.2122455]][[0.2936459] [2.2122614]][[0.29411247] [2.2122993 ]][[0.29457113] [2.212342  ]][[0.29500976] [2.2123747 ]][[0.29542285] [2.2123864 ]][[0.29590696] [2.2124367 ]][[0.29638466] [2.2124693 ]][[0.29680863] [2.2124684 ]][[0.29728732] [2.212491  ]][[0.29774177] [2.2125185 ]][[0.29818717] [2.2125216 ]][[0.29860947] [2.2125072 ]][[0.2990028] [2.2124677]][[0.2993491] [2.212402 ]][[0.2996523] [2.212313 ]][[0.3000288] [2.2122884]][[0.30045393] [2.2123046 ]][[0.30092362] [2.2123427 ]][[0.3013853] [2.212386 ]][[0.30182686] [2.2124188 ]][[0.3022427] [2.2124307]][[0.30273002] [2.2124815 ]][[0.30321088] [2.2125144 ]][[0.30363768] [2.2125134 ]][[0.30411956] [2.2125363 ]][[0.30457702] [2.212564  ]][[0.30502537] [2.212567  ]][[0.30545047] [2.2125528 ]][[0.30584642] [2.2125127 ]][[0.30619502] [2.2124465 ]][[0.30650023] [2.2123566 ]][[0.3068792] [2.2123318]][[0.30730712] [2.212348  ]][[0.3077799] [2.2123866]][[0.30824465] [2.21243   ]][[0.30868912] [2.2124631 ]][[0.3091077] [2.212475 ]][[0.3095982] [2.2125263]][[0.31008226] [2.2125597 ]][[0.31051186] [2.2125587 ]][[0.3109969] [2.2125819]][[0.31145737] [2.2126098 ]][[0.31190866] [2.2126129 ]][[0.31233653] [2.2125983 ]][[0.31273508] [2.212558  ]][[0.31308597] [2.212491  ]][[0.31339318] [2.2124002 ]][[0.31377465] [2.2123752 ]][[0.31420538] [2.2123916 ]][[0.31468126] [2.2124305 ]][[0.315129 ] [2.2124555]][[0.31555834] [2.212472  ]][[0.31596342] [2.2124689 ]][[0.31644255] [2.2125068 ]][[0.31691658] [2.212528  ]][[0.31733716] [2.2125158 ]][[0.3178147] [2.2125292]][[0.3182686] [2.2125485]][[0.3187142] [2.2125435]][[0.3191371] [2.2125216]][[0.31953123] [2.212474  ]][[0.3198781] [2.2124007]][[0.32018164] [2.2123036 ]][[0.32056046] [2.2122736 ]][[0.32095516] [2.2122526 ]][[0.3213992] [2.212258 ]][[0.32181844] [2.2122529 ]][[0.32222226] [2.2122421 ]][[0.32260448] [2.2122142 ]][[0.32306382] [2.2122304 ]][[0.32352033] [2.2122319 ]][[0.32392508] [2.2122016 ]][[0.32438904] [2.2121987 ]][[0.32478368] [2.2121587 ]][[0.3251762] [2.2121   ]][[0.32555145] [2.2120295 ]][[0.32590276] [2.2119381 ]][[0.32621098] [2.211825  ]][[0.32647964] [2.2116919 ]][[0.32682782] [2.2116299 ]][[0.3271953] [2.21158  ]][[0.32761544] [2.2115598 ]][[0.32801324] [2.2115314 ]][[0.32839796] [2.2114997 ]][[0.3287631] [2.2114527]][[0.32920784] [2.211452  ]][[0.3296515] [2.2114382]][[0.33004463] [2.2113938 ]][[0.3304988] [2.2113786]][[0.3308845] [2.2113268]][[0.33126917] [2.2112577 ]][[0.3316375] [2.2111776]][[0.33198267] [2.2110772 ]][[0.33228534] [2.2109556 ]][[0.33254895] [2.2108147 ]][[0.33289328] [2.210746  ]][[0.33325765] [2.2106905 ]][[0.3336756] [2.2106652]][[0.33407155] [2.210632  ]][[0.33445477] [2.210596  ]][[0.3348187] [2.210545 ]][[0.3352631] [2.2105412]][[0.33570677] [2.2105243 ]][[0.33609983] [2.2104769 ]][[0.33655465] [2.2104592 ]][[0.33694074] [2.210405  ]][[0.33732605] [2.2103333 ]][[0.33769506] [2.2102506 ]][[0.33804095] [2.2101479 ]][[0.3383442] [2.2100236]][[0.33860826] [2.20988   ]][[0.33895373] [2.2098098 ]][[0.33931947] [2.2097528 ]][[0.33973926] [2.2097263 ]][[0.340137 ] [2.2096922]][[0.340522 ] [2.2096553]][[0.34088764] [2.2096033 ]][[0.34133437] [2.2095988 ]][[0.34178042] [2.2095811 ]][[0.3421756] [2.209533 ]][[0.34263295] [2.2095146 ]][[0.34302118] [2.2094595 ]][[0.34340867] [2.2093868 ]][[0.3437798] [2.2093031]][[0.34412768] [2.2091992 ]][[0.34443265] [2.2090735 ]][[0.3446939] [2.2089252]][[0.34498903] [2.2088068 ]][[0.34530982] [2.2087064 ]][[0.3456898] [2.2086413]][[0.34605184] [2.2085721 ]][[0.34640488] [2.2085035 ]][[0.34674188] [2.208423  ]][[0.34716368] [2.208393  ]][[0.34758756] [2.2083526 ]][[0.3479627] [2.2082834]][[0.34840277] [2.2082465 ]][[0.34877527] [2.2081742 ]][[0.34914884] [2.2080858 ]][[0.3495076] [2.2079878]][[0.34984443] [2.2078707 ]][[0.3501394] [2.2077332]][[0.35039157] [2.2075737 ]][[0.35067892] [2.2074451 ]][[0.3509931] [2.207336 ]][[0.35136774] [2.207263  ]][[0.35172513] [2.2071867 ]][[0.35207415] [2.2071116 ]][[0.35240766] [2.2070248 ]][[0.35282716] [2.20699   ]][[0.35324928] [2.2069447 ]][[0.3536228] [2.206871 ]][[0.3540621] [2.2068303]][[0.35443375] [2.2067542 ]][[0.3547979] [2.2066514]][[0.35514832] [2.2065403 ]][[0.35547775] [2.2064114 ]][[0.355766 ] [2.2062626]][[0.356012 ] [2.2060928]][[0.3562942] [2.2059553]][[0.3566042] [2.2058377]][[0.35697567] [2.2057576 ]][[0.35733035] [2.205675  ]][[0.35767713] [2.2055938 ]][[0.35800877] [2.2055016 ]][[0.35842738] [2.2054622 ]][[0.35884902] [2.2054129 ]][[0.35922205] [2.2053351 ]][[0.35966164] [2.2052908 ]][[0.36003336] [2.2052114 ]][[0.3603978] [2.2051053]][[0.36074862] [2.204991  ]][[0.3610785] [2.2048588]][[0.3613671] [2.204707 ]][[0.36161333] [2.204534  ]][[0.3618962] [2.2043939]][[0.36220708] [2.204274  ]][[0.36258006] [2.204192  ]][[0.3629362] [2.2041073]][[0.3632845] [2.2040246]][[0.36361763] [2.2039306 ]][[0.3640384] [2.20389  ]][[0.36446232] [2.2038395 ]][[0.36483735] [2.2037604 ]][[0.36527944] [2.203715  ]][[0.36565325] [2.2036343 ]][[0.36601976] [2.2035267 ]][[0.36637262] [2.203411  ]][[0.36670443] [2.2032773 ]][[0.3669947] [2.2031238]][[0.36724234] [2.202949  ]][[0.3675269] [2.2028072]][[0.3678397] [2.202686 ]][[0.36821502] [2.202603  ]][[0.36857343] [2.2025175 ]][[0.36892393] [2.2024338 ]][[0.36925918] [2.202339  ]][[0.3696827] [2.202298 ]][[0.37010938] [2.2022467 ]][[0.3704869] [2.2021666]][[0.3709319] [2.2021208]][[0.37130815] [2.2020392 ]][[0.37167707] [2.2019308 ]][[0.37203225] [2.201814  ]][[0.37236625] [2.2016788 ]][[0.37265843] [2.2015235 ]][[0.3729077] [2.201347 ]][[0.37319413] [2.201204  ]][[0.37350902] [2.2010818 ]][[0.37388685] [2.200998  ]][[0.37424764] [2.2009118 ]][[0.3746005] [2.2008274]][[0.374938 ] [2.2007315]][[0.3753644] [2.20069  ]][[0.37579393] [2.2006383 ]][[0.37617397] [2.2005575 ]][[0.37662196] [2.2005112 ]][[0.37700075] [2.200429  ]][[0.37737215] [2.2003193 ]][[0.3777297] [2.2002013]][[0.37806594] [2.200065  ]][[0.3783601] [2.1999085]][[0.37861103] [2.1997304 ]][[0.37889937] [2.199586  ]][[0.37921637] [2.1994624 ]][[0.37959674] [2.1993778 ]][[0.37995997] [2.1992905 ]][[0.38031518] [2.1992054 ]][[0.38065496] [2.1991088 ]][[0.3810842] [2.1990669]][[0.3815166] [2.1990147]][[0.38189918] [2.1989331 ]][[0.38235018] [2.1988866 ]][[0.3827315] [2.1988037]][[0.38310537] [2.198693  ]][[0.38346535] [2.198574  ]][[0.38380384] [2.1984365 ]][[0.38409996] [2.1982787 ]][[0.38435256] [2.1980991 ]][[0.38464284] [2.1979535 ]][[0.38496196] [2.197829  ]][[0.38534486] [2.1977437 ]][[0.3857105] [2.1976557]][[0.3860681] [2.1975698]][[0.38641015] [2.1974723 ]][[0.38684222] [2.1974301 ]][[0.3872775] [2.1973774]][[0.38766262] [2.1972952 ]][[0.3881166] [2.1972482]][[0.38850045] [2.1971645 ]][[0.38887683] [2.197053  ]][[0.3892392] [2.196933 ]][[0.38957992] [2.1967943 ]][[0.389878] [2.196635]][[0.39013228] [2.1964538 ]][[0.39042446] [2.1963067 ]][[0.3907457] [2.196181 ]][[0.39113113] [2.196095  ]][[0.39145884] [2.195975  ]][[0.39178246] [2.1958604 ]][[0.39209405] [2.1957366 ]][[0.39249954] [2.1956713 ]][[0.3929112] [2.1955976]][[0.39327496] [2.1954963 ]][[0.39371046] [2.1954322 ]][[0.3940775] [2.1953328]][[0.39443892] [2.1952066 ]][[0.39478797] [2.1950734 ]][[0.3951168] [2.1949224]][[0.39540413] [2.194752  ]][[0.39564863] [2.1945603 ]][[0.39593244] [2.194404  ]][[0.3962465] [2.19427  ]][[0.3966261] [2.1941767]][[0.39694846] [2.1940498 ]][[0.39726743] [2.1939287 ]][[0.39757493] [2.1937993 ]][[0.3979776] [2.193729 ]][[0.39838699] [2.193651  ]][[0.3987487] [2.193545 ]][[0.399183 ] [2.1934774]][[0.39954883] [2.1933742 ]][[0.39990935] [2.1932445 ]][[0.40025774] [2.1931078 ]][[0.4005861] [2.1929536]][[0.40087292] [2.1927798 ]][[0.40111688] [2.1925848 ]][[0.4014006] [2.1924255]][[0.40171495] [2.192289  ]][[0.40209547] [2.1921937 ]][[0.4024185] [2.1920648]][[0.40273827] [2.1919417 ]][[0.40304664] [2.1918101 ]][[0.40345088] [2.1917384 ]][[0.403862] [2.191659]][[0.4042252] [2.1915517]][[0.40466157] [2.1914828 ]][[0.4050291] [2.191378 ]][[0.40539134] [2.191247  ]][[0.40574142] [2.1911087 ]][[0.4060714] [2.1909528]][[0.4063596] [2.190777 ]][[0.40660474] [2.1905801 ]][[0.40688992] [2.1904194 ]][[0.40720597] [2.1902816 ]][[0.40758863] [2.1901853 ]][[0.40791348] [2.190055  ]][[0.40823507] [2.1899307 ]][[0.4085452] [2.1897979]][[0.40895185] [2.1897254 ]][[0.40936545] [2.189645  ]][[0.40973082] [2.1895368 ]][[0.41016984] [2.1894672 ]][[0.41053957] [2.1893616 ]][[0.41090402] [2.189229  ]][[0.41125625] [2.1890895 ]][[0.41158825] [2.1889322 ]][[0.41187823] [2.1887548 ]][[0.41212484] [2.1885562 ]][[0.41241178] [2.188394  ]][[0.4127298] [2.1882548]][[0.41311485] [2.1881576 ]][[0.41344172] [2.1880262 ]][[0.4137653] [2.1879008]][[0.41407737] [2.1877668 ]][[0.41448656] [2.1876938 ]][[0.41490275] [2.1876128 ]][[0.41527042] [2.1875036 ]][[0.4157122] [2.1874332]][[0.41608426] [2.1873267 ]][[0.416451 ] [2.1871932]][[0.41680545] [2.1870525 ]][[0.41713953] [2.1868937 ]][[0.41743132] [2.186715  ]][[0.4176795] [2.1865144]][[0.41796824] [2.1863508 ]][[0.41828826] [2.1862104 ]][[0.41867572] [2.1861124 ]][[0.41900462] [2.1859798 ]][[0.41933024] [2.1858532 ]][[0.41964427] [2.185718  ]][[0.42005602] [2.1856444 ]][[0.4204748] [2.1855626]][[0.42084476] [2.1854525 ]][[0.42128932] [2.1853817 ]][[0.4216637] [2.1852741]][[0.42203274] [2.1851394 ]][[0.42238942] [2.1849976 ]][[0.4227256] [2.1848373]][[0.4230192] [2.184657 ]][[0.4232689] [2.184455 ]][[0.42355946] [2.18429   ]][[0.42388147] [2.1841483 ]][[0.42427135] [2.1840494 ]][[0.4246023] [2.1839156]][[0.42492998] [2.183788  ]][[0.42524597] [2.1836517 ]][[0.42566028] [2.1835773 ]][[0.4260817] [2.1834948]][[0.42645398] [2.1833837 ]][[0.4269013] [2.1833122]][[0.427278] [2.183204]][[0.42764935] [2.183068  ]][[0.42800823] [2.182925  ]][[0.42834648] [2.1827636 ]][[0.42864195] [2.1825817 ]][[0.4288932] [2.1823778]][[0.42918557] [2.1822114 ]][[0.42950958] [2.1820686 ]][[0.42990187] [2.181969  ]][[0.43023488] [2.181834  ]][[0.43056458] [2.1817052 ]][[0.4308825] [2.1815677]][[0.4312994] [2.1814928]][[0.4317234] [2.1814098]][[0.43209797] [2.1812978 ]][[0.43254805] [2.1812258 ]][[0.43292707] [2.1811166 ]][[0.43330067] [2.1809795 ]][[0.43366176] [2.1808352 ]][[0.4340021] [2.1806724]][[0.43429938] [2.180489  ]][[0.4345522] [2.1802835]][[0.43484634] [2.1801157 ]][[0.43517235] [2.1799717 ]][[0.43556705] [2.179871  ]][[0.43590212] [2.1797352 ]][[0.43623385] [2.1796055 ]][[0.43655375] [2.179467  ]][[0.43692777] [2.1793542 ]][[0.4373135] [2.179237 ]][[0.43765357] [2.1790936 ]][[0.43807334] [2.1789937 ]][[0.43842492] [2.178859  ]][[0.43877402] [2.1786988 ]][[0.4391132] [2.1785333]][[0.4394339] [2.1783512]][[0.43971342] [2.1781502 ]][[0.43995017] [2.1779284 ]][[0.44023028] [2.177746  ]][[0.44054407] [2.1775892 ]][[0.44092846] [2.1774771 ]][[0.44125408] [2.1773305 ]][[0.4415775] [2.177191 ]][[0.44189006] [2.1770434 ]][[0.44225806] [2.1769228 ]][[0.4426387] [2.176798 ]][[0.44297412] [2.176648  ]][[0.44339046] [2.176542  ]][[0.44373876] [2.1764016 ]][[0.44408512] [2.176236  ]][[0.444422 ] [2.1760654]][[0.44474074] [2.1758785 ]][[0.44501844] [2.1756728 ]][[0.44525343] [2.1754463 ]][[0.44553244] [2.17526   ]][[0.4458456] [2.1750996]][[0.4462301] [2.1749847]][[0.4465557] [2.174835 ]][[0.4468793] [2.1746929]][[0.44719216] [2.1745427 ]][[0.447561 ] [2.1744196]][[0.4479427] [2.1742928]][[0.44827905] [2.1741405 ]][[0.44869697] [2.174033  ]][[0.44904652] [2.1738906 ]][[0.44939423] [2.1737227 ]][[0.44973248] [2.1735501 ]][[0.45005256] [2.173361  ]][[0.4503314] [2.173153 ]][[0.4505673] [2.172924 ]][[0.45084757] [2.1727357 ]][[0.4511623] [2.1725736]][[0.45154887] [2.1724572 ]][[0.4518762] [2.1723058]][[0.45220155] [2.172162  ]][[0.45251614] [2.1720104 ]][[0.4528871] [2.171886 ]][[0.45327103] [2.171758  ]][[0.45360935] [2.171604  ]][[0.4540298] [2.1714952]][[0.45438144] [2.1713514 ]][[0.45473126] [2.171182  ]][[0.45507157] [2.1710076 ]][[0.4553936] [2.1708167]][[0.45567414] [2.1706066 ]][[0.4559115] [2.1703758]][[0.45619348] [2.1701858 ]][[0.45651016] [2.1700222 ]][[0.45689917] [2.169905  ]][[0.45722854] [2.1697524 ]][[0.45755595] [2.1696074 ]][[0.4578725] [2.1694543]][[0.4582458] [2.169329 ]][[0.4586322] [2.1691997]][[0.45897266] [2.1690445 ]][[0.4593958] [2.1689348]][[0.45974967] [2.1687899 ]][[0.46010172] [2.168619  ]][[0.4604442] [2.1684432]][[0.4607683] [2.1682508]][[0.46105063] [2.168039  ]][[0.4612895] [2.1678064]][[0.46153298] [2.1675832 ]][[0.46181542] [2.1673899 ]][[0.4621743] [2.167246 ]][[0.4624764] [2.1670692]][[0.46277946] [2.1669023 ]][[0.46307424] [2.1667292 ]][[0.46342853] [2.166586  ]][[0.46379814] [2.1664405 ]][[0.46412343] [2.1662703 ]][[0.4645337] [2.1661475]][[0.4648758] [2.16599  ]][[0.46521744] [2.165808  ]][[0.46555075] [2.1656218 ]][[0.46586668] [2.1654196 ]][[0.46614158] [2.1651988 ]][[0.46637365] [2.1649575 ]][[0.46661124] [2.1647267 ]][[0.4668888] [2.1645265]][[0.46724394] [2.1643767 ]][[0.46754256] [2.164194  ]][[0.46784267] [2.164022  ]][[0.46813494] [2.163844  ]][[0.46848756] [2.1636965 ]][[0.46885598] [2.163547  ]][[0.46918017] [2.163373  ]][[0.46959022] [2.1632469 ]][[0.46993196] [2.1630862 ]][[0.4702735] [2.1629004]][[0.47060686] [2.1627111 ]][[0.47092295] [2.1625059 ]][[0.47119793] [2.162282  ]][[0.47142997] [2.1620376 ]][[0.4716677] [2.1618037]][[0.47194582] [2.1616008 ]][[0.47230217] [2.161449  ]][[0.47260174] [2.161264  ]][[0.4729029] [2.1610897]][[0.47319627] [2.1609097 ]][[0.47355047] [2.1607602 ]][[0.47392064] [2.160609  ]][[0.47424635] [2.160433  ]][[0.47465852] [2.1603055 ]][[0.475002 ] [2.1601431]][[0.4753453] [2.1599555]][[0.47568047] [2.1597643 ]][[0.47599825] [2.1595569 ]][[0.47627473] [2.1593308 ]][[0.476508] [2.159084]][[0.47674704] [2.158848  ]][[0.47702673] [2.1586432 ]][[0.4773852] [2.15849  ]][[0.47768652] [2.1583033 ]][[0.47798946] [2.1581273 ]][[0.4782846] [2.1579456]][[0.47864094] [2.157795  ]][[0.4790134] [2.1576424]][[0.47934112] [2.1574647 ]][[0.47975588] [2.157336  ]][[0.4801015] [2.1571722]][[0.48044696] [2.1569831 ]][[0.4807842] [2.1567903]][[0.481104 ] [2.1565812]][[0.4813822] [2.1563532]][[0.4816169] [2.1561043]][[0.48185745] [2.1558664 ]][[0.4821389] [2.15566  ]][[0.48249966] [2.1555052 ]][[0.4828029] [2.1553168]][[0.48310778] [2.1551394 ]][[0.4834048] [2.1549563]][[0.48376343] [2.1548042 ]][[0.48413825] [2.1546504 ]][[0.48446807] [2.1544714 ]][[0.4848455] [2.154314 ]][[0.48515728] [2.1541243 ]][[0.48547253] [2.1539114 ]][[0.48578274] [2.1536968 ]][[0.4860783] [2.153468 ]][[0.4863346] [2.1532218]][[0.4865495] [2.1529562]][[0.4867724] [2.152703 ]][[0.4870384] [2.152483 ]][[0.487386 ] [2.1523163]][[0.48767722] [2.1521168 ]][[0.4879715] [2.1519294]][[0.48825914] [2.151737  ]][[0.48860994] [2.1515768 ]][[0.4889781] [2.1514153]][[0.48930183] [2.1512291 ]][[0.48967433] [2.1510653 ]][[0.4899815] [2.1508694]][[0.49029285] [2.1506505 ]][[0.49059972] [2.1504304 ]][[0.49089238] [2.1501963 ]][[0.491146 ] [2.1499453]][[0.49135837] [2.149675  ]][[0.49157917] [2.1494172 ]][[0.49184376] [2.149193  ]][[0.4921908] [2.149023 ]][[0.4924814] [2.1488202]][[0.49277535] [2.1486294 ]][[0.49306282] [2.148434  ]][[0.4934141] [2.148271 ]][[0.49378306] [2.148107  ]][[0.49410746] [2.1479182 ]][[0.4944811] [2.1477523]][[0.4947891] [2.1475537]][[0.49510142] [2.1473322 ]][[0.49540937] [2.1471095 ]][[0.4957031] [2.1468728]][[0.4959576] [2.146619 ]][[0.4961707] [2.1463459]][[0.49639234] [2.1460855 ]][[0.49665812] [2.145859  ]][[0.49700698] [2.1456873 ]][[0.49729908] [2.1454825 ]][[0.49759457] [2.1452901 ]][[0.4978836] [2.1450927]][[0.4982369] [2.1449282]][[0.49860802] [2.1447628 ]][[0.49893433] [2.1445723 ]][[0.49931023] [2.1444046 ]][[0.49962008] [2.1442044 ]][[0.49993432] [2.143981  ]][[0.50024414] [2.1437564 ]][[0.50053966] [2.1435177 ]][[0.5007957] [2.1432617]][[0.5010101] [2.142986 ]][[0.50123316] [2.1427236 ]][[0.5015006] [2.1424952]][[0.50185174] [2.1423218 ]][[0.5021457] [2.142115 ]][[0.50244313] [2.141921  ]][[0.502734] [2.141722]][[0.50308967] [2.141556  ]][[0.5034632] [2.1413891]][[0.50379163] [2.141197  ]][[0.50417 ] [2.141028]][[0.5044819] [2.140826 ]][[0.50479823] [2.1406007 ]][[0.5051101] [2.1403744]][[0.5054076] [2.1401336]][[0.50566536] [2.1398757 ]][[0.50588113] [2.139598  ]][[0.5061056] [2.1393332]][[0.50637484] [2.1391032 ]][[0.5067283] [2.1389284]][[0.5070242] [2.13872  ]][[0.5073236] [2.1385243]][[0.50761646] [2.1383235 ]][[0.50797445] [2.1381562 ]][[0.5083505] [2.1379879]][[0.5086811] [2.137794 ]][[0.509062 ] [2.1376238]][[0.509376 ] [2.1374202]][[0.5096944] [2.137193 ]][[0.51000834] [2.1369648 ]][[0.5103078] [2.136722 ]][[0.5105673] [2.136462 ]][[0.51078457] [2.136182  ]][[0.5110105] [2.1359153]][[0.51128155] [2.1356833 ]][[0.51163733] [2.1355073 ]][[0.51193523] [2.1352973 ]][[0.5121813] [2.1350613]][[0.51242626] [2.134824  ]][[0.5127418] [2.134624 ]][[0.51308 ] [2.134426]][[0.5133765] [2.1342053]][[0.5137272] [2.1340108]][[0.51401377] [2.1337848 ]][[0.51430774] [2.1335373 ]][[0.5145999] [2.1332905]][[0.5148799] [2.133031 ]][[0.51512176] [2.132755  ]][[0.515323 ] [2.1324606]][[0.51553476] [2.1321807 ]][[0.51579344] [2.1319368 ]][[0.5161389] [2.1317503]][[0.51642734] [2.1315305 ]][[0.51666474] [2.1312854 ]][[0.516902 ] [2.1310399]][[0.5172113] [2.1308324]][[0.5175442] [2.1306276]][[0.5178359] [2.1304004]][[0.5181829] [2.1302   ]][[0.5184659] [2.1299684]][[0.51875687] [2.1297154 ]][[0.5190465] [2.1294637]][[0.5193243] [2.129199 ]][[0.51956415] [2.1289184 ]][[0.51976347] [2.1286194 ]][[0.51997375] [2.1283352 ]][[0.52023154] [2.1280878 ]][[0.5205769] [2.1278982]][[0.5208651] [2.1276753]][[0.52110213] [2.1274269 ]][[0.5213393] [2.1271782]][[0.52164906] [2.126968  ]][[0.5219827] [2.1267605]][[0.5222751] [2.1265304]][[0.5226232] [2.1263275]][[0.522907 ] [2.1260934]][[0.523199 ] [2.1258378]][[0.5234897] [2.1255834]][[0.5237686] [2.1253161]][[0.52400935] [2.125033  ]][[0.5242094] [2.124731 ]][[0.5244205] [2.1244442]][[0.5246795] [2.1241944]][[0.52500147] [2.1239846 ]][[0.52526844] [2.123743  ]][[0.52548623] [2.1234775 ]][[0.5257062] [2.123213 ]][[0.52600116] [2.122989  ]][[0.5263219] [2.1227689]][[0.5266025] [2.1225271]][[0.52694064] [2.1223137 ]][[0.5272153] [2.1220696]][[0.52749926] [2.1218047 ]][[0.5277829] [2.1215417]][[0.52805555] [2.1212666 ]][[0.5282906] [2.1209757]][[0.5284854] [2.1206667]][[0.528692 ] [2.1203735]][[0.5289474] [2.1201177]][[0.5292668] [2.1199028]][[0.52953124] [2.1196563 ]][[0.5297466] [2.1193857]][[0.52996457] [2.1191168 ]][[0.53025836] [2.1188886 ]][[0.53057843] [2.1186647 ]][[0.5308584] [2.1184192]][[0.5311965] [2.1182024]][[0.53147095] [2.117955  ]][[0.531755 ] [2.1176867]][[0.53203887] [2.1174204 ]][[0.53231186] [2.117142  ]][[0.5325472] [2.116848 ]][[0.5327421] [2.1165357]][[0.532949 ] [2.1162393]][[0.5332051] [2.1159809]][[0.5335257] [2.1157637]][[0.5337911] [2.1155145]][[0.5340072] [2.1152413]][[0.53422594] [2.1149697 ]][[0.53452116] [2.1147392 ]][[0.53484285] [2.1145132 ]][[0.53512424] [2.1142654 ]][[0.53546417] [2.1140466 ]][[0.5357401] [2.113797 ]][[0.53602564] [2.1135263 ]][[0.53631115] [2.1132576 ]][[0.5365857] [2.1129768]][[0.5368223] [2.1126802]][[0.5370183] [2.1123652]][[0.5372264] [2.1120663]][[0.53748405] [2.1118057 ]][[0.53780663] [2.1115866 ]][[0.5380737] [2.1113355]][[0.5382911] [2.1110601]][[0.5385112] [2.1107864]][[0.5388083] [2.1105542]][[0.53913206] [2.1103263 ]][[0.53941524] [2.1100764 ]][[0.5397574] [2.109856 ]][[0.54003507] [2.1096041 ]][[0.5403225] [2.1093314]][[0.54060984] [2.1090605 ]][[0.54088616] [2.1087775 ]][[0.54112434] [2.1084785 ]][[0.5413216] [2.1081612]][[0.541531 ] [2.1078598]][[0.54179037] [2.107597  ]][[0.5421151] [2.1073763]][[0.5423839] [2.1071231]][[0.5426027] [2.1068456]][[0.54282427] [2.1065698 ]][[0.5431233] [2.1063356]][[0.5434492] [2.106106 ]][[0.54373425] [2.1058543 ]][[0.54407865] [2.105632  ]][[0.5443582] [2.1053784]][[0.5446475] [2.1051035]][[0.5449368] [2.1048307]][[0.54521495] [2.1045454 ]][[0.5454547] [2.1042442]][[0.5456532] [2.1039243]][[0.54586405] [2.1036205 ]][[0.5461251] [2.103356 ]][[0.546452 ] [2.1031334]][[0.5467226] [2.1028783]][[0.5469429] [2.1025987]][[0.54716593] [2.1023207 ]][[0.54746693] [2.1020846 ]][[0.547795 ] [2.1018531]][[0.54808193] [2.1015995 ]][[0.5484286] [2.1013753]][[0.54871  ] [2.1011198]][[0.5490012] [2.1008427]][[0.5492924] [2.1005678]][[0.54957235] [2.1002803 ]][[0.5498137] [2.0999768]][[0.55001354] [2.0996544 ]][[0.55022573] [2.0993485 ]][[0.55048853] [2.0990818 ]][[0.55081755] [2.0988576 ]][[0.55108994] [2.0986006 ]][[0.5513117] [2.0983188]][[0.55153614] [2.0980387 ]][[0.5518391] [2.097801 ]][[0.5521693] [2.0975678]][[0.5524581] [2.0973122]][[0.5528071] [2.0970864]][[0.55309033] [2.096829  ]][[0.55338347] [2.0965497 ]][[0.55367655] [2.0962727 ]][[0.55395836] [2.095983  ]][[0.55420125] [2.0956771 ]][[0.5544024] [2.0953522]][[0.55461603] [2.095044  ]][[0.55488056] [2.094775  ]][[0.5552117] [2.094549 ]][[0.5554859] [2.0942898]][[0.55570906] [2.0940058 ]][[0.555935 ] [2.0937233]][[0.55624  ] [2.0934837]][[0.5565724] [2.0932486]][[0.55686307] [2.0929909 ]][[0.5572143] [2.0927634]][[0.5574994] [2.0925038]][[0.55779445] [2.0922225 ]][[0.55808944] [2.0919433 ]][[0.5583731] [2.0916514]][[0.5586176] [2.0913432]][[0.55882007] [2.0910158 ]][[0.55903506] [2.0907052 ]][[0.5593013] [2.0904343]][[0.5596347] [2.0902066]][[0.55991066] [2.0899456 ]][[0.5601353] [2.0896595]][[0.56036276] [2.0893748 ]][[0.5606697] [2.0891333]][[0.5610042] [2.0888965]][[0.5612968] [2.0886369]][[0.56165034] [2.0884078 ]][[0.5619373] [2.0881462]][[0.5622342] [2.0878627]][[0.5625311] [2.0875814]][[0.5628166] [2.0872872]][[0.56306267] [2.0869765 ]][[0.56326646] [2.0866466 ]][[0.5634828] [2.0863335]][[0.5637508] [2.0860605]][[0.5640863] [2.0858312]][[0.564364 ] [2.0855682]][[0.5645901] [2.0852797]][[0.564819] [2.084993]][[0.5651279] [2.0847497]][[0.56542623] [2.0844867 ]][[0.5656861] [2.0842032]][[0.5660108] [2.0839527]][[0.56627154] [2.0836713 ]][[0.56654525] [2.0833697 ]][[0.5668214] [2.083072 ]][[0.5670883] [2.0827627]][[0.56731755] [2.0824382 ]][[0.5675061] [2.0820954]][[0.5677089] [2.0817704]][[0.56796515] [2.081487  ]][[0.5682907] [2.0812483]][[0.56855935] [2.0809765 ]][[0.5687771] [2.0806797]][[0.56899863] [2.0803852 ]][[0.5693016] [2.080135 ]][[0.5695947] [2.0798657]][[0.56984985] [2.079576  ]][[0.5701709] [2.07932  ]][[0.57042813] [2.0790334 ]][[0.5706989] [2.0787265]][[0.5709726] [2.0784237]][[0.57123744] [2.0781097 ]][[0.5714648] [2.0777805]][[0.57165146] [2.077433  ]][[0.57185286] [2.077104  ]][[0.57210827] [2.0768168 ]][[0.5724337] [2.0765748]][[0.57270205] [2.0762997 ]][[0.57291937] [2.0759995 ]][[0.57314074] [2.0757017 ]][[0.57344425] [2.0754488 ]][[0.5737379] [2.0751765]][[0.5739935] [2.074884 ]][[0.57431555] [2.0746253 ]][[0.57457346] [2.0743358 ]][[0.57484514] [2.074026  ]][[0.57506496] [2.073686  ]][[0.5752814] [2.0733378]][[0.575465 ] [2.0729778]][[0.57561225] [2.0726023 ]][[0.57577837] [2.0722477 ]][[0.57600254] [2.0719376 ]][[0.57630044] [2.071675  ]][[0.57654387] [2.0713809 ]][[0.5767386] [2.0710633]][[0.57693976] [2.0707498 ]][[0.57722574] [2.0704827 ]][[0.5775038] [2.0701973]][[0.57774526] [2.0698926 ]][[0.57805514] [2.069623  ]][[0.57830197] [2.0693233 ]][[0.57856387] [2.069004  ]][[0.57877475] [2.068655  ]][[0.57898325] [2.0682986 ]][[0.5791597] [2.0679305]][[0.5793003] [2.0675473]][[0.5794607] [2.0671859]][[0.57968014] [2.0668695 ]][[0.5799745] [2.0666015]][[0.5802145] [2.066302 ]][[0.580406 ] [2.0659795]][[0.58060443] [2.065661  ]][[0.5808886] [2.0653896]][[0.5811652] [2.0651002]][[0.5814053] [2.0647914]][[0.5817145] [2.0645182]][[0.5819605] [2.064215 ]][[0.5822219] [2.0638921]][[0.5824322] [2.0635393]][[0.5826403] [2.0631793]][[0.5828163] [2.0628076]][[0.58295643] [2.0624208 ]][[0.5831166] [2.062056 ]][[0.58333635] [2.0617368 ]][[0.5836316] [2.0614665]][[0.5838722] [2.0611644]][[0.58406407] [2.060839  ]][[0.584263 ] [2.0605178]][[0.5845484] [2.060244 ]][[0.5848262] [2.0599523]][[0.5850673] [2.059641 ]][[0.585378 ] [2.0593653]][[0.5856251] [2.0590594]][[0.58588785] [2.058734  ]][[0.58609915] [2.0583782 ]][[0.58630824] [2.0580153 ]][[0.5864851] [2.0576408]][[0.5866258] [2.057251 ]][[0.58678675] [2.0568833 ]][[0.5870077] [2.0565617]][[0.58723956] [2.0562458 ]][[0.587423 ] [2.0559025]][[0.5875632] [2.0555394]][[0.5877158] [2.0551841]][[0.5879602] [2.05488  ]][[0.58820117] [2.0545602 ]][[0.58840907] [2.0542235 ]][[0.5886906] [2.0539253]][[0.5889112] [2.0535986]][[0.5891503] [2.053254 ]][[0.58934015] [2.0528805 ]][[0.5895301] [2.0525014]][[0.5896896] [2.0521119]][[0.5898146] [2.0517082]][[0.5899616] [2.051328 ]][[0.5901705] [2.0509949]][[0.59039176] [2.0506687 ]][[0.5905655] [2.0503156]][[0.5906968] [2.0499434]][[0.5908416] [2.0495799]][[0.59107965] [2.0492682 ]][[0.59131503] [2.0489416 ]][[0.59151787] [2.0485983 ]][[0.5917955] [2.048294 ]][[0.59201235] [2.0479615 ]][[0.5922483] [2.0476112]][[0.5924352] [2.0472324]][[0.5926226] [2.046848 ]][[0.5927797] [2.0464535]][[0.5929024] [2.046045 ]][[0.5930476] [2.0456603]][[0.5932554] [2.0453231]][[0.59347594] [2.0449932 ]][[0.5936488] [2.0446362]][[0.59377915] [2.0442603 ]][[0.5939232] [2.043893 ]][[0.5941614] [2.0435781]][[0.59439707] [2.0432482 ]][[0.5946001] [2.0429015]][[0.5948785] [2.0425942]][[0.5950959] [2.0422587]][[0.59533256] [2.0419054 ]][[0.5955199] [2.0415232]][[0.59570783] [2.0411355 ]][[0.59586537] [2.0407379 ]][[0.59598833] [2.040326  ]][[0.59613395] [2.0399382 ]][[0.5963427] [2.0395985]][[0.59656423] [2.0392659 ]][[0.59673786] [2.038906  ]][[0.59686875] [2.0385273 ]][[0.5970135] [2.0381572]][[0.59725296] [2.03784   ]][[0.59748995] [2.0375075 ]][[0.5976941] [2.0371583]][[0.5979742] [2.0368488]][[0.5981928] [2.0365107]][[0.59843093] [2.0361547 ]][[0.5986194] [2.03577  ]][[0.59880847] [2.0353794 ]][[0.59896696] [2.0349786 ]][[0.59909064] [2.0345638 ]][[0.59923714] [2.034173  ]][[0.5994472] [2.033831 ]][[0.5996702] [2.033496 ]][[0.59984493] [2.0331335 ]][[0.5999766] [2.0327518]][[0.6001223] [2.0323792]][[0.6003633] [2.0320597]][[0.60060185] [2.031725  ]][[0.60080737] [2.0313733 ]][[0.6010893] [2.0310616]][[0.60130936] [2.0307212 ]][[0.6015491] [2.0303626]][[0.6017388] [2.029975 ]][[0.6019291] [2.0295818]][[0.6020887] [2.0291784]][[0.6022132] [2.0287607]][[0.60236067] [2.0283673 ]][[0.6025721] [2.0280228]][[0.60279655] [2.0276854 ]][[0.60297245] [2.0273206 ]][[0.603105 ] [2.0269363]][[0.60325164] [2.026561  ]][[0.6034943] [2.0262392]][[0.60373443] [2.025902  ]][[0.60394126] [2.025548  ]][[0.60422504] [2.025234  ]][[0.6044466] [2.0248911]][[0.60468787] [2.0245302 ]][[0.60487884] [2.02414   ]][[0.6050704] [2.0237439]][[0.605231 ] [2.0233376]][[0.60535634] [2.022917  ]][[0.6055048] [2.0225208]][[0.60571766] [2.022174  ]][[0.6059436] [2.0218341]][[0.6061207] [2.0214667]][[0.60625416] [2.0210798 ]][[0.60640174] [2.020702  ]][[0.606646 ] [2.0203779]][[0.6068877] [2.0200384]][[0.6070959] [2.0196817]][[0.6073816] [2.0193655]][[0.60760456] [2.0190203 ]][[0.60784745] [2.0186567 ]][[0.6080397] [2.0182638]][[0.60823256] [2.0178652 ]][[0.6083942] [2.017456 ]][[0.6085204] [2.0170326]][[0.6086698] [2.0166337]][[0.6088841] [2.0162845]][[0.60911155] [2.0159423 ]][[0.60928977] [2.0155723 ]][[0.6094241] [2.0151827]][[0.6095727] [2.0148022]][[0.6098186] [2.0144758]][[0.6100619] [2.014134 ]][[0.6102715] [2.0137749]][[0.61055905] [2.0134566 ]][[0.6107835] [2.013109 ]][[0.611028] [2.012743]][[0.6112215] [2.0123472]][[0.6114156] [2.0119457]][[0.61157835] [2.0115337 ]][[0.61170536] [2.0111074 ]][[0.6118558] [2.0107057]][[0.61207145] [2.0103538 ]][[0.6123004] [2.0100095]][[0.6124798] [2.009637 ]][[0.612615 ] [2.0092447]][[0.61276454] [2.0088615 ]][[0.613012] [2.008533]][[0.61325693] [2.0081887 ]][[0.61346793] [2.0078273 ]][[0.6137574] [2.0075068]][[0.61398333] [2.0071568 ]][[0.61422944] [2.0067883 ]][[0.6144242] [2.0063899]][[0.6146196] [2.0059857]][[0.6147834] [2.005571 ]][[0.61491126] [2.0051415 ]][[0.61506265] [2.0047371 ]][[0.61527973] [2.0043828 ]][[0.61551017] [2.0040362 ]][[0.61569077] [2.0036612 ]][[0.61582685] [2.003266  ]][[0.61597735] [2.0028803 ]][[0.61622643] [2.0025496 ]][[0.61647296] [2.002203  ]][[0.61668533] [2.001839  ]][[0.6169767] [2.0015163]][[0.61720407] [2.001164  ]][[0.6174518] [2.000793 ]][[0.6176478] [2.0003917]][[0.6178445] [1.9999847]][[0.6180094] [1.9995672]][[0.6181381] [1.9991349]][[0.6182905] [1.9987277]][[0.618509] [1.998371]][[0.618741 ] [1.9980218]][[0.6189227] [1.9976443]][[0.6190597] [1.9972466]][[0.6192112] [1.9968582]][[0.6194619] [1.9965252]][[0.61971  ] [1.9961762]][[0.6199238] [1.9958098]][[0.620217] [1.995485]][[0.6204459] [1.9951302]][[0.62069523] [1.9947566 ]][[0.6208925] [1.9943527]][[0.6210905] [1.993943 ]][[0.6212564] [1.9935225]][[0.62138593] [1.9930873 ]][[0.62153935] [1.9926773 ]][[0.62175924] [1.9923183 ]][[0.6219927] [1.9919668]][[0.62217563] [1.9915867 ]][[0.6223135] [1.9911863]][[0.62246597] [1.9907953 ]][[0.62271833] [1.9904599 ]][[0.6229681] [1.9901086]][[0.6231832] [1.9897397]][[0.6234783] [1.9894125]][[0.62370867] [1.9890554 ]][[0.6239596] [1.9886793]][[0.6241582] [1.9882727]][[0.62435746] [1.9878602 ]][[0.6245245] [1.9874369]][[0.6246548] [1.9869988]][[0.6248092] [1.9865861]][[0.6250305] [1.9862247]][[0.6252655] [1.9858708]][[0.6254496] [1.9854882]][[0.62558836] [1.985085  ]][[0.62574184] [1.9846913 ]][[0.6259958] [1.9843537]][[0.62624717] [1.984     ]][[0.62646365] [1.9836285 ]][[0.62676066] [1.9832993 ]][[0.6269925] [1.9829397]][[0.62724507] [1.9825611 ]][[0.6274449] [1.9821517]][[0.62764543] [1.9817364 ]][[0.6278135] [1.9813102]][[0.6279447] [1.9808692]][[0.6281001] [1.9804536]][[0.62832284] [1.9800897 ]][[0.6285593] [1.9797335]][[0.6287446] [1.9793482]][[0.62888426] [1.9789424 ]][[0.6290387] [1.978546 ]][[0.6292943] [1.9782062]][[0.62954724] [1.9778501 ]][[0.62976515] [1.9774761 ]][[0.6300641] [1.9771446]][[0.6302974] [1.9767827]][[0.6305516] [1.9764016]][[0.6307527] [1.9759895]][[0.63095444] [1.9755714 ]][[0.6311236] [1.9751424]][[0.6312556] [1.9746983]][[0.63141197] [1.97428   ]][[0.63163614] [1.9739137 ]][[0.6318741] [1.9735551]][[0.6320606] [1.9731672]][[0.63220114] [1.9727587 ]][[0.6323566] [1.9723597]][[0.6326138] [1.9720175]][[0.6328683] [1.9716591]][[0.6330876] [1.9712826]][[0.6333884] [1.9709489]][[0.6336232] [1.9705845]][[0.63387895] [1.9702008 ]][[0.63408136] [1.9697859 ]][[0.63428444] [1.9693651 ]][[0.63445467] [1.9689332 ]][[0.6345875] [1.9684862]][[0.6347449] [1.9680651]][[0.6349705] [1.9676963]][[0.63521  ] [1.9673353]][[0.6353976] [1.9669449]][[0.63553905] [1.9665337 ]][[0.63569546] [1.966132  ]][[0.6359543] [1.9657876]][[0.63621044] [1.9654269 ]][[0.6364311] [1.965048 ]][[0.63673383] [1.964712  ]][[0.6369701] [1.9643452]][[0.6372275] [1.963959 ]][[0.63743114] [1.9635414 ]][[0.63763547] [1.9631177 ]][[0.6378068] [1.962683 ]][[0.63794047] [1.962233  ]][[0.63809884] [1.961809  ]][[0.6383258] [1.9614378]][[0.6385668] [1.9610745]][[0.6387556] [1.9606814]][[0.63889796] [1.9602674 ]][[0.6390554] [1.9598631]][[0.63931584] [1.9595164 ]][[0.6395736] [1.9591532]][[0.6397956] [1.9587717]][[0.6401002] [1.9584336]][[0.64033794] [1.9580644 ]][[0.6405969] [1.9576756]][[0.6408019] [1.9572551]][[0.64100754] [1.9568287 ]][[0.6411799] [1.9563911]][[0.64131445] [1.9559381 ]][[0.64147377] [1.9555115 ]][[0.6417022] [1.9551377]][[0.64194465] [1.9547719 ]][[0.64213467] [1.9543762 ]][[0.6422779] [1.9539595]][[0.64243627] [1.9535525 ]][[0.64269835] [1.9532036 ]][[0.6429577] [1.952838 ]][[0.6431811] [1.952454 ]][[0.6434876] [1.9521136]][[0.6437268] [1.9517419]][[0.6439874] [1.9513506]][[0.64419365] [1.9509274 ]][[0.64440054] [1.9504981 ]][[0.644574 ] [1.9500576]][[0.64470935] [1.9496017 ]][[0.6448697] [1.9491721]][[0.6450995] [1.948796 ]][[0.64534354] [1.9484278 ]][[0.64553475] [1.9480295 ]][[0.6456788] [1.9476101]][[0.6458382] [1.9472005]][[0.6461019] [1.9468493]][[0.64636284] [1.9464813 ]][[0.64658767] [1.9460949 ]][[0.64689606] [1.9457523 ]][[0.6471368] [1.9453782]][[0.647399 ] [1.9449842]][[0.6476065] [1.9445583]][[0.6478147] [1.9441262]][[0.6479892] [1.9436829]][[0.6481254] [1.9432241]][[0.64828676] [1.9427918 ]][[0.648518 ] [1.9424132]][[0.64876354] [1.9420426 ]][[0.64895594] [1.9416418 ]][[0.6491009] [1.9412197]][[0.64926124] [1.9408073 ]][[0.6495266] [1.9404538]][[0.6497892] [1.9400834]][[0.6500154] [1.9396944]][[0.6503257] [1.9393495]][[0.65056795] [1.938973  ]][[0.65083176] [1.9385765 ]][[0.65104055] [1.9381478 ]][[0.65125  ] [1.9377129]][[0.6514256] [1.9372667]][[0.65156263] [1.9368049 ]][[0.65172493] [1.9363698 ]][[0.65195763] [1.9359888 ]][[0.65220463] [1.9356158 ]][[0.6523982] [1.9352124]][[0.6525441] [1.9347875]][[0.65270543] [1.9343725 ]][[0.6529724] [1.9340167]][[0.6532366] [1.9336439]][[0.6534642] [1.9332525]][[0.6537764] [1.9329054]][[0.65402013] [1.9325265 ]][[0.65428555] [1.9321274 ]][[0.6544956] [1.9316959]][[0.65470636] [1.9312583 ]][[0.654883 ] [1.9308093]][[0.6550209] [1.9303443]][[0.6551842] [1.9299065]][[0.65541834] [1.929523  ]][[0.6556669] [1.9291476]][[0.6558616] [1.9287416]][[0.65600836] [1.928314  ]][[0.65617067] [1.9278963 ]][[0.65643924] [1.9275382 ]][[0.6567051] [1.927163 ]][[0.6569341] [1.926769 ]][[0.6572482] [1.9264197]][[0.6574934] [1.9260384]][[0.6577605] [1.9256368]][[0.65797186] [1.9252025 ]][[0.6581839] [1.924762 ]][[0.6583616] [1.92431  ]][[0.6585003] [1.9238421]][[0.65866464] [1.9234014 ]][[0.6589002] [1.9230154]][[0.65915024] [1.9226375 ]][[0.65934616] [1.9222288 ]][[0.6594938] [1.9217985]][[0.6596571] [1.9213781]][[0.65992737] [1.9210178 ]][[0.6601948] [1.9206402]][[0.6604252] [1.9202436]][[0.6607412] [1.9198921]][[0.66098785] [1.9195082 ]][[0.66125655] [1.919104  ]][[0.66146916] [1.918667  ]][[0.6616825] [1.9182236]][[0.6618613] [1.9177687]][[0.66200083] [1.9172978 ]][[0.6621661] [1.9168543]][[0.66240305] [1.9164658 ]][[0.6626546] [1.9160855]][[0.6628517] [1.9156742]][[0.6630002] [1.9152411]][[0.66316456] [1.914818  ]][[0.6634364] [1.9144553]][[0.66370547] [1.9140754 ]][[0.6639372] [1.9136763]][[0.66425514] [1.9133224 ]][[0.6645033] [1.9129362]][[0.6647736] [1.9125295]][[0.6649875] [1.9120897]][[0.66520214] [1.9116436 ]][[0.665382 ] [1.9111859]][[0.6655224] [1.910712 ]][[0.6656887] [1.9102657]][[0.66592705] [1.9098748 ]][[0.66618013] [1.9094921 ]][[0.66637844] [1.9090782 ]][[0.66652787] [1.9086423 ]][[0.66669315] [1.9082166 ]][[0.6669666] [1.9078516]][[0.6672373] [1.9074692]][[0.6674704] [1.9070675]][[0.66779023] [1.9067116 ]][[0.66803986] [1.9063228 ]][[0.6683118] [1.9059135]][[0.66852695] [1.9054708 ]][[0.66874284] [1.9050219 ]][[0.6689238] [1.9045612]][[0.669065 ] [1.9040843]][[0.6692323] [1.9036351]][[0.6694721] [1.9032418]][[0.66972667] [1.9028567 ]][[0.66992617] [1.9024402 ]][[0.6700765] [1.9020015]][[0.6702428] [1.9015731]][[0.6705179] [1.9012058]][[0.6707902] [1.900821 ]][[0.67102474] [1.9004169 ]][[0.6713465] [1.9000586]][[0.6715976] [1.8996674]][[0.6718711] [1.8992554]][[0.6720876] [1.89881  ]][[0.6723048] [1.8983582]][[0.67248684] [1.8978946 ]][[0.67262894] [1.8974148 ]][[0.6727972] [1.8969628]][[0.6730384] [1.8965669]][[0.6732945] [1.8961793]][[0.6734952] [1.8957602]][[0.6736464] [1.8953187]][[0.67381364] [1.8948877 ]][[0.6740904] [1.894518 ]][[0.67436427] [1.8941308 ]][[0.6746002] [1.8937242]][[0.6749238] [1.8933637]][[0.6751764] [1.8929701]][[0.6754515] [1.8925556]][[0.67566925] [1.8921074 ]][[0.6758877] [1.8916527]][[0.6760708] [1.8911862]][[0.67621374] [1.8907034 ]][[0.676383 ] [1.8902487]][[0.67662567] [1.8898503 ]][[0.6768833] [1.8894603]][[0.6770851] [1.8890386]][[0.6772372] [1.8885944]][[0.6774055] [1.8881606]][[0.67768383] [1.8877887 ]][[0.6779593] [1.887399 ]][[0.6781966] [1.8869897]][[0.6785221] [1.886627 ]][[0.6787762] [1.8862308]][[0.67905295] [1.8858137 ]][[0.67927194] [1.8853627 ]][[0.6794917] [1.8849053]][[0.6796759] [1.8844359]][[0.67981964] [1.88395   ]][[0.67998993] [1.8834924 ]][[0.680234 ] [1.8830916]][[0.6804931] [1.8826993]][[0.6806961] [1.8822749]][[0.68084913] [1.881828  ]][[0.68101835] [1.8813915 ]][[0.6812984] [1.8810172]][[0.6815755] [1.8806251]][[0.6818142] [1.8802134]][[0.6821416] [1.8798484]][[0.6823972] [1.8794498]][[0.68267554] [1.8790301 ]][[0.68289584] [1.8785764 ]][[0.68311685] [1.8781161 ]][[0.6833021] [1.8776438]][[0.6834467] [1.877155 ]][[0.68361795] [1.8766944 ]][[0.68386346] [1.8762912 ]][[0.68412405] [1.8758963 ]][[0.68432826] [1.8754693 ]][[0.68448216] [1.8750197 ]][[0.6846524] [1.8745805]][[0.684934 ] [1.8742039]][[0.68521273] [1.8738095 ]][[0.6854528] [1.8733952]][[0.68578213] [1.8730279 ]][[0.6860392] [1.8726269]][[0.6863192] [1.8722047]][[0.6865407] [1.8717481]][[0.68676305] [1.871285  ]][[0.6869494] [1.8708098]][[0.6870948] [1.8703179]][[0.68726707] [1.8698546 ]][[0.68751395] [1.8694488 ]][[0.6877761] [1.8690516]][[0.6879815] [1.868622 ]][[0.6881363] [1.8681695]][[0.68830746] [1.8677276 ]][[0.6885907] [1.8673488]][[0.688871] [1.866952]][[0.6891125] [1.8665351]][[0.6894437] [1.8661655]][[0.6897023] [1.865762 ]][[0.68998384] [1.8653371 ]][[0.6902067] [1.8648778]][[0.6904303] [1.8644118]][[0.6906177] [1.8639337]][[0.69076395] [1.8634388 ]][[0.69093716] [1.8629727 ]][[0.6911855] [1.8625644]][[0.6914491] [1.8621647]][[0.6916557] [1.8617325]][[0.6918114] [1.8612772]][[0.6919836] [1.8608327]][[0.6922685] [1.8604515]][[0.6925504] [1.8600521]][[0.69279325] [1.8596327 ]][[0.6931264] [1.8592609]][[0.6933864] [1.858855 ]][[0.6936696] [1.8584275]][[0.69389373] [1.8579654 ]][[0.6941186] [1.8574965]][[0.6943071] [1.8570155]][[0.6944542] [1.8565176]][[0.6946284] [1.8560486]][[0.69487816] [1.8556378 ]][[0.6951433] [1.8552357]][[0.69535106] [1.8548008 ]][[0.69550765] [1.8543428 ]][[0.6956808] [1.8538955]][[0.6959673] [1.853512 ]][[0.69625086] [1.8531103 ]][[0.6964951] [1.8526884]][[0.69683015] [1.8523144 ]][[0.69709164] [1.851906  ]][[0.6973765] [1.8514758]][[0.6976019] [1.8510109]][[0.69782805] [1.8505393 ]][[0.6980176] [1.8500553]][[0.69816554] [1.8495544 ]][[0.6983408] [1.8490826]][[0.69859195] [1.8486694 ]][[0.69885856] [1.8482649 ]][[0.6990675] [1.8478274]][[0.69922495] [1.8473667 ]][[0.6993991] [1.8469167]][[0.69968724] [1.8465308 ]][[0.6999724] [1.8461266]][[0.700218] [1.845702]][[0.7005549] [1.8453257]][[0.7008179] [1.8449148]][[0.70110434] [1.8444822 ]][[0.701331 ] [1.8440144]][[0.7015584] [1.84354  ]][[0.701749 ] [1.8430531]][[0.7018978] [1.8425492]][[0.702074 ] [1.8420745]][[0.7023266] [1.8416588]][[0.70259476] [1.8412519 ]][[0.70280486] [1.8408117 ]][[0.70296323] [1.8403482 ]][[0.70313835] [1.8398956 ]][[0.7034281] [1.8395075]][[0.70371485] [1.8391008 ]][[0.70396185] [1.8386738 ]][[0.70430064] [1.8382953 ]][[0.7045651] [1.837882 ]][[0.7048532] [1.8374468]][[0.7050811] [1.8369763]][[0.7053098] [1.836499 ]][[0.7055015] [1.8360091]][[0.7056511] [1.8355023]][[0.7058283] [1.8350247]][[0.7060823] [1.8346065]][[0.70635194] [1.8341972 ]][[0.70656323] [1.8337544 ]][[0.70672244] [1.8332881 ]][[0.70689857] [1.8328327 ]][[0.70719  ] [1.8324422]][[0.70747834] [1.8320332 ]][[0.7077267] [1.8316035]][[0.7080674] [1.8312228]][[0.7083334] [1.830807 ]][[0.70862305] [1.8303691 ]][[0.7088523] [1.8298957]][[0.70908225] [1.8294156 ]][[0.709275 ] [1.8289229]][[0.70942545] [1.8284129 ]][[0.70960367] [1.8279325 ]][[0.7098591] [1.8275118]][[0.7101302] [1.8270999]][[0.7103427] [1.8266546]][[0.7105028] [1.8261855]][[0.7106799] [1.8257273]][[0.7109027] [1.8252978]][[0.7111295] [1.8248533]][[0.71132237] [1.8243914 ]][[0.71161383] [1.8239815 ]][[0.7118352] [1.8235391]][[0.71208507] [1.823077  ]][[0.71227825] [1.8225813 ]][[0.7124759] [1.8220807]][[0.71263945] [1.8215693 ]][[0.7127635] [1.8210421]][[0.71291816] [1.820546  ]][[0.713153 ] [1.8201113]][[0.7134059] [1.8196867]][[0.7136017] [1.8192292]][[0.71374667] [1.818749  ]][[0.7139103] [1.8182806]][[0.7141214] [1.8178418]][[0.71433777] [1.8173885 ]][[0.7145212] [1.8169184]][[0.71480495] [1.8165011 ]][[0.71501905] [1.8160516 ]][[0.7152627] [1.8155826]][[0.7154501] [1.8150804]][[0.7156427] [1.8145735]][[0.7158016] [1.8140562]][[0.7159213] [1.8135232]][[0.7160723] [1.8130218]][[0.7163045] [1.8125824]][[0.71655524] [1.8121532 ]][[0.71674895] [1.8116914 ]][[0.71689177] [1.8112067 ]][[0.7170537] [1.8107342]][[0.7172637] [1.8102914]][[0.7174792] [1.8098344]][[0.71766186] [1.8093604 ]][[0.7179456] [1.8089397]][[0.71815944] [1.8084867 ]][[0.71840316] [1.8080143 ]][[0.71859044] [1.8075083 ]][[0.7187831] [1.8069979]][[0.7189419] [1.806477 ]][[0.71906143] [1.8059404 ]][[0.71921253] [1.8054357 ]][[0.71944535] [1.8049933 ]][[0.71969694] [1.8045613 ]][[0.7198912] [1.8040965]][[0.7200343] [1.8036087]][[0.7201967] [1.803133 ]][[0.72040755] [1.8026875 ]][[0.72062397] [1.8022275 ]][[0.7208073] [1.8017505]][[0.72109246] [1.8013272 ]][[0.72130734] [1.8008715 ]][[0.72155225] [1.8003962 ]][[0.7217404] [1.7998872]][[0.721934 ] [1.7993737]][[0.72209364] [1.7988496 ]][[0.7222137] [1.7983098]][[0.72236556] [1.7978021 ]][[0.7225997] [1.797357 ]][[0.7228527] [1.7969224]][[0.72304803] [1.7964549 ]][[0.723192 ] [1.7959642]][[0.7233553] [1.7954859]][[0.7235673] [1.7950376]][[0.723785] [1.794575]][[0.7239694] [1.7940953]][[0.7242562] [1.7936695]][[0.72447234] [1.793211  ]][[0.72471875] [1.7927328 ]][[0.724908 ] [1.7922208]][[0.7251027] [1.7917043]][[0.7252633] [1.7911772]][[0.72538406] [1.7906342 ]][[0.7255368] [1.7901235]][[0.7257724] [1.7896758]][[0.7260269] [1.7892387]][[0.7262234] [1.7887684]][[0.7263682] [1.7882749]][[0.7265325] [1.7877938]][[0.72674584] [1.787343  ]][[0.7269649] [1.7868776]][[0.72715044] [1.7863952 ]][[0.727439] [1.785967]][[0.7276564] [1.7855059]][[0.7279043] [1.785025 ]][[0.72809476] [1.7845101 ]][[0.7282907] [1.7839906]][[0.72845227] [1.7834604 ]][[0.72857374] [1.7829143 ]][[0.72872746] [1.7824006 ]][[0.72896445] [1.7819504 ]][[0.7292205] [1.7815107]][[0.7294182] [1.7810377]][[0.7295639] [1.7805413]][[0.7297292] [1.7800573]][[0.72994375] [1.779604  ]][[0.7301641] [1.779136 ]][[0.7303508] [1.7786506]][[0.7306411] [1.7782199]][[0.7308599] [1.7777562]][[0.73110926] [1.7772726 ]][[0.73130083] [1.7767547 ]][[0.73149794] [1.7762322 ]][[0.7316605] [1.775699 ]][[0.7317827] [1.7751498]][[0.73193735] [1.7746333 ]][[0.73217577] [1.7741804 ]][[0.73243344] [1.7737383 ]][[0.73263234] [1.7732625 ]][[0.7327789] [1.7727633]][[0.7329452] [1.7722765]][[0.7331611] [1.7718205]][[0.73338276] [1.7713498 ]][[0.7335706] [1.7708617]][[0.73386264] [1.7704287 ]][[0.73408276] [1.7699623 ]][[0.7343337] [1.7694759]][[0.73452646] [1.7689551 ]][[0.73472476] [1.7684298 ]][[0.7348883] [1.7678934]][[0.7350113] [1.7673411]][[0.73516685] [1.7668216 ]][[0.7354067] [1.7663662]][[0.7356659] [1.7659216]][[0.735866 ] [1.7654432]][[0.7360134] [1.7649412]][[0.7361807] [1.7644517]][[0.7363979] [1.7639933]][[0.73662096] [1.7635199 ]][[0.7368099] [1.7630291]][[0.73710376] [1.7625935 ]][[0.7373252] [1.7621245]][[0.7375776] [1.7616354]][[0.7377715] [1.7611117]][[0.737971 ] [1.7605834]][[0.7381355] [1.7600441]][[0.7382592] [1.7594887]][[0.7384157] [1.7589662]][[0.738657 ] [1.7585082]][[0.73891777] [1.758061  ]][[0.7391191] [1.7575799]][[0.7392674] [1.7570751]][[0.73943573] [1.7565829 ]][[0.73965424] [1.7561218 ]][[0.7398786] [1.7556458]][[0.7400687] [1.7551522]][[0.74036425] [1.7547141 ]][[0.740587 ] [1.7542425]][[0.7408409] [1.7537507]][[0.741036] [1.753224]][[0.7412367] [1.7526927]][[0.7414022] [1.7521503]][[0.74152666] [1.7515918 ]][[0.74168414] [1.7510664 ]][[0.74192685] [1.750606  ]][[0.74218917] [1.7501563 ]][[0.7423917] [1.7496725]][[0.7425409] [1.7491648]][[0.74271023] [1.7486699 ]][[0.74293005] [1.7482061 ]][[0.7431558] [1.7477274]][[0.743347 ] [1.7472311]][[0.74364436] [1.7467906 ]][[0.7438684] [1.7463163]][[0.7441239] [1.7458217]][[0.7443201] [1.7452921]][[0.744522 ] [1.7447578]][[0.74468845] [1.7442124 ]][[0.7448136] [1.7436507]][[0.744972 ] [1.7431223]][[0.7452162] [1.7426592]][[0.74548006] [1.742207  ]][[0.7456838] [1.7417206]][[0.7458339] [1.7412101]][[0.7460042] [1.7407124]][[0.74622536] [1.7402462 ]][[0.7464524] [1.7397648]][[0.74664474] [1.7392658 ]][[0.74694383] [1.7388228 ]][[0.74716926] [1.7383459 ]][[0.7474262] [1.7378485]][[0.74762356] [1.737316  ]][[0.74782664] [1.7367787 ]][[0.7479941] [1.7362304]][[0.74812  ] [1.7356656]][[0.74827933] [1.7351344 ]][[0.74852496] [1.7346687 ]][[0.7487904] [1.7342141]][[0.7489953] [1.7337248]][[0.7491463] [1.7332115]][[0.74931765] [1.7327111 ]][[0.7495401] [1.7322422]][[0.7497685] [1.7317582]][[0.749962 ] [1.7312564]][[0.75026286] [1.730811  ]][[0.7504896] [1.7303314]][[0.75074804] [1.7298313 ]][[0.7509466] [1.7292958]][[0.75115085] [1.7287556 ]][[0.7513193] [1.7282041]][[0.75144595] [1.7276362 ]][[0.7516062] [1.727102 ]][[0.7518533] [1.7266338]][[0.75212026] [1.7261766 ]][[0.75232637] [1.7256848 ]][[0.75247824] [1.7251686 ]][[0.75265056] [1.7246654 ]][[0.75287426] [1.7241939 ]][[0.753104 ] [1.7237072]][[0.7532986] [1.7232026]][[0.7536012] [1.7227547]][[0.75382924] [1.7222725 ]][[0.75408924] [1.7217697 ]][[0.7542889] [1.7212312]][[0.75449437] [1.720688  ]][[0.7546638] [1.7201335]][[0.7547912] [1.7195625]][[0.75495243] [1.7190255 ]][[0.7552009] [1.7185547]][[0.75546944] [1.7180951 ]][[0.75567675] [1.7176005 ]][[0.7558295] [1.7170815]][[0.75600284] [1.7165756 ]][[0.75622785] [1.7161016 ]][[0.75645894] [1.7156123 ]][[0.7566547] [1.7151049]][[0.7569591] [1.7146547]][[0.75718844] [1.7141699 ]][[0.7574499] [1.7136643]][[0.7576508] [1.713123 ]][[0.75785744] [1.7125769 ]][[0.75802785] [1.7120194 ]][[0.758156 ] [1.7114453]][[0.7583181] [1.7109053]][[0.75856805] [1.7104319 ]][[0.7588382] [1.7099698]][[0.75904673] [1.7094725 ]][[0.75920033] [1.7089508 ]][[0.7593747] [1.7084421]][[0.759601 ] [1.7079655]][[0.7598334] [1.7074735]][[0.76003027] [1.7069634 ]][[0.76033646] [1.7065107 ]][[0.7605672] [1.7060232]][[0.76083016] [1.7055149 ]][[0.76103216] [1.7049706 ]][[0.76124  ] [1.7044215]][[0.7614114] [1.7038611]][[0.7615403] [1.7032839]][[0.7617034] [1.702741 ]][[0.7619548] [1.7022651]][[0.76222646] [1.7018005 ]][[0.7624362] [1.7013005]][[0.7625907] [1.7007759]][[0.76276606] [1.7002645 ]][[0.7629937] [1.6997854]][[0.76322746] [1.6992908 ]][[0.76342547] [1.6987779 ]][[0.7637334] [1.6983228]][[0.7639654] [1.6978327]][[0.76422995] [1.6973217 ]][[0.76443315] [1.6967745 ]][[0.76464224] [1.6962224 ]][[0.7648146] [1.6956589]][[0.76494426] [1.6950786 ]][[0.7651083] [1.6945328]][[0.76536113] [1.6940542 ]][[0.76563436] [1.6935871 ]][[0.7658453] [1.6930845]][[0.7660007] [1.6925571]][[0.76617706] [1.692043  ]][[0.766406 ] [1.6915612]][[0.7666411] [1.6910639]][[0.7668402] [1.6905483]][[0.7671499] [1.6900908]][[0.7673833] [1.6895981]][[0.7676493] [1.6890843]][[0.7678536] [1.6885341]][[0.7680639] [1.6879791]][[0.7682373] [1.6874126]][[0.76836765] [1.6868292 ]][[0.76853263] [1.6862805 ]][[0.7687869] [1.6857995]][[0.7690617] [1.6853299]][[0.7692738] [1.6848246]][[0.7694301] [1.6842943]][[0.7696075] [1.6837775]][[0.76983774] [1.6832932 ]][[0.7700742] [1.6827933]][[0.77027446] [1.6822749 ]][[0.7705859] [1.6818149]][[0.77082056] [1.6813196 ]][[0.7710881] [1.6808031]][[0.77129364] [1.68025   ]][[0.7715051] [1.6796921]][[0.77167946] [1.6791227 ]][[0.7718106] [1.6785362]][[0.7719765] [1.6779846]][[0.7722322] [1.6775011]][[0.7725085] [1.677029 ]][[0.7727218] [1.6765211]][[0.772879 ] [1.6759881]][[0.7730574] [1.6754684]][[0.77323425] [1.6749578 ]][[0.7734228] [1.6744337]][[0.77357984] [1.6738933 ]][[0.7738532] [1.6734135]][[0.7740533] [1.6729   ]][[0.77429  ] [1.6723666]][[0.7744676] [1.671798 ]][[0.77465403] [1.6712257 ]][[0.7748058] [1.670643 ]][[0.77491635] [1.6700442 ]][[0.77506405] [1.6694813 ]][[0.775304 ] [1.6689876]][[0.77556646] [1.6685063 ]][[0.7757671] [1.6679896]][[0.7759126] [1.6674483]][[0.77608067] [1.666921  ]][[0.77624834] [1.6664033 ]][[0.77642876] [1.6658726 ]][[0.7765785] [1.6653258]][[0.776846 ] [1.6648402]][[0.7770406] [1.6643211]][[0.7772727] [1.6637824]][[0.77744585] [1.6632084 ]][[0.7776285] [1.662631 ]][[0.7777767] [1.6620433]][[0.777884 ] [1.6614398]][[0.778029 ] [1.6608725]][[0.7782672] [1.6603749]][[0.7785283] [1.6598898]][[0.7787275] [1.6593693]][[0.7788715] [1.6588243]][[0.7790384] [1.6582934]][[0.7792052] [1.6577721]][[0.779385 ] [1.6572378]][[0.77953404] [1.6566875 ]][[0.7798017] [1.6561989]][[0.7799962] [1.6556765]][[0.78022856] [1.6551346 ]][[0.7804017] [1.6545572]][[0.7805845] [1.6539766]][[0.7807328] [1.6533855]][[0.78084  ] [1.6527785]][[0.7809852] [1.652208 ]][[0.78122413] [1.6517076 ]][[0.7814862] [1.6512198]][[0.78168607] [1.6506965 ]][[0.7818305] [1.6501485]][[0.78199804] [1.6496147 ]][[0.7821654] [1.6490906]][[0.7823459] [1.6485535]][[0.7824955] [1.6480004]][[0.7827645] [1.6475091]][[0.7829599] [1.646984 ]][[0.78319335] [1.6464392 ]][[0.78336734] [1.6458589 ]][[0.78355104] [1.6452751 ]][[0.78370005] [1.644681  ]][[0.7838077] [1.6440709]][[0.7839536] [1.6434975]][[0.7841938] [1.6429945]][[0.7844573] [1.6425042]][[0.78465825] [1.6419781 ]][[0.78480345] [1.6414273 ]][[0.7849719] [1.6408907]][[0.78514016] [1.6403639 ]][[0.78532165] [1.639824  ]][[0.7854721] [1.639268 ]][[0.7857426] [1.6387743]][[0.78593904] [1.6382465 ]][[0.7861738] [1.637699 ]][[0.78634876] [1.6371157 ]][[0.7865335] [1.636529 ]][[0.7866833] [1.6359318]][[0.78679156] [1.6353186 ]][[0.7869383] [1.6347423]][[0.7871799] [1.6342368]][[0.7874449] [1.633744 ]][[0.78764695] [1.6332153 ]][[0.7877929] [1.6326617]][[0.7879623] [1.6321224]][[0.78813154] [1.631593  ]][[0.78831404] [1.6310505 ]][[0.7884653] [1.6304916]][[0.78873736] [1.6299953 ]][[0.78893495] [1.6294649 ]][[0.78917104] [1.6289145 ]][[0.789347 ] [1.6283282]][[0.7895328] [1.6277386]][[0.78968346] [1.6271385 ]][[0.7897923] [1.6265222]][[0.7899399] [1.625943 ]][[0.7901828] [1.625435 ]][[0.7904493] [1.6249398]][[0.7906526] [1.6244085]][[0.7907994] [1.6238521]][[0.7909697] [1.6233102]][[0.79113996] [1.6227782 ]][[0.79132354] [1.6222329 ]][[0.7914757] [1.6216713]][[0.7917493] [1.6211725]][[0.791948 ] [1.6206394]][[0.7921855] [1.6200863]][[0.79236245] [1.6194972 ]][[0.7925493] [1.6189046]][[0.7927008] [1.6183015]][[0.7928103] [1.6176821]][[0.79295874] [1.6171    ]][[0.7932031] [1.6165894]][[0.79347116] [1.6160917 ]][[0.79367554] [1.6155578 ]][[0.7938232] [1.6149986]][[0.7939945] [1.6144539]][[0.7941657] [1.6139193]][[0.79435027] [1.6133713 ]][[0.7945033] [1.6128069]][[0.7947784] [1.6123058]][[0.79497826] [1.61177   ]][[0.79521704] [1.6112143 ]][[0.795395 ] [1.6106223]][[0.7955829] [1.6100267]][[0.7957353] [1.6094207]][[0.7958454] [1.6087983]][[0.79599464] [1.6082133 ]][[0.7962404] [1.6077002]][[0.7965099] [1.6072   ]][[0.79671544] [1.6066633 ]][[0.7968639] [1.6061014]][[0.79703623] [1.6055541 ]][[0.79720837] [1.6050167 ]][[0.79739404] [1.6044661 ]][[0.79754794] [1.6038989 ]][[0.7978246] [1.6033952]][[0.79802555] [1.6028569 ]][[0.7982657] [1.6022984]][[0.7984447] [1.6017034]][[0.79863364] [1.601105  ]][[0.7987869] [1.6004959]][[0.79889756] [1.5998704 ]][[0.79904765] [1.5992826 ]][[0.79929477] [1.598767  ]][[0.7995658] [1.5982645]][[0.7997725] [1.5977252]][[0.7999218] [1.5971605]][[0.8000951] [1.5966104]][[0.8002682] [1.5960704]][[0.80045485] [1.595517  ]][[0.8006096] [1.5949471]][[0.8008878] [1.5944409]][[0.8010899] [1.5939   ]][[0.8013314] [1.5933387]][[0.80151135] [1.5927409 ]][[0.80170137] [1.5921396 ]][[0.8018555] [1.5915276]][[0.80196685] [1.590899  ]][[0.80211776] [1.5903083 ]][[0.80236626] [1.5897902 ]][[0.8026388] [1.5892851]][[0.80284667] [1.5887432 ]][[0.8029968] [1.5881758]][[0.80317104] [1.5876231 ]][[0.80334514] [1.5870805 ]][[0.8035329] [1.5865244]][[0.8036885] [1.5859517]][[0.8039683] [1.5854431]][[0.8041715] [1.5848995]][[0.80443245] [1.5843588 ]][[0.80462974] [1.583779  ]][[0.8048355] [1.5831935]][[0.8050037] [1.5825955]][[0.80512756] [1.5819792 ]][[0.80529004] [1.5813993 ]][[0.80554956] [1.5808911 ]][[0.8058323] [1.5803947]][[0.80604917] [1.5798602 ]][[0.8062072] [1.579299 ]][[0.80638874] [1.5787517 ]][[0.80656946] [1.5782137 ]][[0.80676335] [1.5776615 ]][[0.80692446] [1.5770919 ]][[0.80720997] [1.5765861 ]][[0.80741805] [1.5760447 ]][[0.8076838] [1.5755056]][[0.8078852] [1.5749267]][[0.80809486] [1.5743419 ]][[0.80826646] [1.573744  ]][[0.80839324] [1.5731275 ]][[0.8085586] [1.5725473]][[0.8088213] [1.5720389]][[0.80910724] [1.5715421 ]][[0.8093267] [1.5710069]][[0.8094869] [1.5704446]][[0.8096706] [1.5698961]][[0.80985343] [1.5693569 ]][[0.81004936] [1.5688032 ]][[0.8102122] [1.5682319]][[0.81049997] [1.5677247 ]][[0.81070983] [1.5671815 ]][[0.81097764] [1.5666405 ]][[0.8111807] [1.5660596]][[0.81139195] [1.5654725 ]][[0.8115649] [1.5648723]][[0.8116928] [1.5642532]][[0.8118594] [1.5636706]][[0.8121239] [1.5631602]][[0.8124116] [1.5626613]][[0.8126325] [1.5621238]][[0.8127938] [1.5615591]][[0.8129787] [1.5610082]][[0.8131626] [1.5604665]][[0.8133598] [1.5599103]][[0.81352365] [1.5593364 ]][[0.81381315] [1.5588269 ]][[0.81402427] [1.5582812 ]][[0.8142936] [1.5577377]][[0.8144979] [1.557154 ]][[0.8147104] [1.5565642]][[0.81488436] [1.5559611 ]][[0.815013 ] [1.5553391]][[0.8151806] [1.5547538]][[0.81538564] [1.5542134 ]][[0.8156202] [1.5536875]][[0.8157929] [1.553125 ]][[0.81591064] [1.5525376 ]][[0.81605655] [1.551966  ]][[0.8162055] [1.5514054]][[0.8163713] [1.5508319]][[0.81650686] [1.5502421 ]][[0.8167717] [1.5497181]][[0.81696033] [1.549159  ]][[0.81720996] [1.5486034 ]][[0.8173962] [1.5480083]][[0.8175927] [1.5474079]][[0.8177521] [1.5467949]][[0.81786746] [1.5461636 ]][[0.8180234] [1.5455698]][[0.81821823] [1.5450217 ]][[0.8184439] [1.5444885]][[0.81860846] [1.5439193 ]][[0.8187186] [1.5433253]][[0.8188579] [1.5427476]][[0.819001 ] [1.5421814]][[0.8191617] [1.5416024]][[0.8192926] [1.5410073]][[0.8195541] [1.5404787]][[0.81973946] [1.539915  ]][[0.8199866] [1.5393548]][[0.82017034] [1.5387552 ]][[0.8203647] [1.5381504]][[0.8205221] [1.5375333]][[0.82063556] [1.5368978 ]][[0.82079005] [1.5363001 ]][[0.82098395] [1.5357484 ]][[0.821209 ] [1.5352118]][[0.8213728] [1.534639 ]][[0.82148206] [1.5340414 ]][[0.82162076] [1.5334604 ]][[0.82176346] [1.5328909 ]][[0.821924 ] [1.5323087]][[0.8220546] [1.5317103]][[0.8223167] [1.5311787]][[0.8225023] [1.5306119]][[0.8227501] [1.5300487]][[0.8229342] [1.529446 ]][[0.82312906] [1.528838  ]][[0.8232869] [1.5282177]][[0.8234005] [1.527579 ]][[0.82355547] [1.5269781 ]][[0.8237501] [1.5264236]][[0.8239761] [1.5258844]][[0.82414055] [1.5253087 ]][[0.8242501] [1.5247082]][[0.82438934] [1.5241243 ]][[0.8245326] [1.523552 ]][[0.82469386] [1.5229669 ]][[0.82482505] [1.5223656 ]][[0.82508844] [1.5218314 ]][[0.82527494] [1.5212618 ]][[0.82552403] [1.5206959 ]][[0.8257091] [1.5200902]][[0.82590497] [1.5194794 ]][[0.8260636] [1.518856 ]][[0.8261777] [1.5182142]][[0.82633346] [1.5176105 ]][[0.82652915] [1.5170534 ]][[0.82675636] [1.5165116 ]][[0.82692164] [1.5159332 ]][[0.82705057] [1.5153558 ]][[0.8272075] [1.5147926]][[0.82736677] [1.5142387 ]][[0.8275426] [1.5136698]][[0.8276869] [1.5130827]][[0.82796293] [1.5125614 ]][[0.8281605] [1.5120031]][[0.82842 ] [1.511447]][[0.82861423] [1.5108496 ]][[0.8288185] [1.5102459]][[0.82898456] [1.5096287 ]][[0.82910526] [1.508992  ]][[0.8292672] [1.5083928]][[0.8294688] [1.5078396]][[0.82970166] [1.5073011 ]][[0.8298718] [1.5067253]][[0.83000493] [1.5061501 ]][[0.8301659] [1.5055885]][[0.83032894] [1.5050359 ]][[0.83050835] [1.5044678 ]][[0.83065575] [1.5038811 ]][[0.8309354] [1.5033602]][[0.831136 ] [1.5028017]][[0.8313986] [1.5022452]][[0.8315954] [1.5016471]][[0.83180225] [1.5010424 ]][[0.8319705] [1.5004238]][[0.832093 ] [1.4997855]][[0.8322569] [1.4991848]][[0.8324605] [1.4986302]][[0.8326955] [1.4980903]][[0.8328673] [1.4975127]][[0.8330019] [1.4969356]][[0.8331644] [1.4963721]][[0.8333289] [1.4958175]][[0.8335098] [1.4952474]][[0.83365846] [1.4946584 ]][[0.8339401] [1.4941355]][[0.83414215] [1.4935747 ]][[0.8344066] [1.493016 ]][[0.83460486] [1.4924154 ]][[0.8348131] [1.4918082]][[0.8349826] [1.491187 ]][[0.83510596] [1.490546  ]][[0.83527094] [1.4899427 ]][[0.83547586] [1.4893856 ]][[0.8357123] [1.4888433]][[0.8358853] [1.4882631]][[0.83602077] [1.4876834 ]][[0.83618426] [1.4871174 ]][[0.8363498] [1.4865603]][[0.8365318] [1.4859875]][[0.8366814] [1.4853959]][[0.8369647] [1.4848706]][[0.837168 ] [1.4843073]][[0.837434 ] [1.4837459]][[0.83763343] [1.4831425 ]][[0.83784294] [1.4825324 ]][[0.8380134] [1.4819083]][[0.83813757] [1.4812642 ]][[0.83830357] [1.480658  ]][[0.8385097] [1.4800984]][[0.8387475] [1.4795535]][[0.8389214] [1.4789705]][[0.8390577] [1.4783881]][[0.83922213] [1.4778193 ]][[0.8393886] [1.4772596]][[0.8395717] [1.4766841]][[0.83972216] [1.4760896 ]][[0.8400071] [1.4755619]][[0.8402116] [1.4749959]][[0.8404791] [1.4744319]][[0.84067965] [1.4738256 ]][[0.84089035] [1.4732126 ]][[0.8410618] [1.4725856]][[0.84118664] [1.4719385 ]][[0.8413536] [1.4713295]][[0.8415609] [1.470767 ]][[0.8418001] [1.4702196]][[0.84197503] [1.4696339 ]][[0.84211206] [1.4690487 ]][[0.84227747] [1.4684774 ]][[0.8424449] [1.467915 ]][[0.842629 ] [1.4673369]][[0.84278035] [1.4667397 ]][[0.84306693] [1.4662094 ]][[0.8432725] [1.4656408]][[0.84354156] [1.4650742 ]][[0.84374326] [1.464465  ]][[0.84395516] [1.4638491 ]][[0.84412754] [1.463219  ]][[0.84425306] [1.4625689 ]][[0.8444209] [1.461957 ]][[0.8446294] [1.4613919]][[0.84487  ] [1.4608419]][[0.8450459] [1.4602535]][[0.84518373] [1.4596655 ]][[0.84535  ] [1.4590914]][[0.8455184] [1.4585264]][[0.84570354] [1.4579455 ]][[0.8458557] [1.4573454]][[0.84614384] [1.4568126 ]][[0.84635055] [1.4562413 ]][[0.8466211] [1.4556719]][[0.84682393] [1.4550599 ]][[0.84703696] [1.4544411 ]][[0.8472103] [1.4538081]][[0.84733653] [1.4531549 ]][[0.84750533] [1.4525402 ]][[0.84771496] [1.4519725 ]][[0.84795684] [1.4514198 ]][[0.84813374] [1.4508287 ]][[0.8482723] [1.450238 ]][[0.8484396] [1.4496613]][[0.84860885] [1.4490936 ]][[0.84879506] [1.4485099 ]][[0.84894806] [1.4479071 ]][[0.8492378] [1.4473718]][[0.8494457] [1.4467978]][[0.84971774] [1.4462259 ]][[0.8499217] [1.445611 ]][[0.8501359] [1.4449893]][[0.85031027] [1.4443535 ]][[0.8504372] [1.4436972]][[0.850607 ] [1.4430796]][[0.8508178] [1.4425093]][[0.85106105] [1.4419541 ]][[0.8512389] [1.4413602]][[0.85137826] [1.4407668 ]][[0.85154647] [1.4401873 ]][[0.8517167] [1.439617 ]][[0.8519039] [1.4390306]][[0.85205775] [1.438425  ]][[0.8523491] [1.4378872]][[0.85255814] [1.4373106 ]][[0.85283166] [1.436736  ]][[0.85303676] [1.4361184 ]][[0.8532522] [1.4354938]][[0.85342747] [1.434855  ]][[0.85355514] [1.4341958 ]][[0.85372585] [1.4335753 ]][[0.8539378] [1.4330024]][[0.85418236] [1.4324446 ]][[0.85436124] [1.4318479 ]][[0.85450137] [1.4312518 ]][[0.85467046] [1.4306697 ]][[0.85484165] [1.4300967 ]][[0.8550299] [1.4295077]][[0.8551846] [1.4288993]][[0.8554776] [1.428359 ]][[0.85568774] [1.4277798 ]][[0.8559628] [1.4272026]][[0.85616904] [1.4265821 ]][[0.85638565] [1.4259547 ]][[0.8565619] [1.4253129]][[0.8566902] [1.4246507]][[0.8568618] [1.4240273]][[0.857075 ] [1.4234518]][[0.8573209] [1.4228915]][[0.85750073] [1.4222921 ]][[0.85764164] [1.4216932 ]][[0.8578117] [1.4211085]][[0.8579838] [1.420533 ]][[0.85817313] [1.4199412 ]][[0.8583287] [1.41933  ]][[0.85862327] [1.4187874 ]][[0.8588346] [1.4182054]][[0.8591112] [1.4176255]][[0.8593185] [1.4170022]][[0.8595363] [1.416372 ]][[0.8597135] [1.4157273]][[0.85984254] [1.415062  ]][[0.8600151] [1.4144359]][[0.8602294] [1.4138577]][[0.8604766] [1.4132949]][[0.86065745] [1.4126928 ]][[0.8607991] [1.4120911]][[0.86097  ] [1.4115038]][[0.86114305] [1.4109256 ]][[0.8613334] [1.4103312]][[0.8614898] [1.4097172]][[0.86178595] [1.409172  ]][[0.86199844] [1.4085875 ]][[0.8622765] [1.408005 ]][[0.86248493] [1.4073789 ]][[0.8627039] [1.4067458]][[0.8628821] [1.4060982]][[0.86301184] [1.40543   ]][[0.86318535] [1.404801  ]][[0.8634008] [1.4042202]][[0.8636494] [1.4036549]][[0.8638312] [1.4030502]][[0.8639736] [1.4024459]][[0.8641455] [1.4018558]][[0.8643195] [1.4012752]][[0.86451083] [1.400678  ]][[0.8646681] [1.4000612]][[0.86496586] [1.3995137 ]][[0.8651795] [1.3989265]][[0.865459 ] [1.3983414]][[0.8656686] [1.3977125]][[0.8658887] [1.3970765]][[0.8660678] [1.396426 ]][[0.8661983] [1.3957547]][[0.8663727] [1.3951229]][[0.8665893] [1.3945395]][[0.86683923] [1.3939716 ]][[0.86702204] [1.3933641 ]][[0.8671652] [1.392757 ]][[0.867338 ] [1.3921643]][[0.86751294] [1.391581  ]][[0.8677053] [1.3909813]][[0.8678634] [1.3903618]][[0.8681628] [1.3898118]][[0.86837757] [1.389222  ]][[0.8686586] [1.3886343]][[0.8688693] [1.3880026]][[0.8690906] [1.3873639]][[0.8692707] [1.3867105]][[0.8694018] [1.3860363]][[0.86957717] [1.3854017 ]][[0.86979496] [1.3848158 ]][[0.87004626] [1.3842454 ]][[0.87023  ] [1.3836353]][[0.87037396] [1.3830256 ]][[0.8705477] [1.3824303]][[0.8707236] [1.3818444]][[0.870917] [1.381242]][[0.871076 ] [1.3806198]][[0.87137693] [1.3800673 ]][[0.8715929] [1.379475 ]][[0.87187546] [1.3788847 ]][[0.8720873] [1.3782501]][[0.8723098] [1.3776085]][[0.8724909] [1.3769523]][[0.8726227] [1.3762751]][[0.87279904] [1.3756378 ]][[0.87301797] [1.3750492 ]][[0.8732706] [1.3744763]][[0.87345535] [1.3738635 ]][[0.87360007] [1.3732511 ]][[0.8737747] [1.3726531]][[0.8739515] [1.3720647]][[0.8741459] [1.3714597]][[0.8743057] [1.3708348]][[0.8746083] [1.37028  ]][[0.87482536] [1.369685  ]][[0.87510943] [1.3690922 ]][[0.8753224] [1.3684549]][[0.8755461] [1.3678106]][[0.87572813] [1.3671515 ]][[0.8758607] [1.3664714]][[0.8760379] [1.3658313]][[0.876258 ] [1.3652402]][[0.87651193] [1.3646648 ]][[0.87669766] [1.3640493 ]][[0.87684315] [1.3634343 ]][[0.87701875] [1.3628339 ]][[0.8771965] [1.3622428]][[0.87739193] [1.3616352 ]][[0.87755257] [1.3610076 ]][[0.87785673] [1.3604503 ]][[0.87807494] [1.3598527 ]][[0.8783605] [1.3592572]][[0.8785746] [1.3586172]][[0.8787995] [1.35797  ]][[0.8789825] [1.357308 ]][[0.87911576] [1.356625  ]][[0.8792939] [1.3559821]][[0.8795152] [1.3553884]][[0.87977046] [1.3548105 ]][[0.87995714] [1.3541923 ]][[0.8801034] [1.3535745]][[0.8802799] [1.3529714]][[0.8804586] [1.3523779]][[0.88065505] [1.3517677 ]][[0.8808165] [1.3511373]][[0.8811223] [1.3505776]][[0.88134164] [1.3499775 ]][[0.8816287] [1.3493795]][[0.88184386] [1.3487368 ]][[0.8820699] [1.3480868]][[0.8822538] [1.347422 ]][[0.88238776] [1.346736  ]][[0.88256687] [1.3460903 ]][[0.8827893] [1.3454942]][[0.8830459] [1.3449138]][[0.8832336] [1.344293 ]][[0.8833806] [1.3436726]][[0.88355803] [1.3430669 ]][[0.8837376] [1.3424709]][[0.88393515] [1.341858  ]][[0.8840975] [1.3412249]][[0.88440484] [1.3406628 ]][[0.8846253] [1.3400601]][[0.88491386] [1.3394595 ]][[0.88513017] [1.338814  ]][[0.8853574] [1.3381613]][[0.8855423] [1.3374937]][[0.8856769] [1.3368047]][[0.8858569] [1.3361564]][[0.8860805] [1.3355576]][[0.8863385] [1.3349748]][[0.8865271] [1.3343513]][[0.8866749] [1.3337283]][[0.8868532] [1.3331201]][[0.88703376] [1.3325214 ]][[0.8872323] [1.331906 ]][[0.8873955] [1.3312702]][[0.88770443] [1.3307058 ]][[0.8879261] [1.3301005]][[0.88821614] [1.3294975 ]][[0.8884336] [1.3288492]][[0.888662 ] [1.3281938]][[0.8888478] [1.3275234]][[0.8889832] [1.3268315]][[0.88916415] [1.3261803 ]][[0.88938886] [1.325579  ]][[0.88964814] [1.3249937 ]][[0.88983774] [1.3243676 ]][[0.8899863] [1.323742 ]][[0.89016557] [1.3231312 ]][[0.89034706] [1.32253   ]][[0.8905466] [1.3219119]][[0.89071065] [1.3212734 ]][[0.8910212] [1.3207066]][[0.891244 ] [1.3200988]][[0.8915355] [1.3194932]][[0.8917541] [1.3188422]][[0.8919837] [1.3181839]][[0.8921705] [1.3175106]][[0.8923065] [1.3168159]][[0.8924884] [1.316162 ]][[0.8927143] [1.3155582]][[0.8929749] [1.3149705]][[0.8931655] [1.3143418]][[0.89331484] [1.3137136 ]][[0.893495 ] [1.3131002]][[0.8936774] [1.3124965]][[0.893878 ] [1.3118758]][[0.89404285] [1.3112347 ]][[0.89435494] [1.3106655 ]][[0.8945789] [1.3100551]][[0.8948719] [1.3094469]][[0.89509153] [1.3087932 ]][[0.89532226] [1.3081322 ]][[0.89551  ] [1.3074561]][[0.89564675] [1.3067585 ]][[0.89582956] [1.3061019 ]][[0.8960566] [1.3054956]][[0.89631855] [1.3049054 ]][[0.8965101] [1.3042741]][[0.8966602] [1.3036432]][[0.89684135] [1.3030273 ]][[0.8970247] [1.3024211]][[0.8972263] [1.3017979]][[0.897392 ] [1.3011541]][[0.8977057] [1.3005826]][[0.89793074] [1.2999698 ]][[0.89822525] [1.2993591 ]][[0.898446 ] [1.2987027]][[0.89867795] [1.2980391 ]][[0.89886665] [1.2973602 ]][[0.8990041] [1.2966597]][[0.89918786] [1.2960004 ]][[0.899416 ] [1.2953916]][[0.8996793] [1.294799 ]][[0.8998718] [1.294165 ]][[0.9000226] [1.2935315]][[0.90020466] [1.2929131 ]][[0.9003889] [1.2923044]][[0.9005915] [1.2916785]][[0.900758 ] [1.2910322]][[0.90107334] [1.2904583 ]][[0.90129954] [1.289843  ]][[0.90159553] [1.2892298 ]][[0.90181744] [1.2885706 ]][[0.9020505] [1.2879043]][[0.90224016] [1.2872226 ]][[0.90237826] [1.2865193 ]][[0.9025629] [1.2858573]][[0.9027923] [1.285246 ]][[0.90305686] [1.2846509 ]][[0.9032504] [1.2840145]][[0.903402 ] [1.2833785]][[0.9035849] [1.2827575]][[0.9037701] [1.2821463]][[0.90397376] [1.281518  ]][[0.9041411] [1.280869 ]][[0.904458 ] [1.2802927]][[0.9046853] [1.2796749]][[0.9049828] [1.2790592]][[0.9052058] [1.2783974]][[0.90544003] [1.2777283 ]][[0.90563065] [1.2770439 ]][[0.90576947] [1.2763377 ]][[0.9059551] [1.275673 ]][[0.90618557] [1.2750593 ]][[0.90645146] [1.2744619 ]][[0.90664595] [1.2738228 ]][[0.9067983] [1.2731842]][[0.9069822] [1.2725607]][[0.90716827] [1.2719471 ]][[0.90737295] [1.2713163 ]][[0.90754116] [1.2706647 ]][[0.9078596] [1.2700862]][[0.9080881] [1.2694658]][[0.90838706] [1.2688477 ]][[0.9086112] [1.2681832]][[0.9088466] [1.2675115]][[0.9090382] [1.2668244]][[0.90917766] [1.2661153 ]][[0.90936416] [1.265448  ]][[0.9095958] [1.2648318]][[0.909863 ] [1.2642319]][[0.91005844] [1.2635902 ]][[0.9102115] [1.2629491]][[0.9103963] [1.2623231]][[0.9105833] [1.2617071]][[0.910789 ] [1.2610737]][[0.91095805] [1.2604195 ]][[0.91127807] [1.2598386 ]][[0.91150767] [1.2592157 ]][[0.9118081] [1.2585951]][[0.9120333] [1.257928 ]][[0.9122699] [1.2572535]][[0.9124624] [1.2565637]][[0.9126026] [1.2558517]][[0.91279006] [1.2551818 ]][[0.9130228] [1.2545631]][[0.9132914] [1.2539608]][[0.9134878] [1.2533166]][[0.91364163] [1.2526729 ]][[0.9138273] [1.2520444]][[0.91401523] [1.251426  ]][[0.91422194] [1.2507901 ]][[0.9143918] [1.2501333]][[0.9147134] [1.2495501]][[0.9149441] [1.2489249]][[0.915246 ] [1.2483017]][[0.9154723] [1.247632 ]][[0.91571003] [1.2469549 ]][[0.91590345] [1.2462623 ]][[0.9160443] [1.2455477]][[0.91623265] [1.2448751 ]][[0.91646653] [1.244254  ]][[0.9167364] [1.2436494]][[0.9169338] [1.2430027]][[0.9170884] [1.2423564]][[0.91727495] [1.2417254 ]][[0.91746384] [1.2411045 ]][[0.91767156] [1.2404661 ]][[0.91784227] [1.2398067 ]][[0.91816545] [1.2392212 ]][[0.9183973] [1.2385935]][[0.9187007] [1.237968 ]][[0.91892815] [1.2372956 ]][[0.91916704] [1.2366158 ]][[0.9193614] [1.2359204]][[0.919503 ] [1.2352029]][[0.9196922] [1.2345276]][[0.91992724] [1.233904  ]][[0.92019844] [1.233297  ]][[0.92039675] [1.2326478 ]][[0.9205521] [1.231999 ]][[0.9207396] [1.2313657]][[0.9209294] [1.2307423]][[0.9211381] [1.2301015]][[0.92130965] [1.2294395 ]][[0.9216344] [1.2288518]][[0.9218674] [1.2282215]][[0.9221722] [1.2275935]][[0.9224007] [1.2269186]][[0.92264074] [1.2262361 ]][[0.92283607] [1.2255381 ]][[0.9229783] [1.2248179]][[0.9231685] [1.2241399]][[0.92340463] [1.223514  ]][[0.92367715] [1.2229047 ]][[0.9238764] [1.2222528]][[0.9240325] [1.2216016]][[0.9242209] [1.2209657]][[0.92441165] [1.22034   ]][[0.92462134] [1.2196966 ]][[0.9247937] [1.219032 ]][[0.92512  ] [1.2184421]][[0.92535406] [1.2178094 ]][[0.9256604] [1.2171791]][[0.92588997] [1.2165015 ]][[0.9261312] [1.2158164]][[0.92632747] [1.2151157 ]][[0.9264704] [1.2143927]][[0.9266615] [1.2137122]][[0.9268988] [1.2130839]][[0.9271726] [1.2124722]][[0.9273729] [1.211818 ]][[0.9275297] [1.2111642]][[0.927719] [1.210526]][[0.9279106] [1.2098978]][[0.9281213] [1.2092519]][[0.92829454] [1.2085848 ]][[0.92862236] [1.2079926 ]][[0.92885756] [1.2073575 ]][[0.9291653] [1.2067248]][[0.92939603] [1.2060446 ]][[0.9296384] [1.2053568]][[0.92983556] [1.2046535 ]][[0.92997915] [1.2039278 ]][[0.93017113] [1.2032447 ]][[0.93040955] [1.202614  ]][[0.9306846] [1.2019999]][[0.93088585] [1.2013432 ]][[0.93104345] [1.2006869 ]][[0.93123364] [1.2000462 ]][[0.93142617] [1.1994156 ]][[0.9316379] [1.1987673]][[0.9318119] [1.1980977]][[0.93214136] [1.1975032 ]][[0.9323777] [1.1968658]][[0.9326869] [1.1962306]][[0.9329187] [1.1955479]][[0.9331622] [1.1948577]][[0.93336034] [1.1941516 ]][[0.93350464] [1.1934232 ]][[0.9336976] [1.1927375]][[0.9338736] [1.1920925]][[0.93409276] [1.1914656 ]][[0.9342434] [1.1907969]][[0.9343553] [1.1901296]][[0.9345047] [1.1894788]][[0.93466055] [1.1888388 ]][[0.9347668] [1.1881791]][[0.9348458] [1.1874989]][[0.9350906] [1.1868949]][[0.93525046] [1.1862484 ]][[0.9354913] [1.1856049]][[0.9356614] [1.1849144]][[0.9358494] [1.1842167]][[0.93599755] [1.1835037 ]][[0.9360966] [1.1827686]][[0.93624914] [1.1820769 ]][[0.9363888] [1.1814265]][[0.93657553] [1.1807945 ]][[0.9366967] [1.1801207]][[0.936782 ] [1.1794487]][[0.9369076] [1.1787934]][[0.9370422] [1.1781493]][[0.93712914] [1.1774855 ]][[0.93726623] [1.1768851 ]][[0.93756413] [1.1763531 ]][[0.9377715] [1.1757711]][[0.93807846] [1.1752589 ]][[0.9383078] [1.174686 ]][[0.93854946] [1.174094  ]][[0.9387457] [1.1734757]][[0.93888795] [1.1728255 ]][[0.93907964] [1.17221   ]][[0.9393452] [1.1717201]][[0.9396455] [1.1712326]][[0.9398688] [1.1706884]][[0.94004595] [1.1701328 ]][[0.9402544] [1.169582 ]][[0.94046366] [1.1690319 ]][[0.94061774] [1.1684523 ]][[0.9408155] [1.1679277]][[0.94116867] [1.167464  ]][[0.9414255] [1.1669431]][[0.9417775] [1.1664859]][[0.94204724] [1.1659621 ]][[0.9423253] [1.165414 ]][[0.9425543] [1.1648349]][[0.9427259] [1.1642194]][[0.9429442] [1.1636353]][[0.94323415] [1.1631739 ]][[0.94355667] [1.1627117 ]][[0.94379973] [1.16219   ]][[0.9439946] [1.1616542]][[0.94421923] [1.1611212 ]][[0.94444317] [1.1605868 ]][[0.9446103] [1.1600211]][[0.94482005] [1.1595091 ]][[0.94518465] [1.1590567 ]][[0.94545156] [1.1585454 ]][[0.9458131] [1.158097 ]][[0.94609123] [1.1575806 ]][[0.94637704] [1.1570388 ]][[0.9466129] [1.156465 ]][[0.9467905] [1.1558541]][[0.9470146] [1.1552739]][[0.94731  ] [1.1548164]][[0.9476377] [1.1543574]][[0.9478852] [1.1538382]][[0.948084 ] [1.1533045]][[0.94831234] [1.152773  ]][[0.9484657] [1.1522356]][[0.9485691] [1.1516669]][[0.94872177] [1.1511521 ]][[0.9490357] [1.1506972]][[0.9492568] [1.1501834]][[0.94957757] [1.1497328 ]][[0.9498188] [1.1492139]][[0.9500715] [1.1486696]][[0.95027745] [1.1480932 ]][[0.95042807] [1.1474795 ]][[0.95062804] [1.1468967 ]][[0.9509021] [1.146437 ]][[0.95121086] [1.1459761 ]][[0.9514411] [1.1454545]][[0.9516243] [1.1449184]][[0.95183873] [1.1443847 ]][[0.9519794] [1.1438451]][[0.95207125] [1.143274  ]][[0.9522137] [1.142757 ]][[0.9525192] [1.1423002]][[0.9527324] [1.1417843]][[0.9530465] [1.1413318]][[0.9532816] [1.1408108]][[0.9535289] [1.1402644]][[0.9537299] [1.1396858]][[0.95387596] [1.1390697 ]][[0.95407206] [1.1384846 ]][[0.95434296] [1.1380231 ]][[0.9546491] [1.1375602]][[0.95487684] [1.1370367 ]][[0.9550576] [1.1364986]][[0.9552702] [1.1359628]][[0.9554089] [1.135421 ]][[0.9554989] [1.1348476]][[0.9556399] [1.1343287]][[0.9559447] [1.1338701]][[0.9562375] [1.1334763]][[0.9566237] [1.1331336]][[0.9569234] [1.132711 ]][[0.95722914] [1.1322528 ]][[0.95748264] [1.1317532 ]][[0.95767576] [1.1312078 ]][[0.9579145] [1.1306863]][[0.9582242] [1.1302823]][[0.9585655] [1.129871 ]][[0.9588247] [1.1293933]][[0.9590337] [1.1288962]][[0.9592719] [1.1283972]][[0.9594335] [1.1278883]][[0.95954394] [1.1273441 ]][[0.95970356] [1.1268514 ]][[0.96002585] [1.1264166 ]][[0.9603344] [1.126044 ]][[0.9607353] [1.1257209]][[0.9610481] [1.1253152]][[0.9613657] [1.1248719]][[0.9616298] [1.1243852]][[0.96183234] [1.1238512 ]][[0.9620798] [1.1233397]][[0.96239775] [1.122945  ]][[0.96274674] [1.1225418 ]][[0.96301264] [1.122071  ]][[0.9632276] [1.1215799]][[0.96347135] [1.121086  ]][[0.9636377] [1.1205814]][[0.9637523] [1.1200407]][[0.96391594] [1.1195512 ]][[0.9642425] [1.1191192]][[0.96455497] [1.1187494 ]][[0.96495986] [1.1184286 ]][[0.96527606] [1.1180246 ]][[0.96559685] [1.1175824 ]][[0.96586376] [1.1170965 ]][[0.96606874] [1.1165627 ]][[0.9663186] [1.1160513]][[0.9666391] [1.115657 ]][[0.9669906] [1.1152539]][[0.9672586] [1.1147828]][[0.96747535] [1.1142911 ]][[0.96772087] [1.1137964 ]][[0.9678967] [1.1133184]][[0.9680197] [1.1128014]][[0.96819115] [1.1123333 ]][[0.9685254] [1.1119206]][[0.9688449] [1.1115682]][[0.9692566] [1.1112632]][[0.9695787] [1.1108729]][[0.96990496] [1.1104426 ]][[0.9701767] [1.1099671]][[0.97038585] [1.1094421 ]][[0.97063977] [1.1089386 ]][[0.97096425] [1.1085516 ]][[0.9713196] [1.108155 ]][[0.97159094] [1.1076891 ]][[0.9718106] [1.1072018]][[0.9720589] [1.1067109]][[0.97223705] [1.1062363 ]][[0.972362 ] [1.1057218]][[0.9725354] [1.105256 ]][[0.97287214] [1.1048453 ]][[0.97319394] [1.1044949 ]][[0.9736082] [1.1041918]][[0.97393245] [1.1038026 ]][[0.97426075] [1.103373  ]][[0.9745343] [1.1028978]][[0.9747449] [1.1023726]][[0.9750004] [1.1018687]][[0.97532666] [1.1014818 ]][[0.9756838] [1.101085 ]][[0.97595656] [1.1006185 ]][[0.9761774] [1.1001303]][[0.97642696] [1.0996383 ]][[0.97660613] [1.0991627 ]][[0.97673184] [1.0986469 ]][[0.9769062] [1.0981798]][[0.97724444] [1.0977681 ]][[0.9775677] [1.0974168]][[0.97798365] [1.0971128 ]][[0.9783093] [1.0967225]][[0.97863895] [1.0962915 ]][[0.97891366] [1.0958146 ]][[0.9791252] [1.0952876]][[0.9793818] [1.0947818]][[0.9797094] [1.0943935]][[0.980068 ] [1.0939952]][[0.9803419] [1.093527 ]][[0.9805637] [1.0930369]][[0.9808143] [1.092543 ]][[0.98099416] [1.0920655 ]][[0.9811204] [1.0915476]][[0.98129547] [1.0910786 ]][[0.98163503] [1.0906653 ]][[0.9819595] [1.0903126]][[0.9823771] [1.0900074]][[0.982704 ] [1.0896155]][[0.98303497] [1.0891827 ]][[0.9833107] [1.0887039]][[0.9835231] [1.0881746]][[0.9837806] [1.0876666]][[0.98410946] [1.0872767 ]][[0.9844695] [1.0868767]][[0.9847444] [1.0864065]][[0.98496705] [1.0859143 ]][[0.9851215] [1.0853895]][[0.98521465] [1.0848839 ]][[0.98526263] [1.0843405 ]][[0.9853675] [1.0838485]][[0.98564464] [1.0834144 ]][[0.985913 ] [1.0830432]][[0.98628056] [1.0827215 ]][[0.98656225] [1.0823141 ]][[0.98685265] [1.0818672 ]][[0.9870918] [1.0813751]][[0.987271 ] [1.0808336]][[0.987499 ] [1.0803145]][[0.9878016] [1.0799148]][[0.9881382] [1.0795059]][[0.9883919] [1.079027 ]][[0.98859525] [1.0785269 ]][[0.9887322] [1.0779945]][[0.98880947] [1.077482  ]][[0.988843] [1.076932]][[0.98893505] [1.076434  ]][[0.9892014] [1.0759947]][[0.9894601] [1.0756187]][[0.98981947] [1.0752928 ]][[0.9900935] [1.0748812]][[0.9903772] [1.0744301]][[0.9906102] [1.073934 ]][[0.9907838] [1.0733883]][[0.991007 ] [1.0728655]][[0.9913056] [1.0724627]][[0.99163884] [1.0720507 ]][[0.99188936] [1.0715687 ]][[0.9920898] [1.0710654]][[0.9922239] [1.0705299]][[0.9922984] [1.0700145]][[0.99232936] [1.0694615 ]][[0.9925026] [1.0690948]][[0.9928425] [1.0687736]][[0.99316746] [1.0685041 ]][[0.9935868] [1.068274 ]][[0.9939147] [1.0679483]][[0.994247 ] [1.0675743]][[0.9945237] [1.0671471]][[0.994794 ] [1.0667945]][[0.99510443] [1.0664454 ]][[0.99548185] [1.0661991 ]][[0.9958862] [1.065928 ]][[0.99620056] [1.0655723 ]][[0.9964585] [1.0651824]][[0.9966442] [1.0647488]][[0.996765] [1.064325]][[0.99683756] [1.0638541 ]][[0.9970487] [1.0635617]][[0.9974231] [1.0633075]][[0.9977792] [1.0630984]][[0.9982269] [1.0629227]][[0.9985802] [1.0626456]][[0.99893546] [1.062315  ]][[0.9992328] [1.0619266]][[0.9995218] [1.061609 ]][[0.99984914] [1.0612912 ]][[1.0002712] [1.0611362]][[1.000716 ] [1.0609472]][[1.0010666] [1.060665 ]][[1.001357 ] [1.0603411]][[1.0015719] [1.0599667]][[1.0017189] [1.0595961]][[1.0018148] [1.0591727]][[1.0020474] [1.0589236]][[1.0024415] [1.0587083]][[1.0028155] [1.0585343]][[1.0032796] [1.0583903]][[1.0036476] [1.0581412]][[1.004016 ] [1.0578357]][[1.0043253] [1.0574696]][[1.004625 ] [1.0571722]][[1.0049622] [1.0568725]][[1.0053961] [1.0568948]][[1.0058516] [1.0568653]][[1.0062118] [1.0567269]][[1.0065107] [1.0565325]][[1.0067333] [1.0562745]][[1.006887 ] [1.0560088]][[1.006989] [1.05568 ]][[1.0072273] [1.0555158]][[1.0076271] [1.055377 ]][[1.0080081] [1.0553273]][[1.0084788] [1.0552952]][[1.0088526] [1.0551469]][[1.0092264] [1.0549321]][[1.0095404] [1.0546478]][[1.0098444] [1.0544239]][[1.0101857] [1.0541905]][[1.0105944] [1.0542095]][[1.0110273] [1.0541769]][[1.0113671] [1.0540357]][[1.0116476] [1.0538386]][[1.0118533] [1.0535783]][[1.0119919] [1.0533103]][[1.0120801] [1.0529794]][[1.0122222] [1.0526787]][[1.0124319] [1.0524013]][[1.0126418] [1.0522269]][[1.0129592] [1.0520825]][[1.0131948] [1.0518332]][[1.0134444] [1.0515271]][[1.0136464] [1.0511606]][[1.0138496] [1.0508628]][[1.0141006] [1.0505627]][[1.0143317] [1.050424 ]][[1.0146053] [1.0502493]][[1.0148011] [1.0499797]][[1.0149521] [1.0496669]][[1.0150409] [1.049302 ]][[1.0150738] [1.0489398]][[1.0150667] [1.0485238]][[1.0151235] [1.0481465]][[1.0152568] [1.0478001]][[1.015398 ] [1.0475638]][[1.0156574] [1.047589 ]][[1.0158404] [1.0474919]][[1.0160428] [1.0473231]][[1.0162022] [1.04708  ]][[1.0163673] [1.0468934]][[1.0165842] [1.0466933]][[1.0168144] [1.0467076]][[1.0170875] [1.0466708]][[1.0173205] [1.0467374]][[1.0175047] [1.0467273]][[1.0176232] [1.0466349]][[1.0176827] [1.0465182]][[1.0176992] [1.0463231]][[1.0177777] [1.0461447]][[1.0178423] [1.0459275]][[1.0179218] [1.0458076]][[1.0180101] [1.0459336]][[1.0180387] [1.0459274]][[1.0181025] [1.0458404]][[1.0181369] [1.0456709]][[1.0181894] [1.0455505]][[1.0181773] [1.0453405]][[1.0182015] [1.0453459]][[1.0182896] [1.045301 ]][[1.018356 ] [1.0453603]][[1.0183899] [1.0453436]][[1.0183729] [1.0452454]][[1.01831  ] [1.0451235]][[1.0182161] [1.0449237]][[1.0182813] [1.044876 ]][[1.018334 ] [1.0447767]][[1.0184029] [1.0447627]][[1.0184819] [1.0449835]][[1.0185018] [1.0450627]][[1.0185578] [1.0450526]][[1.0185851] [1.0449526]][[1.0186315] [1.0448947]][[1.0186133] [1.0447412]][[1.0186324] [1.0447968]][[1.0187162] [1.0447974]][[1.0187788] [1.0448974]][[1.0188091] [1.0449176]][[1.0187885] [1.0448526]][[1.0187219] [1.0447606]][[1.0186247] [1.044588 ]][[1.0186877] [1.0445645]][[1.0187385] [1.044487 ]][[1.0188057] [1.0444926]][[1.0188832] [1.0447305]][[1.0189015] [1.0448254]][[1.0189563] [1.0448296]][[1.0189824] [1.0447425]][[1.0190278] [1.0446962]][[1.0190085] [1.0445534]][[1.0190266] [1.0446184]][[1.0191101] [1.0446273]][[1.0191722] [1.0447348]][[1.019202 ] [1.0447618]][[1.0191805] [1.0447031]][[1.0191131] [1.0446168]][[1.0190147] [1.0444494]][[1.0189908] [1.044296 ]][[1.0189632] [1.0441016]][[1.0189601] [1.0440018]][[1.0189743] [1.044145 ]][[1.0189353] [1.0441546]][[1.0189389] [1.0440822]][[1.0189186] [1.0439262]][[1.0189224] [1.0438179]][[1.0188652] [1.0436193]][[1.0188495] [1.0436339]][[1.0189029] [1.0435977]][[1.0189378] [1.0436645]][[1.018943 ] [1.0436547]][[1.0188991] [1.043563 ]][[1.0188111] [1.043447 ]][[1.018694 ] [1.0432531]][[1.0187411] [1.0432101]][[1.0187774] [1.0431153]][[1.018832] [1.043105]][[1.0188981] [1.0433282]][[1.0189056] [1.04341  ]][[1.0189513] [1.0434026]][[1.0189688] [1.0433053]][[1.0190067] [1.0432497]][[1.0189799] [1.0430988]][[1.0189917] [1.043156 ]][[1.0190703] [1.0431582]][[1.0191278] [1.0432593]][[1.0191532] [1.0432806]][[1.0191272] [1.0432171]][[1.0190551] [1.0431265]][[1.0189521] [1.0429554]][[1.0190127] [1.0429329]][[1.0190611] [1.0428565]][[1.0191833] [1.0429771]][[1.0193105] [1.0433171]][[1.0193726] [1.0435044]][[1.0194676] [1.0435922]][[1.0195295] [1.0435809]][[1.0196074] [1.0436027]][[1.0196164] [1.0435216]][[1.0196606] [1.0436411]][[1.0197687] [1.0436994]][[1.0198528] [1.0438508]][[1.0199019] [1.0439175]][[1.019897 ] [1.0438951]][[1.0198436] [1.0438417]][[1.0197572] [1.0437044]][[1.0197451] [1.0435781]][[1.0197282] [1.0434084]][[1.0197351] [1.0433304]][[1.0197586] [1.043492 ]][[1.019727 ] [1.0435188]][[1.0196534] [1.0434191]][[1.0195633] [1.0432391]][[1.0195045] [1.0431089]][[1.01939  ] [1.0428913]][[1.0193232] [1.0428877]][[1.0193319] [1.0428352]][[1.0193264] [1.0428869]][[1.0192946] [1.042864 ]][[1.0192165] [1.042761 ]][[1.019097] [1.042635]][[1.0189794] [1.0425689]][[1.0190288] [1.0426403]][[1.019067 ] [1.0426487]][[1.019181 ] [1.0428448]][[1.019301 ] [1.0432516]][[1.0193561] [1.0434996]][[1.0194453] [1.0436423]][[1.0195016] [1.0436807]][[1.0195748] [1.0437471]][[1.0195787] [1.0437065]][[1.0196189] [1.0438617]][[1.0197241] [1.0439523]][[1.0198054] [1.0441325]][[1.0198517] [1.0442255]][[1.0198437] [1.0442269]][[1.0197868] [1.044195 ]][[1.019697 ] [1.0440775]][[1.0196826] [1.043969 ]][[1.0196635] [1.0438155]][[1.0196686] [1.043752 ]][[1.0196908] [1.0439255]][[1.0196573] [1.0439637]][[1.0195814] [1.0438746]][[1.0194889] [1.0437045]][[1.0194284] [1.0435832]][[1.0193114] [1.0433737]][[1.019243 ] [1.0433769]][[1.019251 ] [1.0433307]][[1.0192447] [1.0433875]][[1.0192119] [1.0433697]][[1.0191324] [1.0432714]][[1.0190108] [1.0431498]][[1.0188624] [1.0429516]][[1.0188859] [1.0429035]][[1.0189008] [1.0428046]][[1.0189946] [1.0429035]][[1.0190967] [1.0432223]][[1.019135 ] [1.0433915]][[1.0192095] [1.0434636]][[1.0192523] [1.0434388]][[1.0193137] [1.0434481]][[1.0193062] [1.0433567]][[1.0193365] [1.0434653]][[1.0194336] [1.0435141]][[1.0195076] [1.0436563]][[1.019547 ] [1.0437155]][[1.0195321] [1.0436867]][[1.0194684] [1.0436279]][[1.0193719] [1.0434864]][[1.0194429] [1.043489 ]][[1.0195006] [1.0434358]][[1.0195752] [1.0434622]][[1.0196601] [1.0437155]][[1.0196825] [1.0438259]][[1.0196565] [1.0438024]][[1.0196087] [1.0436916]][[1.0195886] [1.0436236]][[1.0195074] [1.0434626]][[1.0194715] [1.0435085]][[1.0195096] [1.043501 ]][[1.0195302] [1.0435922]][[1.0195214] [1.0436056]][[1.0194628] [1.0435358]][[1.0193596] [1.0434401]][[1.0192273] [1.0432656]][[1.019267 ] [1.0432383]][[1.0192964] [1.0431582]][[1.0193456] [1.0431602]][[1.0194077] [1.0433912]][[1.0194094] [1.0434818]][[1.0194514] [1.0434834]][[1.0194646] [1.0433954]][[1.0194997] [1.0433478]][[1.0194677] [1.0432054]][[1.0194764] [1.0432676]][[1.019555 ] [1.0432749]][[1.019612 ] [1.0433793]][[1.0196357] [1.0434046]][[1.0196062] [1.0433457]][[1.019529 ] [1.0432597]][[1.0194198] [1.0430942]][[1.0194812] [1.0430747]][[1.01953  ] [1.0430019]][[1.0195969] [1.0430104]][[1.0196751] [1.0432469]][[1.0196909] [1.0433425]][[1.0196583] [1.043306 ]][[1.0196043] [1.0431839]][[1.0195789] [1.0431056]][[1.0194923] [1.0429356]][[1.019452 ] [1.0429728]][[1.0194868] [1.0429577]][[1.0195043] [1.0430417]][[1.0194924] [1.0430487]][[1.0194305] [1.0429736]][[1.0193237] [1.0428731]][[1.0191877] [1.0426946]][[1.0192258] [1.0426632]][[1.0192538] [1.0425797]][[1.0193613] [1.042691 ]][[1.0194759] [1.0430192]][[1.0195243] [1.0431978]][[1.0196089] [1.0432789]][[1.0196601] [1.043263 ]][[1.0197296] [1.04328  ]][[1.0197281] [1.0431962]][[1.0197645] [1.0433103]][[1.0198689] [1.0433645]][[1.019949 ] [1.0435108]][[1.0199932] [1.043574 ]][[1.0199816] [1.0435497]][[1.0199199] [1.0434949]][[1.0198241] [1.0433578]][[1.0198069] [1.0432317]][[1.0197849] [1.043063 ]][[1.0197883] [1.042985 ]][[1.0198094] [1.0431429]][[1.0197732] [1.0431683]][[1.0196934] [1.0430691]][[1.0195965] [1.0428909]][[1.0195327] [1.0427618]][[1.0194107] [1.0425466]][[1.0193391] [1.0425425]][[1.0193465] [1.0424902]][[1.0193392] [1.0425406]][[1.0193046] [1.0425175]][[1.0192218] [1.0424156]][[1.0190955] [1.042291 ]][[1.0189716] [1.0422256]][[1.0190223] [1.0422956]][[1.0190617] [1.0423034]][[1.0191803] [1.0424964]][[1.0193053] [1.0428972]][[1.0193623] [1.0431414]][[1.0194551] [1.0432819]][[1.0195135] [1.0433196]][[1.0195897] [1.0433849]][[1.0195934] [1.0433449]][[1.019635 ] [1.0434977]][[1.0197448] [1.043587 ]][[1.0198296] [1.0437645]][[1.0198778] [1.043856 ]][[1.0198692] [1.0438575]][[1.0198095] [1.043826 ]][[1.0197152] [1.0437101]][[1.0197   ] [1.0436032]][[1.0196799] [1.0434518]][[1.0196851] [1.0433891]][[1.0197082] [1.0435601]][[1.0196731] [1.0435977]][[1.0195937] [1.0435098]][[1.0194969] [1.0433421]][[1.0194335] [1.0432224]][[1.0193111] [1.043016 ]][[1.0192394] [1.043019 ]][[1.0192478] [1.0429735]][[1.0192411] [1.0430295]][[1.0192068] [1.0430119]][[1.0191234] [1.042915 ]][[1.0189962] [1.0427951]][[1.0188408] [1.0425996]][[1.0188653] [1.0425522]][[1.0188808] [1.0424547]][[1.0189791] [1.0425522]][[1.0190859] [1.0428666]][[1.0191259] [1.0430334]][[1.0192039] [1.0431044]][[1.0192486] [1.04308  ]][[1.0193127] [1.0430892]][[1.0193049] [1.0429989]][[1.0193366] [1.0431061]][[1.0194383] [1.0431544]][[1.0195156] [1.0432945]][[1.0195568] [1.0433528]][[1.0195411] [1.0433245]][[1.0194746] [1.0432664]][[1.0193737] [1.0431268]][[1.0194479] [1.0431294]][[1.0195082] [1.043077 ]][[1.0195862] [1.043103 ]][[1.019675 ] [1.0433528]][[1.0196985] [1.0434617]][[1.0196713] [1.0434384]][[1.0196213] [1.0433292]][[1.0196003] [1.0432621]][[1.0195153] [1.0431033]][[1.0194777] [1.0431486]][[1.0195175] [1.0431412]][[1.0195391] [1.0432312]][[1.0195298] [1.0432444]][[1.0194685] [1.0431756]][[1.0193607] [1.043081 ]][[1.0192223] [1.0429088]][[1.0192637] [1.0428818]][[1.0192945] [1.0428028]][[1.019346 ] [1.0428048]][[1.019411 ] [1.0430328]][[1.0194128] [1.043122 ]][[1.0194566] [1.0431236]][[1.0194705] [1.0430368]][[1.019507 ] [1.0429899]][[1.0194737] [1.0428493]][[1.0194827] [1.0429107]][[1.0195649] [1.0429178]][[1.0196245] [1.0430208]][[1.0196494] [1.0430458]][[1.0196186] [1.0429877]][[1.0195378] [1.042903 ]][[1.0194236] [1.0427395]][[1.0194877] [1.0427203]][[1.0195389] [1.0426484]][[1.0196089] [1.0426568]][[1.0196905] [1.0428902]][[1.019707 ] [1.0429845]][[1.019673 ] [1.0429485]][[1.0196166] [1.0428281]][[1.0195901] [1.0427507]][[1.0194995] [1.042583 ]][[1.0194573] [1.0426197]][[1.0194937] [1.0426047]][[1.019512 ] [1.0426877]][[1.0194995] [1.0426946]][[1.0194348] [1.0426204]][[1.0193232] [1.0425212]][[1.0192121] [1.0424781]][[1.01928 ] [1.042567]][[1.0193343] [1.0425925]][[1.0194693] [1.0427995]][[1.0196096] [1.0432106]][[1.0196785] [1.0434653]][[1.0196915] [1.0435739]][[1.0196772] [1.0435838]][[1.0196887] [1.0436237]][[1.0196321] [1.0435618]][[1.0196207] [1.0436932]][[1.0196851] [1.0437635]][[1.0197287] [1.043923 ]][[1.0197388] [1.0439991]][[1.0196941] [1.0439873]][[1.0196003] [1.0439444]][[1.0194739] [1.043819 ]][[1.0194321] [1.0437034]][[1.0193877] [1.043545 ]][[1.019372 ] [1.0434752]][[1.0193768] [1.0436376]][[1.0193233] [1.0436685]][[1.0193183] [1.0436178]][[1.0192877] [1.0434843]][[1.0192846] [1.0433952]][[1.0192144] [1.0432171]][[1.019191] [1.043244]][[1.0192451] [1.0432203]][[1.0192794] [1.0432951]][[1.0192808] [1.043295 ]][[1.019228 ] [1.0432147]][[1.0191265] [1.04311  ]][[1.018993] [1.042929]][[1.0190426] [1.0428935]][[1.0190805] [1.0428071]][[1.0192015] [1.042913 ]][[1.0193295] [1.0432327]][[1.0193868] [1.0434054]][[1.0194815] [1.0434825]][[1.0195407] [1.0434643]][[1.0196186] [1.0434788]][[1.0196209] [1.0433943]][[1.019663] [1.043505]][[1.0197765] [1.0435567]][[1.019864 ] [1.0436993]][[1.0199133] [1.0437602]][[1.0199034] [1.043735 ]][[1.0198402] [1.0436801]][[1.019741] [1.043544]][[1.0197245] [1.043419 ]][[1.0197028] [1.0432521]][[1.0197078] [1.0431745]][[1.0197314] [1.0433294]][[1.0196943] [1.0433538]][[1.019611 ] [1.0432556]][[1.0195096] [1.0430796]][[1.019443 ] [1.0429521]][[1.0193149] [1.0427397]][[1.0192398] [1.0427353]][[1.0192482] [1.0426836]][[1.0192411] [1.042733 ]][[1.019205 ] [1.0427101]][[1.0191178] [1.0426095]][[1.0189848] [1.0424865]][[1.0188541] [1.0424219]][[1.0189081] [1.0424907]][[1.01895  ] [1.0424984]][[1.0190755] [1.0426883]][[1.0192078] [1.043083 ]][[1.0192683] [1.0433234]][[1.0193665] [1.0434617]][[1.0194284] [1.0434988]][[1.0195091] [1.043563 ]][[1.0195131] [1.0435236]][[1.0195572] [1.0436741]][[1.0196733] [1.043762 ]][[1.0197631] [1.0439367]][[1.0198141] [1.0440269]][[1.0198051] [1.0440282]][[1.0197421] [1.0439972]][[1.0196426] [1.043883 ]][[1.0196266] [1.0437776]][[1.0196054] [1.0436285]][[1.019611 ] [1.0435667]][[1.0196354] [1.0437353]][[1.0195984] [1.0437722]][[1.0195146] [1.0436857]][[1.0194123] [1.0435203]][[1.0193454] [1.0434023]][[1.0192162] [1.0431988]][[1.0191406] [1.0432018]][[1.0191494] [1.0431569]][[1.0191424] [1.043212 ]][[1.0191061] [1.0431947]][[1.0190182] [1.0430992]][[1.0188838] [1.042981 ]][[1.0187197] [1.0427884]][[1.0187455] [1.0427418]][[1.018762 ] [1.0426456]][[1.0188657] [1.0427417]][[1.0189785] [1.0430515]][[1.0190208] [1.0432159]][[1.019103] [1.043286]][[1.0191503] [1.0432619]][[1.0192181] [1.043271 ]][[1.0192097] [1.043182 ]][[1.0192432] [1.0432876]][[1.0193505] [1.0433352]][[1.0194322] [1.0434735]][[1.0194756] [1.043531 ]][[1.0194591] [1.043503 ]][[1.0193889] [1.0434458]][[1.0192823] [1.0433083]][[1.0193608] [1.0433109]][[1.0194244] [1.0432591]][[1.0195068] [1.0432848]][[1.0196005] [1.0435311]][[1.0196253] [1.0436383]][[1.0195966] [1.0436155]][[1.0195438] [1.0435078]][[1.0195216] [1.0434417]][[1.019432 ] [1.0432851]][[1.0193924] [1.0433297]][[1.0194343] [1.0433224]][[1.0194571] [1.0434111]][[1.0194473] [1.0434241]][[1.0193827] [1.0433563]][[1.0192688] [1.0432631]][[1.0191226] [1.0430932]][[1.0191664] [1.0430666]][[1.0191988] [1.0429888]][[1.0192531] [1.0429908]][[1.0193217] [1.0432156]][[1.0193236] [1.0433037]][[1.01937  ] [1.0433053]][[1.0193845] [1.0432197]][[1.0194231] [1.0431733]][[1.0193878] [1.0430347]][[1.0193975] [1.0430952]][[1.0194842] [1.0431024]][[1.0195471] [1.0432041]][[1.0195733] [1.0432286]][[1.0195408] [1.0431713]][[1.0194556] [1.0430876]][[1.019335 ] [1.0429264]][[1.0194027] [1.0429075]][[1.0194566] [1.0428365]][[1.0195304] [1.0428448]][[1.0196166] [1.043075 ]][[1.019634 ] [1.0431681]][[1.0195981] [1.0431325]][[1.0195386] [1.0430137]][[1.0195106] [1.0429374]][[1.019415 ] [1.0427719]][[1.0193706] [1.0428082]][[1.019409 ] [1.0427934]][[1.0194283] [1.0428752]][[1.0194151] [1.0428821]][[1.019347 ] [1.0428089]]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;神经网络模型的效果和优化目标是通过损失函数（loss function）来定义的。&lt;/p&gt;
&lt;h2 id=&quot;经典损失函数&quot;&gt;&lt;a href=&quot;#经典损失函数&quot; class=&quot;headerlink&quot; title=&quot;经典损失函数&quot;&gt;&lt;/a&gt;经典损失函数&lt;/h2&gt;&lt;p&gt;分类问题和
      
    
    </summary>
    
      <category term="Tensorflow" scheme="http://yoururl.com/categories/Tensorflow/"/>
    
    
      <category term="Tensorflow" scheme="http://yoururl.com/tags/Tensorflow/"/>
    
  </entry>
  
</feed>
